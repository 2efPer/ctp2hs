{-# LANGUAGE DeriveGeneric            #-}
{-# LANGUAGE DuplicateRecordFields    #-}
{-# LANGUAGE OverloadedStrings        #-}
{-# OPTIONS_GHC -fno-warn-orphans     #-}

module Bindings.Ctp.Struct where

import           Bindings.Ctp.Marshal
import qualified Codec.Text.IConv          as IConv
import qualified Data.ByteString           as B
import qualified Data.ByteString.Lazy      as BL
import           Data.Text                 (Text)
import qualified Data.Text.Lazy            as TL
import           Data.Text.Lazy.Encoding   (decodeUtf8)
import           Data.Default
import           Data.Int (Int16)
import           Foreign.C.String
import           Foreign.Storable
import           GHC.Generics

#include "ctp/ThostFtdcUserApiStruct.h"

peekGbkText :: CString -> IO Text
peekGbkText = fmap (TL.toStrict . decodeUtf8 . IConv.convert "GBK" "UTF8" . BL.fromStrict) . B.packCString

instance Default Char where
  def = '\NUL'

instance Default Text where
  def = ""

data CThostFtdcMarketDataBaseField = CThostFtdcMarketDataBaseField
  { preDelta           :: Double
  , preOpenInterest    :: Double
  , preClosePrice      :: Double
  , preSettlementPrice :: Double
  , tradingDay         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataBaseField

{#pointer *CThostFtdcMarketDataBaseField as CThostFtdcMarketDataBaseFieldPtr -> CThostFtdcMarketDataBaseField#}

data CThostFtdcExchangeMarginRateField = CThostFtdcExchangeMarginRateField
  { shortMarginRatioByVolume :: Double
  , shortMarginRatioByMoney  :: Double
  , longMarginRatioByVolume  :: Double
  , longMarginRatioByMoney   :: Double
  , hedgeFlag                :: Char
  , instrumentID             :: Text
  , brokerID                 :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeMarginRateField

{#pointer *CThostFtdcExchangeMarginRateField as CThostFtdcExchangeMarginRateFieldPtr -> CThostFtdcExchangeMarginRateField#}

data CThostFtdcOrderActionField = CThostFtdcOrderActionField
  { macAddress        :: Text
  , iPAddress         :: Text
  , investUnitID      :: Text
  , branchID          :: Text
  , instrumentID      :: Text
  , statusMsg         :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , orderLocalID      :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , volumeChange      :: Int
  , limitPrice        :: Double
  , actionFlag        :: Char
  , orderSysID        :: Text
  , exchangeID        :: Text
  , sessionID         :: Int
  , frontID           :: Int
  , requestID         :: Int
  , orderRef          :: Text
  , orderActionRef    :: Int
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOrderActionField

{#pointer *CThostFtdcOrderActionField as CThostFtdcOrderActionFieldPtr -> CThostFtdcOrderActionField#}

data CThostFtdcUserRightField = CThostFtdcUserRightField
  { isForbidden   :: Int
  , userRightType :: Char
  , userID        :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcUserRightField

{#pointer *CThostFtdcUserRightField as CThostFtdcUserRightFieldPtr -> CThostFtdcUserRightField#}

data CThostFtdcUserPasswordUpdateField = CThostFtdcUserPasswordUpdateField
  { newPassword :: Text
  , oldPassword :: Text
  , userID      :: Text
  , brokerID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcUserPasswordUpdateField

{#pointer *CThostFtdcUserPasswordUpdateField as CThostFtdcUserPasswordUpdateFieldPtr -> CThostFtdcUserPasswordUpdateField#}

data CThostFtdcExchangeQuoteField = CThostFtdcExchangeQuoteField
  { macAddress        :: Text
  , iPAddress         :: Text
  , branchID          :: Text
  , forQuoteSysID     :: Text
  , bidOrderSysID     :: Text
  , askOrderSysID     :: Text
  , sequenceNo        :: Int
  , clearingPartID    :: Text
  , quoteStatus       :: Char
  , cancelTime        :: Text
  , insertTime        :: Text
  , insertDate        :: Text
  , quoteSysID        :: Text
  , settlementID      :: Int
  , tradingDay        :: Text
  , orderSubmitStatus :: Char
  , notifySequence    :: Int
  , installID         :: Int
  , traderID          :: Text
  , exchangeInstID    :: Text
  , clientID          :: Text
  , participantID     :: Text
  , exchangeID        :: Text
  , quoteLocalID      :: Text
  , bidHedgeFlag      :: Char
  , askHedgeFlag      :: Char
  , bidOffsetFlag     :: Char
  , askOffsetFlag     :: Char
  , businessUnit      :: Text
  , requestID         :: Int
  , bidVolume         :: Int
  , askVolume         :: Int
  , bidPrice          :: Double
  , askPrice          :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeQuoteField

{#pointer *CThostFtdcExchangeQuoteField as CThostFtdcExchangeQuoteFieldPtr -> CThostFtdcExchangeQuoteField#}

data CThostFtdcQryDepthMarketDataField = CThostFtdcQryDepthMarketDataField
  { exchangeID   :: Text
  , instrumentID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryDepthMarketDataField

{#pointer *CThostFtdcQryDepthMarketDataField as CThostFtdcQryDepthMarketDataFieldPtr -> CThostFtdcQryDepthMarketDataField#}

data CThostFtdcQryExchangeLockField = CThostFtdcQryExchangeLockField
  { traderID       :: Text
  , exchangeID     :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeLockField

{#pointer *CThostFtdcQryExchangeLockField as CThostFtdcQryExchangeLockFieldPtr -> CThostFtdcQryExchangeLockField#}

newtype CThostFtdcCurrTransferIdentityField = CThostFtdcCurrTransferIdentityField
  { identityID :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcCurrTransferIdentityField

{#pointer *CThostFtdcCurrTransferIdentityField as CThostFtdcCurrTransferIdentityFieldPtr -> CThostFtdcCurrTransferIdentityField#}

data CThostFtdcInstrumentOrderCommRateField = CThostFtdcInstrumentOrderCommRateField
  { orderActionCommByVolume :: Double
  , orderCommByVolume       :: Double
  , hedgeFlag               :: Char
  , exchangeID              :: Text
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentOrderCommRateField

{#pointer *CThostFtdcInstrumentOrderCommRateField as CThostFtdcInstrumentOrderCommRateFieldPtr -> CThostFtdcInstrumentOrderCommRateField#}

data CThostFtdcAccountregisterField = CThostFtdcAccountregisterField
  { bankAccType      :: Char
  , custType         :: Char
  , tID              :: Int
  , outDate          :: Text
  , regDate          :: Text
  , openOrDestroy    :: Char
  , currencyID       :: Text
  , customerName     :: Text
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , accountID        :: Text
  , brokerBranchID   :: Text
  , brokerID         :: Text
  , bankAccount      :: Text
  , bankBranchID     :: Text
  , bankID           :: Text
  , tradeDay         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcAccountregisterField

{#pointer *CThostFtdcAccountregisterField as CThostFtdcAccountregisterFieldPtr -> CThostFtdcAccountregisterField#}

data CThostFtdcExchangeOrderField = CThostFtdcExchangeOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , branchID            :: Text
  , sequenceNo          :: Int
  , clearingPartID      :: Text
  , activeTraderID      :: Text
  , cancelTime          :: Text
  , updateTime          :: Text
  , suspendTime         :: Text
  , activeTime          :: Text
  , insertTime          :: Text
  , insertDate          :: Text
  , volumeTotal         :: Int
  , volumeTraded        :: Int
  , orderType           :: Char
  , orderStatus         :: Char
  , orderSource         :: Char
  , orderSysID          :: Text
  , settlementID        :: Int
  , tradingDay          :: Text
  , notifySequence      :: Int
  , orderSubmitStatus   :: Char
  , installID           :: Int
  , traderID            :: Text
  , exchangeInstID      :: Text
  , clientID            :: Text
  , participantID       :: Text
  , exchangeID          :: Text
  , orderLocalID        :: Text
  , requestID           :: Int
  , businessUnit        :: Text
  , isAutoSuspend       :: Int
  , forceCloseReason    :: Char
  , stopPrice           :: Double
  , contingentCondition :: Char
  , minVolume           :: Int
  , volumeCondition     :: Char
  , gTDDate             :: Text
  , timeCondition       :: Char
  , volumeTotalOriginal :: Int
  , limitPrice          :: Double
  , combHedgeFlag       :: Text
  , combOffsetFlag      :: Text
  , direction           :: Char
  , orderPriceType      :: Char
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeOrderField

{#pointer *CThostFtdcExchangeOrderField as CThostFtdcExchangeOrderFieldPtr -> CThostFtdcExchangeOrderField#}

data CThostFtdcExchangeTradeField = CThostFtdcExchangeTradeField
  { tradeSource    :: Char
  , sequenceNo     :: Int
  , businessUnit   :: Text
  , clearingPartID :: Text
  , orderLocalID   :: Text
  , traderID       :: Text
  , priceSource    :: Char
  , tradeType      :: Char
  , tradeTime      :: Text
  , tradeDate      :: Text
  , volume         :: Int
  , price          :: Double
  , hedgeFlag      :: Char
  , offsetFlag     :: Char
  , exchangeInstID :: Text
  , tradingRole    :: Char
  , clientID       :: Text
  , participantID  :: Text
  , orderSysID     :: Text
  , direction      :: Char
  , tradeID        :: Text
  , exchangeID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeTradeField

{#pointer *CThostFtdcExchangeTradeField as CThostFtdcExchangeTradeFieldPtr -> CThostFtdcExchangeTradeField#}

data CThostFtdcInputOrderActionField = CThostFtdcInputOrderActionField
  { macAddress     :: Text
  , iPAddress      :: Text
  , investUnitID   :: Text
  , instrumentID   :: Text
  , userID         :: Text
  , volumeChange   :: Int
  , limitPrice     :: Double
  , actionFlag     :: Char
  , orderSysID     :: Text
  , exchangeID     :: Text
  , sessionID      :: Int
  , frontID        :: Int
  , requestID      :: Int
  , orderRef       :: Text
  , orderActionRef :: Int
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputOrderActionField

{#pointer *CThostFtdcInputOrderActionField as CThostFtdcInputOrderActionFieldPtr -> CThostFtdcInputOrderActionField#}

data CThostFtdcSyncingTradingCodeField = CThostFtdcSyncingTradingCodeField
  { branchID     :: Text
  , clientIDType :: Char
  , isActive     :: Int
  , clientID     :: Text
  , exchangeID   :: Text
  , brokerID     :: Text
  , investorID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingTradingCodeField

{#pointer *CThostFtdcSyncingTradingCodeField as CThostFtdcSyncingTradingCodeFieldPtr -> CThostFtdcSyncingTradingCodeField#}

data CThostFtdcBrokerWithdrawAlgorithmField = CThostFtdcBrokerWithdrawAlgorithmField
  { balanceAlgorithm        :: Char
  , fundMortgageRatio       :: Double
  , currencyID              :: Text
  , isBrokerUserEvent       :: Int
  , availIncludeCloseProfit :: Char
  , allWithoutTrade         :: Char
  , includeCloseProfit      :: Char
  , usingRatio              :: Double
  , withdrawAlgorithm       :: Char
  , brokerID                :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerWithdrawAlgorithmField

{#pointer *CThostFtdcBrokerWithdrawAlgorithmField as CThostFtdcBrokerWithdrawAlgorithmFieldPtr -> CThostFtdcBrokerWithdrawAlgorithmField#}

data CThostFtdcQryInstrumentStatusField = CThostFtdcQryInstrumentStatusField
  { exchangeInstID :: Text
  , exchangeID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInstrumentStatusField

{#pointer *CThostFtdcQryInstrumentStatusField as CThostFtdcQryInstrumentStatusFieldPtr -> CThostFtdcQryInstrumentStatusField#}

data CThostFtdcQryTraderOfferField = CThostFtdcQryTraderOfferField
  { traderID      :: Text
  , participantID :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTraderOfferField

{#pointer *CThostFtdcQryTraderOfferField as CThostFtdcQryTraderOfferFieldPtr -> CThostFtdcQryTraderOfferField#}

data CThostFtdcReqQueryAccountField = CThostFtdcReqQueryAccountField
  { tID              :: Int
  , requestID        :: Int
  , operNo           :: Text
  , secuPwdFlag      :: Char
  , bankPwdFlag      :: Char
  , bankSecuAcc      :: Text
  , brokerIDByBank   :: Text
  , bankSecuAccType  :: Char
  , deviceID         :: Text
  , bankAccType      :: Char
  , digest           :: Text
  , currencyID       :: Text
  , verifyCertNoFlag :: Char
  , userID           :: Text
  , installID        :: Int
  , futureSerial     :: Int
  , password         :: Text
  , accountID        :: Text
  , bankPassWord     :: Text
  , bankAccount      :: Text
  , custType         :: Char
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , customerName     :: Text
  , sessionID        :: Int
  , lastFragment     :: Char
  , plateSerial      :: Int
  , tradingDay       :: Text
  , bankSerial       :: Text
  , tradeTime        :: Text
  , tradeDate        :: Text
  , brokerBranchID   :: Text
  , brokerID         :: Text
  , bankBranchID     :: Text
  , bankID           :: Text
  , tradeCode        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqQueryAccountField

{#pointer *CThostFtdcReqQueryAccountField as CThostFtdcReqQueryAccountFieldPtr -> CThostFtdcReqQueryAccountField#}

data CThostFtdcCommPhaseField = CThostFtdcCommPhaseField
  { systemID    :: Text
  , commPhaseNo :: Int16
  , tradingDay  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCommPhaseField

{#pointer *CThostFtdcCommPhaseField as CThostFtdcCommPhaseFieldPtr -> CThostFtdcCommPhaseField#}

data CThostFtdcBrokerUserOTPParamField = CThostFtdcBrokerUserOTPParamField
  { oTPType      :: Char
  , lastSuccess  :: Int
  , lastDrift    :: Int
  , authKey      :: Text
  , serialNumber :: Text
  , oTPVendorsID :: Text
  , userID       :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerUserOTPParamField

{#pointer *CThostFtdcBrokerUserOTPParamField as CThostFtdcBrokerUserOTPParamFieldPtr -> CThostFtdcBrokerUserOTPParamField#}

data CThostFtdcExecOrderActionField = CThostFtdcExecOrderActionField
  { macAddress         :: Text
  , iPAddress          :: Text
  , investUnitID       :: Text
  , branchID           :: Text
  , instrumentID       :: Text
  , statusMsg          :: Text
  , actionType         :: Char
  , userID             :: Text
  , orderActionStatus  :: Char
  , businessUnit       :: Text
  , clientID           :: Text
  , participantID      :: Text
  , actionLocalID      :: Text
  , execOrderLocalID   :: Text
  , installID          :: Int
  , traderID           :: Text
  , actionTime         :: Text
  , actionDate         :: Text
  , actionFlag         :: Char
  , execOrderSysID     :: Text
  , exchangeID         :: Text
  , sessionID          :: Int
  , frontID            :: Int
  , requestID          :: Int
  , execOrderRef       :: Text
  , execOrderActionRef :: Int
  , investorID         :: Text
  , brokerID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExecOrderActionField

{#pointer *CThostFtdcExecOrderActionField as CThostFtdcExecOrderActionFieldPtr -> CThostFtdcExecOrderActionField#}

data CThostFtdcReqRepealField = CThostFtdcReqRepealField
  { transferStatus     :: Char
  , tID                :: Int
  , requestID          :: Int
  , operNo             :: Text
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , bankSecuAcc        :: Text
  , brokerIDByBank     :: Text
  , bankSecuAccType    :: Char
  , deviceID           :: Text
  , bankAccType        :: Char
  , digest             :: Text
  , message            :: Text
  , brokerFee          :: Double
  , custFee            :: Double
  , feePayFlag         :: Char
  , futureFetchAmount  :: Double
  , tradeAmount        :: Double
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , userID             :: Text
  , futureSerial       :: Int
  , installID          :: Int
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , custType           :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  , futureRepealSerial :: Int
  , bankRepealSerial   :: Text
  , plateRepealSerial  :: Int
  , brokerRepealFlag   :: Char
  , bankRepealFlag     :: Char
  , repealedTimes      :: Int
  , repealTimeInterval :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcReqRepealField

{#pointer *CThostFtdcReqRepealField as CThostFtdcReqRepealFieldPtr -> CThostFtdcReqRepealField#}

data CThostFtdcTradingNoticeField = CThostFtdcTradingNoticeField
  { fieldContent   :: Text
  , sequenceNo     :: Int
  , sendTime       :: Text
  , userID         :: Text
  , sequenceSeries :: Int16
  , investorID     :: Text
  , investorRange  :: Char
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingNoticeField

{#pointer *CThostFtdcTradingNoticeField as CThostFtdcTradingNoticeFieldPtr -> CThostFtdcTradingNoticeField#}

data CThostFtdcInvestorGroupField = CThostFtdcInvestorGroupField
  { investorGroupName :: Text
  , investorGroupID   :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorGroupField

{#pointer *CThostFtdcInvestorGroupField as CThostFtdcInvestorGroupFieldPtr -> CThostFtdcInvestorGroupField#}

data CThostFtdcEWarrantOffsetField = CThostFtdcEWarrantOffsetField
  { volume       :: Int
  , hedgeFlag    :: Char
  , direction    :: Char
  , instrumentID :: Text
  , exchangeID   :: Text
  , investorID   :: Text
  , brokerID     :: Text
  , tradingDay   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcEWarrantOffsetField

{#pointer *CThostFtdcEWarrantOffsetField as CThostFtdcEWarrantOffsetFieldPtr -> CThostFtdcEWarrantOffsetField#}

data CThostFtdcQryStrikeOffsetField = CThostFtdcQryStrikeOffsetField
  { instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryStrikeOffsetField

{#pointer *CThostFtdcQryStrikeOffsetField as CThostFtdcQryStrikeOffsetFieldPtr -> CThostFtdcQryStrikeOffsetField#}

data CThostFtdcQryPartBrokerField = CThostFtdcQryPartBrokerField
  { participantID :: Text
  , brokerID      :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryPartBrokerField

{#pointer *CThostFtdcQryPartBrokerField as CThostFtdcQryPartBrokerFieldPtr -> CThostFtdcQryPartBrokerField#}

data CThostFtdcQryCombActionField = CThostFtdcQryCombActionField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryCombActionField

{#pointer *CThostFtdcQryCombActionField as CThostFtdcQryCombActionFieldPtr -> CThostFtdcQryCombActionField#}

data CThostFtdcBrokerDepositField = CThostFtdcBrokerDepositField
  { frozenMargin  :: Double
  , reserve       :: Double
  , available     :: Double
  , withdraw      :: Double
  , deposit       :: Double
  , balance       :: Double
  , closeProfit   :: Double
  , currMargin    :: Double
  , preBalance    :: Double
  , exchangeID    :: Text
  , participantID :: Text
  , brokerID      :: Text
  , tradingDay    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerDepositField

{#pointer *CThostFtdcBrokerDepositField as CThostFtdcBrokerDepositFieldPtr -> CThostFtdcBrokerDepositField#}

data CThostFtdcQryTraderField = CThostFtdcQryTraderField
  { traderID      :: Text
  , participantID :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTraderField

{#pointer *CThostFtdcQryTraderField as CThostFtdcQryTraderFieldPtr -> CThostFtdcQryTraderField#}

data CThostFtdcLimitAmountField = CThostFtdcLimitAmountField
  { longAmountFrozen :: Double
  , longAmount       :: Double
  , exchangeID       :: Text
  , investorID       :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLimitAmountField

{#pointer *CThostFtdcLimitAmountField as CThostFtdcLimitAmountFieldPtr -> CThostFtdcLimitAmountField#}

data CThostFtdcQryInstrumentField = CThostFtdcQryInstrumentField
  { productID      :: Text
  , exchangeInstID :: Text
  , exchangeID     :: Text
  , instrumentID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInstrumentField

{#pointer *CThostFtdcQryInstrumentField as CThostFtdcQryInstrumentFieldPtr -> CThostFtdcQryInstrumentField#}

data CThostFtdcDesignateField = CThostFtdcDesignateField
  { branchID         :: Text
  , statusMsg        :: Text
  , userProductInfo  :: Text
  , sessionID        :: Int
  , frontID          :: Int
  , insertTime       :: Text
  , insertDate       :: Text
  , settlementID     :: Int
  , tradingDay       :: Text
  , notifySequence   :: Int
  , designateStatus  :: Char
  , installID        :: Int
  , traderID         :: Text
  , clientID         :: Text
  , participantID    :: Text
  , exchangeID       :: Text
  , designateLocalID :: Text
  , designateType    :: Char
  , userID           :: Text
  , designateRef     :: Text
  , investorID       :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcDesignateField

{#pointer *CThostFtdcDesignateField as CThostFtdcDesignateFieldPtr -> CThostFtdcDesignateField#}

data CThostFtdcTradingAccountPasswordField = CThostFtdcTradingAccountPasswordField
  { currencyID :: Text
  , password   :: Text
  , accountID  :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingAccountPasswordField

{#pointer *CThostFtdcTradingAccountPasswordField as CThostFtdcTradingAccountPasswordFieldPtr -> CThostFtdcTradingAccountPasswordField#}

data CThostFtdcPositionProfitAlgorithmField = CThostFtdcPositionProfitAlgorithmField
  { currencyID :: Text
  , memo       :: Text
  , algorithm  :: Char
  , accountID  :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcPositionProfitAlgorithmField

{#pointer *CThostFtdcPositionProfitAlgorithmField as CThostFtdcPositionProfitAlgorithmFieldPtr -> CThostFtdcPositionProfitAlgorithmField#}

data CThostFtdcQryStockDisposalActionField = CThostFtdcQryStockDisposalActionField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryStockDisposalActionField

{#pointer *CThostFtdcQryStockDisposalActionField as CThostFtdcQryStockDisposalActionFieldPtr -> CThostFtdcQryStockDisposalActionField#}

data CThostFtdcErrStockDisposalActionField = CThostFtdcErrStockDisposalActionField
  { errorMsg               :: Text
  , errorID                :: Int
  , instrumentID           :: Text
  , userID                 :: Text
  , actionFlag             :: Char
  , stockDisposalSysID     :: Text
  , exchangeID             :: Text
  , sessionID              :: Int
  , frontID                :: Int
  , requestID              :: Int
  , stockDisposalRef       :: Text
  , stockDisposalActionRef :: Int
  , investorID             :: Text
  , brokerID               :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcErrStockDisposalActionField

{#pointer *CThostFtdcErrStockDisposalActionField as CThostFtdcErrStockDisposalActionFieldPtr -> CThostFtdcErrStockDisposalActionField#}

data CThostFtdcQryMMInstrumentCommissionRateField = CThostFtdcQryMMInstrumentCommissionRateField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryMMInstrumentCommissionRateField

{#pointer *CThostFtdcQryMMInstrumentCommissionRateField as CThostFtdcQryMMInstrumentCommissionRateFieldPtr -> CThostFtdcQryMMInstrumentCommissionRateField#}

data CThostFtdcExchangeExecOrderField = CThostFtdcExchangeExecOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , branchID            :: Text
  , sequenceNo          :: Int
  , clearingPartID      :: Text
  , execResult          :: Char
  , cancelTime          :: Text
  , insertTime          :: Text
  , insertDate          :: Text
  , execOrderSysID      :: Text
  , settlementID        :: Int
  , tradingDay          :: Text
  , notifySequence      :: Int
  , orderSubmitStatus   :: Char
  , installID           :: Int
  , traderID            :: Text
  , exchangeInstID      :: Text
  , clientID            :: Text
  , participantID       :: Text
  , exchangeID          :: Text
  , execOrderLocalID    :: Text
  , closeFlag           :: Char
  , reservePositionFlag :: Char
  , posiDirection       :: Char
  , actionType          :: Char
  , hedgeFlag           :: Char
  , offsetFlag          :: Char
  , businessUnit        :: Text
  , requestID           :: Int
  , volume              :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeExecOrderField

{#pointer *CThostFtdcExchangeExecOrderField as CThostFtdcExchangeExecOrderFieldPtr -> CThostFtdcExchangeExecOrderField#}

newtype CThostFtdcTransferQryDetailReqField = CThostFtdcTransferQryDetailReqField
  { futureAccount :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferQryDetailReqField

{#pointer *CThostFtdcTransferQryDetailReqField as CThostFtdcTransferQryDetailReqFieldPtr -> CThostFtdcTransferQryDetailReqField#}

data CThostFtdcTransferQryDetailRspField = CThostFtdcTransferQryDetailRspField
  { flag          :: Char
  , txAmount      :: Double
  , currencyCode  :: Text
  , certCode      :: Text
  , bankAccount   :: Text
  , bankBrchID    :: Text
  , bankID        :: Text
  , bankSerial    :: Int
  , futureAccount :: Text
  , futureID      :: Text
  , futureSerial  :: Int
  , tradeCode     :: Text
  , tradeTime     :: Text
  , tradeDate     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferQryDetailRspField

{#pointer *CThostFtdcTransferQryDetailRspField as CThostFtdcTransferQryDetailRspFieldPtr -> CThostFtdcTransferQryDetailRspField#}

data CThostFtdcQryMDTraderOfferField = CThostFtdcQryMDTraderOfferField
  { traderID      :: Text
  , participantID :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryMDTraderOfferField

{#pointer *CThostFtdcQryMDTraderOfferField as CThostFtdcQryMDTraderOfferFieldPtr -> CThostFtdcQryMDTraderOfferField#}

data CThostFtdcVerifyInvestorPasswordField = CThostFtdcVerifyInvestorPasswordField
  { password   :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcVerifyInvestorPasswordField

{#pointer *CThostFtdcVerifyInvestorPasswordField as CThostFtdcVerifyInvestorPasswordFieldPtr -> CThostFtdcVerifyInvestorPasswordField#}

data CThostFtdcExchangeMarginRateAdjustField = CThostFtdcExchangeMarginRateAdjustField
  { noShortMarginRatioByVolume   :: Double
  , noShortMarginRatioByMoney    :: Double
  , noLongMarginRatioByVolume    :: Double
  , noLongMarginRatioByMoney     :: Double
  , exchShortMarginRatioByVolume :: Double
  , exchShortMarginRatioByMoney  :: Double
  , exchLongMarginRatioByVolume  :: Double
  , exchLongMarginRatioByMoney   :: Double
  , shortMarginRatioByVolume     :: Double
  , shortMarginRatioByMoney      :: Double
  , longMarginRatioByVolume      :: Double
  , longMarginRatioByMoney       :: Double
  , hedgeFlag                    :: Char
  , instrumentID                 :: Text
  , brokerID                     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeMarginRateAdjustField

{#pointer *CThostFtdcExchangeMarginRateAdjustField as CThostFtdcExchangeMarginRateAdjustFieldPtr -> CThostFtdcExchangeMarginRateAdjustField#}

data CThostFtdcInstrumentCommissionRateField = CThostFtdcInstrumentCommissionRateField
  { bizType                 :: Char
  , exchangeID              :: Text
  , closeTodayRatioByVolume :: Double
  , closeTodayRatioByMoney  :: Double
  , closeRatioByVolume      :: Double
  , closeRatioByMoney       :: Double
  , openRatioByVolume       :: Double
  , openRatioByMoney        :: Double
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentCommissionRateField

{#pointer *CThostFtdcInstrumentCommissionRateField as CThostFtdcInstrumentCommissionRateFieldPtr -> CThostFtdcInstrumentCommissionRateField#}

data CThostFtdcQryExecOrderActionField = CThostFtdcQryExecOrderActionField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExecOrderActionField

{#pointer *CThostFtdcQryExecOrderActionField as CThostFtdcQryExecOrderActionFieldPtr -> CThostFtdcQryExecOrderActionField#}

data CThostFtdcErrExecOrderActionField = CThostFtdcErrExecOrderActionField
  { errorMsg           :: Text
  , errorID            :: Int
  , macAddress         :: Text
  , iPAddress          :: Text
  , investUnitID       :: Text
  , instrumentID       :: Text
  , userID             :: Text
  , actionFlag         :: Char
  , execOrderSysID     :: Text
  , exchangeID         :: Text
  , sessionID          :: Int
  , frontID            :: Int
  , requestID          :: Int
  , execOrderRef       :: Text
  , execOrderActionRef :: Int
  , investorID         :: Text
  , brokerID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcErrExecOrderActionField

{#pointer *CThostFtdcErrExecOrderActionField as CThostFtdcErrExecOrderActionFieldPtr -> CThostFtdcErrExecOrderActionField#}

data CThostFtdcQryParkedOrderActionField = CThostFtdcQryParkedOrderActionField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryParkedOrderActionField

{#pointer *CThostFtdcQryParkedOrderActionField as CThostFtdcQryParkedOrderActionFieldPtr -> CThostFtdcQryParkedOrderActionField#}

data CThostFtdcInvestorPositionDetailField = CThostFtdcInvestorPositionDetailField
  { closeAmount           :: Double
  , closeVolume           :: Int
  , settlementPrice       :: Double
  , lastSettlementPrice   :: Double
  , marginRateByVolume    :: Double
  , marginRateByMoney     :: Double
  , exchMargin            :: Double
  , margin                :: Double
  , positionProfitByTrade :: Double
  , positionProfitByDate  :: Double
  , closeProfitByTrade    :: Double
  , closeProfitByDate     :: Double
  , exchangeID            :: Text
  , combInstrumentID      :: Text
  , tradeType             :: Char
  , settlementID          :: Int
  , tradingDay            :: Text
  , openPrice             :: Double
  , volume                :: Int
  , tradeID               :: Text
  , openDate              :: Text
  , direction             :: Char
  , hedgeFlag             :: Char
  , investorID            :: Text
  , brokerID              :: Text
  , instrumentID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorPositionDetailField

{#pointer *CThostFtdcInvestorPositionDetailField as CThostFtdcInvestorPositionDetailFieldPtr -> CThostFtdcInvestorPositionDetailField#}

data CThostFtdcQryLimitPosiSField = CThostFtdcQryLimitPosiSField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLimitPosiSField

{#pointer *CThostFtdcQryLimitPosiSField as CThostFtdcQryLimitPosiSFieldPtr -> CThostFtdcQryLimitPosiSField#}

data CThostFtdcLimitPosiSField = CThostFtdcLimitPosiSField
  { openVolumeFrozen  :: Int
  , totalVolumeFrozen :: Int
  , openVolume        :: Int
  , totalVolume       :: Int
  , exchangeID        :: Text
  , instrumentID      :: Text
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLimitPosiSField

{#pointer *CThostFtdcLimitPosiSField as CThostFtdcLimitPosiSFieldPtr -> CThostFtdcLimitPosiSField#}

data CThostFtdcQryBrokerLimitPosiField = CThostFtdcQryBrokerLimitPosiField
  { exchangeID   :: Text
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerLimitPosiField

{#pointer *CThostFtdcQryBrokerLimitPosiField as CThostFtdcQryBrokerLimitPosiFieldPtr -> CThostFtdcQryBrokerLimitPosiField#}

data CThostFtdcInputQuoteActionField = CThostFtdcInputQuoteActionField
  { macAddress     :: Text
  , iPAddress      :: Text
  , clientID       :: Text
  , investUnitID   :: Text
  , instrumentID   :: Text
  , userID         :: Text
  , actionFlag     :: Char
  , quoteSysID     :: Text
  , exchangeID     :: Text
  , sessionID      :: Int
  , frontID        :: Int
  , requestID      :: Int
  , quoteRef       :: Text
  , quoteActionRef :: Int
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputQuoteActionField

{#pointer *CThostFtdcInputQuoteActionField as CThostFtdcInputQuoteActionFieldPtr -> CThostFtdcInputQuoteActionField#}

data CThostFtdcTransferBankToFutureRspField = CThostFtdcTransferBankToFutureRspField
  { currencyCode  :: Text
  , custFee       :: Double
  , tradeAmt      :: Double
  , futureAccount :: Text
  , retInfo       :: Text
  , retCode       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferBankToFutureRspField

{#pointer *CThostFtdcTransferBankToFutureRspField as CThostFtdcTransferBankToFutureRspFieldPtr -> CThostFtdcTransferBankToFutureRspField#}

newtype CThostFtdcQryExchangeSequenceField = CThostFtdcQryExchangeSequenceField
  { exchangeID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeSequenceField

{#pointer *CThostFtdcQryExchangeSequenceField as CThostFtdcQryExchangeSequenceFieldPtr -> CThostFtdcQryExchangeSequenceField#}

data CThostFtdcNotifySyncKeyField = CThostFtdcNotifySyncKeyField
  { errorMsg       :: Text
  , errorID        :: Int
  , tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , message        :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcNotifySyncKeyField

{#pointer *CThostFtdcNotifySyncKeyField as CThostFtdcNotifySyncKeyFieldPtr -> CThostFtdcNotifySyncKeyField#}

data CThostFtdcInputStockDisposalField = CThostFtdcInputStockDisposalField
  { exchangeID        :: Text
  , stockDisposalType :: Char
  , volume            :: Int
  , instrumentID      :: Text
  , userID            :: Text
  , stockDisposalRef  :: Text
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputStockDisposalField

{#pointer *CThostFtdcInputStockDisposalField as CThostFtdcInputStockDisposalFieldPtr -> CThostFtdcInputStockDisposalField#}

data CThostFtdcBatchOrderActionField = CThostFtdcBatchOrderActionField
  { macAddress        :: Text
  , iPAddress         :: Text
  , investUnitID      :: Text
  , statusMsg         :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , exchangeID        :: Text
  , sessionID         :: Int
  , frontID           :: Int
  , requestID         :: Int
  , orderActionRef    :: Int
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBatchOrderActionField

{#pointer *CThostFtdcBatchOrderActionField as CThostFtdcBatchOrderActionFieldPtr -> CThostFtdcBatchOrderActionField#}

data CThostFtdcDisseminationField = CThostFtdcDisseminationField
  { sequenceNo     :: Int
  , sequenceSeries :: Int16
  } deriving (Generic, Show)

instance Default CThostFtdcDisseminationField

{#pointer *CThostFtdcDisseminationField as CThostFtdcDisseminationFieldPtr -> CThostFtdcDisseminationField#}

data CThostFtdcLimitAmountParamField = CThostFtdcLimitAmountParamField
  { longAmount    :: Double
  , exchangeID    :: Text
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  } deriving (Generic, Show)

instance Default CThostFtdcLimitAmountParamField

{#pointer *CThostFtdcLimitAmountParamField as CThostFtdcLimitAmountParamFieldPtr -> CThostFtdcLimitAmountParamField#}

data CThostFtdcSuperUserField = CThostFtdcSuperUserField
  { isActive :: Int
  , password :: Text
  , userName :: Text
  , userID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSuperUserField

{#pointer *CThostFtdcSuperUserField as CThostFtdcSuperUserFieldPtr -> CThostFtdcSuperUserField#}

data CThostFtdcMarketDataLastMatchField = CThostFtdcMarketDataLastMatchField
  { openInterest :: Double
  , turnover     :: Double
  , volume       :: Int
  , lastPrice    :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataLastMatchField

{#pointer *CThostFtdcMarketDataLastMatchField as CThostFtdcMarketDataLastMatchFieldPtr -> CThostFtdcMarketDataLastMatchField#}

data CThostFtdcMarketDataBestPriceField = CThostFtdcMarketDataBestPriceField
  { askVolume1 :: Int
  , askPrice1  :: Double
  , bidVolume1 :: Int
  , bidPrice1  :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataBestPriceField

{#pointer *CThostFtdcMarketDataBestPriceField as CThostFtdcMarketDataBestPriceFieldPtr -> CThostFtdcMarketDataBestPriceField#}

data CThostFtdcRspFutureSignOutField = CThostFtdcRspFutureSignOutField
  { errorMsg       :: Text
  , errorID        :: Int
  , tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , currencyID     :: Text
  , digest         :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspFutureSignOutField

{#pointer *CThostFtdcRspFutureSignOutField as CThostFtdcRspFutureSignOutFieldPtr -> CThostFtdcRspFutureSignOutField#}

data CThostFtdcReqCancelAccountField = CThostFtdcReqCancelAccountField
  { userID             :: Text
  , tID                :: Int
  , operNo             :: Text
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , bankSecuAcc        :: Text
  , brokerIDByBank     :: Text
  , bankSecuAccType    :: Char
  , deviceID           :: Text
  , bankAccType        :: Char
  , digest             :: Text
  , cashExchangeCode   :: Char
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , installID          :: Int
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , moneyAccountStatus :: Char
  , eMail              :: Text
  , fax                :: Text
  , mobilePhone        :: Text
  , telephone          :: Text
  , zipCode            :: Text
  , address            :: Text
  , custType           :: Char
  , countryCode        :: Text
  , gender             :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqCancelAccountField

{#pointer *CThostFtdcReqCancelAccountField as CThostFtdcReqCancelAccountFieldPtr -> CThostFtdcReqCancelAccountField#}

data CThostFtdcInvestorLevelField = CThostFtdcInvestorLevelField
  { levelType  :: Char
  , exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorLevelField

{#pointer *CThostFtdcInvestorLevelField as CThostFtdcInvestorLevelFieldPtr -> CThostFtdcInvestorLevelField#}

data CThostFtdcExchangeQuoteActionField = CThostFtdcExchangeQuoteActionField
  { branchID          :: Text
  , macAddress        :: Text
  , iPAddress         :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , quoteLocalID      :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , actionFlag        :: Char
  , quoteSysID        :: Text
  , exchangeID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeQuoteActionField

{#pointer *CThostFtdcExchangeQuoteActionField as CThostFtdcExchangeQuoteActionFieldPtr -> CThostFtdcExchangeQuoteActionField#}

data CThostFtdcExchangeOrderInsertErrorField = CThostFtdcExchangeOrderInsertErrorField
  { errorMsg      :: Text
  , errorID       :: Int
  , orderLocalID  :: Text
  , installID     :: Int
  , traderID      :: Text
  , participantID :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeOrderInsertErrorField

{#pointer *CThostFtdcExchangeOrderInsertErrorField as CThostFtdcExchangeOrderInsertErrorFieldPtr -> CThostFtdcExchangeOrderInsertErrorField#}

data CThostFtdcDepthMarketDataField = CThostFtdcDepthMarketDataField
  { actionDay          :: Text
  , averagePrice       :: Double
  , askVolume5         :: Int
  , askPrice5          :: Double
  , bidVolume5         :: Int
  , bidPrice5          :: Double
  , askVolume4         :: Int
  , askPrice4          :: Double
  , bidVolume4         :: Int
  , bidPrice4          :: Double
  , askVolume3         :: Int
  , askPrice3          :: Double
  , bidVolume3         :: Int
  , bidPrice3          :: Double
  , askVolume2         :: Int
  , askPrice2          :: Double
  , bidVolume2         :: Int
  , bidPrice2          :: Double
  , askVolume1         :: Int
  , askPrice1          :: Double
  , bidVolume1         :: Int
  , bidPrice1          :: Double
  , updateMillisec     :: Int
  , updateTime         :: Text
  , currDelta          :: Double
  , preDelta           :: Double
  , lowerLimitPrice    :: Double
  , upperLimitPrice    :: Double
  , settlementPrice    :: Double
  , closePrice         :: Double
  , openInterest       :: Double
  , turnover           :: Double
  , volume             :: Int
  , lowestPrice        :: Double
  , highestPrice       :: Double
  , openPrice          :: Double
  , preOpenInterest    :: Double
  , preClosePrice      :: Double
  , preSettlementPrice :: Double
  , lastPrice          :: Double
  , exchangeInstID     :: Text
  , exchangeID         :: Text
  , instrumentID       :: Text
  , tradingDay         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcDepthMarketDataField

{#pointer *CThostFtdcDepthMarketDataField as CThostFtdcDepthMarketDataFieldPtr -> CThostFtdcDepthMarketDataField#}

newtype CThostFtdcMarketDataExchangeField = CThostFtdcMarketDataExchangeField
  { exchangeID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataExchangeField

{#pointer *CThostFtdcMarketDataExchangeField as CThostFtdcMarketDataExchangeFieldPtr -> CThostFtdcMarketDataExchangeField#}

data CThostFtdcQryExchangeExecOrderField = CThostFtdcQryExchangeExecOrderField
  { traderID       :: Text
  , exchangeID     :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeExecOrderField

{#pointer *CThostFtdcQryExchangeExecOrderField as CThostFtdcQryExchangeExecOrderFieldPtr -> CThostFtdcQryExchangeExecOrderField#}

data CThostFtdcInstrumentTradingRightField = CThostFtdcInstrumentTradingRightField
  { bizType       :: Char
  , exchangeID    :: Text
  , tradingRight  :: Char
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentTradingRightField

{#pointer *CThostFtdcInstrumentTradingRightField as CThostFtdcInstrumentTradingRightFieldPtr -> CThostFtdcInstrumentTradingRightField#}

data CThostFtdcQryBatchOrderActionField = CThostFtdcQryBatchOrderActionField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBatchOrderActionField

{#pointer *CThostFtdcQryBatchOrderActionField as CThostFtdcQryBatchOrderActionFieldPtr -> CThostFtdcQryBatchOrderActionField#}

data CThostFtdcExchangeOrderActionField = CThostFtdcExchangeOrderActionField
  { macAddress        :: Text
  , iPAddress         :: Text
  , branchID          :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , orderLocalID      :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , volumeChange      :: Int
  , limitPrice        :: Double
  , actionFlag        :: Char
  , orderSysID        :: Text
  , exchangeID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeOrderActionField

{#pointer *CThostFtdcExchangeOrderActionField as CThostFtdcExchangeOrderActionFieldPtr -> CThostFtdcExchangeOrderActionField#}

data CThostFtdcQueryBrokerDepositField = CThostFtdcQueryBrokerDepositField
  { exchangeID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQueryBrokerDepositField

{#pointer *CThostFtdcQueryBrokerDepositField as CThostFtdcQueryBrokerDepositFieldPtr -> CThostFtdcQueryBrokerDepositField#}

data CThostFtdcTransferFutureToBankRspField = CThostFtdcTransferFutureToBankRspField
  { currencyCode  :: Text
  , custFee       :: Double
  , tradeAmt      :: Double
  , futureAccount :: Text
  , retInfo       :: Text
  , retCode       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferFutureToBankRspField

{#pointer *CThostFtdcTransferFutureToBankRspField as CThostFtdcTransferFutureToBankRspFieldPtr -> CThostFtdcTransferFutureToBankRspField#}

newtype CThostFtdcQrySyncStatusField = CThostFtdcQrySyncStatusField
  { tradingDay :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySyncStatusField

{#pointer *CThostFtdcQrySyncStatusField as CThostFtdcQrySyncStatusFieldPtr -> CThostFtdcQrySyncStatusField#}

data CThostFtdcMulticastGroupInfoField = CThostFtdcMulticastGroupInfoField
  { sourceIP  :: Text
  , groupPort :: Int
  , groupIP   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMulticastGroupInfoField

{#pointer *CThostFtdcMulticastGroupInfoField as CThostFtdcMulticastGroupInfoFieldPtr -> CThostFtdcMulticastGroupInfoField#}

data CThostFtdcLoginForbiddenUserField = CThostFtdcLoginForbiddenUserField
  { iPAddress :: Text
  , userID    :: Text
  , brokerID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLoginForbiddenUserField

{#pointer *CThostFtdcLoginForbiddenUserField as CThostFtdcLoginForbiddenUserFieldPtr -> CThostFtdcLoginForbiddenUserField#}

data CThostFtdcBrokerTradingParamsField = CThostFtdcBrokerTradingParamsField
  { optionRoyaltyPriceType  :: Char
  , currencyID              :: Text
  , availIncludeCloseProfit :: Char
  , algorithm               :: Char
  , marginPriceType         :: Char
  , investorID              :: Text
  , brokerID                :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerTradingParamsField

{#pointer *CThostFtdcBrokerTradingParamsField as CThostFtdcBrokerTradingParamsFieldPtr -> CThostFtdcBrokerTradingParamsField#}

data CThostFtdcMarketDataUpdateTimeField = CThostFtdcMarketDataUpdateTimeField
  { exchangeID     :: Text
  , actionDay      :: Text
  , updateMillisec :: Int
  , updateTime     :: Text
  , instrumentID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataUpdateTimeField

{#pointer *CThostFtdcMarketDataUpdateTimeField as CThostFtdcMarketDataUpdateTimeFieldPtr -> CThostFtdcMarketDataUpdateTimeField#}

data CThostFtdcInputDesignateField = CThostFtdcInputDesignateField
  { exchangeID    :: Text
  , designateType :: Char
  , userID        :: Text
  , designateRef  :: Text
  , investorID    :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputDesignateField

{#pointer *CThostFtdcInputDesignateField as CThostFtdcInputDesignateFieldPtr -> CThostFtdcInputDesignateField#}

data CThostFtdcForceUserLogoutField = CThostFtdcForceUserLogoutField
  { userID   :: Text
  , brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcForceUserLogoutField

{#pointer *CThostFtdcForceUserLogoutField as CThostFtdcForceUserLogoutFieldPtr -> CThostFtdcForceUserLogoutField#}

data CThostFtdcQryExchangeQuoteActionField = CThostFtdcQryExchangeQuoteActionField
  { traderID      :: Text
  , exchangeID    :: Text
  , clientID      :: Text
  , participantID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeQuoteActionField

{#pointer *CThostFtdcQryExchangeQuoteActionField as CThostFtdcQryExchangeQuoteActionFieldPtr -> CThostFtdcQryExchangeQuoteActionField#}

data CThostFtdcForQuoteParamField = CThostFtdcForQuoteParamField
  { priceInterval :: Double
  , lastPrice     :: Double
  , exchangeID    :: Text
  , instrumentID  :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcForQuoteParamField

{#pointer *CThostFtdcForQuoteParamField as CThostFtdcForQuoteParamFieldPtr -> CThostFtdcForQuoteParamField#}

data CThostFtdcOptionInstrTradingRightField = CThostFtdcOptionInstrTradingRightField
  { hedgeFlag     :: Char
  , exchangeID    :: Text
  , tradingRight  :: Char
  , direction     :: Char
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrTradingRightField

{#pointer *CThostFtdcOptionInstrTradingRightField as CThostFtdcOptionInstrTradingRightFieldPtr -> CThostFtdcOptionInstrTradingRightField#}

data CThostFtdcBrokerTradingAlgosField = CThostFtdcBrokerTradingAlgosField
  { handleTradingAccountAlgoID :: Char
  , findMarginRateAlgoID       :: Char
  , handlePositionAlgoID       :: Char
  , instrumentID               :: Text
  , exchangeID                 :: Text
  , brokerID                   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerTradingAlgosField

{#pointer *CThostFtdcBrokerTradingAlgosField as CThostFtdcBrokerTradingAlgosFieldPtr -> CThostFtdcBrokerTradingAlgosField#}

data CThostFtdcCommRateModelField = CThostFtdcCommRateModelField
  { commModelName :: Text
  , commModelID   :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCommRateModelField

{#pointer *CThostFtdcCommRateModelField as CThostFtdcCommRateModelFieldPtr -> CThostFtdcCommRateModelField#}

data CThostFtdcQrySecAgentACIDMapField = CThostFtdcQrySecAgentACIDMapField
  { currencyID :: Text
  , accountID  :: Text
  , userID     :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySecAgentACIDMapField

{#pointer *CThostFtdcQrySecAgentACIDMapField as CThostFtdcQrySecAgentACIDMapFieldPtr -> CThostFtdcQrySecAgentACIDMapField#}

data CThostFtdcTransferBankToFutureReqField = CThostFtdcTransferBankToFutureReqField
  { currencyCode  :: Text
  , custFee       :: Double
  , tradeAmt      :: Double
  , futureAccPwd  :: Text
  , futurePwdFlag :: Char
  , futureAccount :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferBankToFutureReqField

{#pointer *CThostFtdcTransferBankToFutureReqField as CThostFtdcTransferBankToFutureReqFieldPtr -> CThostFtdcTransferBankToFutureReqField#}

data CThostFtdcRspFutureSignInField = CThostFtdcRspFutureSignInField
  { macKey         :: Text
  , pinKey         :: Text
  , errorMsg       :: Text
  , errorID        :: Int
  , tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , currencyID     :: Text
  , digest         :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspFutureSignInField

{#pointer *CThostFtdcRspFutureSignInField as CThostFtdcRspFutureSignInFieldPtr -> CThostFtdcRspFutureSignInField#}

data CThostFtdcSettlementRefField = CThostFtdcSettlementRefField
  { settlementID :: Int
  , tradingDay   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSettlementRefField

{#pointer *CThostFtdcSettlementRefField as CThostFtdcSettlementRefFieldPtr -> CThostFtdcSettlementRefField#}

data CThostFtdcQryErrOrderActionField = CThostFtdcQryErrOrderActionField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryErrOrderActionField

{#pointer *CThostFtdcQryErrOrderActionField as CThostFtdcQryErrOrderActionFieldPtr -> CThostFtdcQryErrOrderActionField#}

data CThostFtdcQryExecFreezeField = CThostFtdcQryExecFreezeField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExecFreezeField

{#pointer *CThostFtdcQryExecFreezeField as CThostFtdcQryExecFreezeFieldPtr -> CThostFtdcQryExecFreezeField#}

data CThostFtdcExchangeExecOrderActionField = CThostFtdcExchangeExecOrderActionField
  { macAddress        :: Text
  , iPAddress         :: Text
  , branchID          :: Text
  , actionType        :: Char
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , execOrderLocalID  :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , actionFlag        :: Char
  , execOrderSysID    :: Text
  , exchangeID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeExecOrderActionField

{#pointer *CThostFtdcExchangeExecOrderActionField as CThostFtdcExchangeExecOrderActionFieldPtr -> CThostFtdcExchangeExecOrderActionField#}

data CThostFtdcChangeAccountField = CThostFtdcChangeAccountField
  { errorMsg           :: Text
  , errorID            :: Int
  , digest             :: Text
  , tID                :: Int
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , brokerIDByBank     :: Text
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , installID          :: Int
  , bankAccType        :: Char
  , password           :: Text
  , accountID          :: Text
  , newBankPassWord    :: Text
  , newBankAccount     :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , moneyAccountStatus :: Char
  , eMail              :: Text
  , fax                :: Text
  , mobilePhone        :: Text
  , telephone          :: Text
  , zipCode            :: Text
  , address            :: Text
  , custType           :: Char
  , countryCode        :: Text
  , gender             :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcChangeAccountField

{#pointer *CThostFtdcChangeAccountField as CThostFtdcChangeAccountFieldPtr -> CThostFtdcChangeAccountField#}

data CThostFtdcCancelAccountField = CThostFtdcCancelAccountField
  { errorMsg           :: Text
  , errorID            :: Int
  , userID             :: Text
  , tID                :: Int
  , operNo             :: Text
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , bankSecuAcc        :: Text
  , brokerIDByBank     :: Text
  , bankSecuAccType    :: Char
  , deviceID           :: Text
  , bankAccType        :: Char
  , digest             :: Text
  , cashExchangeCode   :: Char
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , installID          :: Int
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , moneyAccountStatus :: Char
  , eMail              :: Text
  , fax                :: Text
  , mobilePhone        :: Text
  , telephone          :: Text
  , zipCode            :: Text
  , address            :: Text
  , custType           :: Char
  , countryCode        :: Text
  , gender             :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCancelAccountField

{#pointer *CThostFtdcCancelAccountField as CThostFtdcCancelAccountFieldPtr -> CThostFtdcCancelAccountField#}

data CThostFtdcReqChangeAccountField = CThostFtdcReqChangeAccountField
  { digest             :: Text
  , tID                :: Int
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , brokerIDByBank     :: Text
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , installID          :: Int
  , bankAccType        :: Char
  , password           :: Text
  , accountID          :: Text
  , newBankPassWord    :: Text
  , newBankAccount     :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , moneyAccountStatus :: Char
  , eMail              :: Text
  , fax                :: Text
  , mobilePhone        :: Text
  , telephone          :: Text
  , zipCode            :: Text
  , address            :: Text
  , custType           :: Char
  , countryCode        :: Text
  , gender             :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqChangeAccountField

{#pointer *CThostFtdcReqChangeAccountField as CThostFtdcReqChangeAccountFieldPtr -> CThostFtdcReqChangeAccountField#}

data CThostFtdcInstrumentMarginRateAdjustField = CThostFtdcInstrumentMarginRateAdjustField
  { isRelative               :: Int
  , shortMarginRatioByVolume :: Double
  , shortMarginRatioByMoney  :: Double
  , longMarginRatioByVolume  :: Double
  , longMarginRatioByMoney   :: Double
  , hedgeFlag                :: Char
  , investorID               :: Text
  , brokerID                 :: Text
  , investorRange            :: Char
  , instrumentID             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentMarginRateAdjustField

{#pointer *CThostFtdcInstrumentMarginRateAdjustField as CThostFtdcInstrumentMarginRateAdjustFieldPtr -> CThostFtdcInstrumentMarginRateAdjustField#}

data CThostFtdcExchangeOrderActionErrorField = CThostFtdcExchangeOrderActionErrorField
  { brokerID      :: Text
  , errorMsg      :: Text
  , errorID       :: Int
  , actionLocalID :: Text
  , orderLocalID  :: Text
  , installID     :: Int
  , traderID      :: Text
  , orderSysID    :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeOrderActionErrorField

{#pointer *CThostFtdcExchangeOrderActionErrorField as CThostFtdcExchangeOrderActionErrorFieldPtr -> CThostFtdcExchangeOrderActionErrorField#}

data CThostFtdcReqFutureSignOutField = CThostFtdcReqFutureSignOutField
  { tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , currencyID     :: Text
  , digest         :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqFutureSignOutField

{#pointer *CThostFtdcReqFutureSignOutField as CThostFtdcReqFutureSignOutFieldPtr -> CThostFtdcReqFutureSignOutField#}

data CThostFtdcMMOptionInstrCommRateField = CThostFtdcMMOptionInstrCommRateField
  { exchangeID              :: Text
  , strikeRatioByVolume     :: Double
  , strikeRatioByMoney      :: Double
  , closeTodayRatioByVolume :: Double
  , closeTodayRatioByMoney  :: Double
  , closeRatioByVolume      :: Double
  , closeRatioByMoney       :: Double
  , openRatioByVolume       :: Double
  , openRatioByMoney        :: Double
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMMOptionInstrCommRateField

{#pointer *CThostFtdcMMOptionInstrCommRateField as CThostFtdcMMOptionInstrCommRateFieldPtr -> CThostFtdcMMOptionInstrCommRateField#}

data CThostFtdcExchangeDesignateField = CThostFtdcExchangeDesignateField
  { branchID         :: Text
  , insertTime       :: Text
  , insertDate       :: Text
  , settlementID     :: Int
  , tradingDay       :: Text
  , notifySequence   :: Int
  , designateStatus  :: Char
  , installID        :: Int
  , traderID         :: Text
  , clientID         :: Text
  , participantID    :: Text
  , exchangeID       :: Text
  , designateLocalID :: Text
  , designateType    :: Char
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeDesignateField

{#pointer *CThostFtdcExchangeDesignateField as CThostFtdcExchangeDesignateFieldPtr -> CThostFtdcExchangeDesignateField#}

data CThostFtdcInputLockField = CThostFtdcInputLockField
  { macAddress   :: Text
  , iPAddress    :: Text
  , exchangeID   :: Text
  , lockType     :: Char
  , businessUnit :: Text
  , requestID    :: Int
  , volume       :: Int
  , userID       :: Text
  , lockRef      :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputLockField

{#pointer *CThostFtdcInputLockField as CThostFtdcInputLockFieldPtr -> CThostFtdcInputLockField#}

data CThostFtdcInvestorProductGroupMarginField = CThostFtdcInvestorProductGroupMarginField
  { hedgeFlag             :: Char
  , shortExchOffsetAmount :: Double
  , longExchOffsetAmount  :: Double
  , exchOffsetAmount      :: Double
  , shortOffsetAmount     :: Double
  , longOffsetAmount      :: Double
  , offsetAmount          :: Double
  , positionProfit        :: Double
  , cashIn                :: Double
  , frozenCash            :: Double
  , commission            :: Double
  , frozenCommission      :: Double
  , closeProfit           :: Double
  , shortExchMargin       :: Double
  , longExchMargin        :: Double
  , exchMargin            :: Double
  , shortUseMargin        :: Double
  , longUseMargin         :: Double
  , useMargin             :: Double
  , shortFrozenMargin     :: Double
  , longFrozenMargin      :: Double
  , frozenMargin          :: Double
  , settlementID          :: Int
  , tradingDay            :: Text
  , investorID            :: Text
  , brokerID              :: Text
  , productGroupID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorProductGroupMarginField

{#pointer *CThostFtdcInvestorProductGroupMarginField as CThostFtdcInvestorProductGroupMarginFieldPtr -> CThostFtdcInvestorProductGroupMarginField#}

data CThostFtdcQryInstrumentMarginRateField = CThostFtdcQryInstrumentMarginRateField
  { hedgeFlag    :: Char
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInstrumentMarginRateField

{#pointer *CThostFtdcQryInstrumentMarginRateField as CThostFtdcQryInstrumentMarginRateFieldPtr -> CThostFtdcQryInstrumentMarginRateField#}

data CThostFtdcLimitPosiField = CThostFtdcLimitPosiField
  { longAmountFrozen  :: Double
  , openVolumeFrozen  :: Int
  , longVolumeFrozen  :: Int
  , totalVolumeFrozen :: Int
  , longAmount        :: Double
  , openVolume        :: Int
  , longVolume        :: Int
  , totalVolume       :: Int
  , exchangeID        :: Text
  , instrumentID      :: Text
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLimitPosiField

{#pointer *CThostFtdcLimitPosiField as CThostFtdcLimitPosiFieldPtr -> CThostFtdcLimitPosiField#}

data CThostFtdcLimitPosiParamField = CThostFtdcLimitPosiParamField
  { longAmount    :: Double
  , openVolume    :: Int
  , longVolume    :: Int
  , totalVolume   :: Int
  , exchangeID    :: Text
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLimitPosiParamField

{#pointer *CThostFtdcLimitPosiParamField as CThostFtdcLimitPosiParamFieldPtr -> CThostFtdcLimitPosiParamField#}

data CThostFtdcDepositResultInformField = CThostFtdcDepositResultInformField
  { descrInfoForReturnCode :: Text
  , returnCode             :: Text
  , requestID              :: Int
  , deposit                :: Double
  , investorID             :: Text
  , brokerID               :: Text
  , depositSeqNo           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcDepositResultInformField

{#pointer *CThostFtdcDepositResultInformField as CThostFtdcDepositResultInformFieldPtr -> CThostFtdcDepositResultInformField#}

data CThostFtdcLoginInfoField = CThostFtdcLoginInfoField
  { loginRemark          :: Text
  , iNETime              :: Text
  , oneTimePassword      :: Text
  , macAddress           :: Text
  , fFEXTime             :: Text
  , cZCETime             :: Text
  , dCETime              :: Text
  , sHFETime             :: Text
  , maxOrderRef          :: Text
  , password             :: Text
  , systemName           :: Text
  , protocolInfo         :: Text
  , interfaceProductInfo :: Text
  , userProductInfo      :: Text
  , iPAddress            :: Text
  , loginTime            :: Text
  , loginDate            :: Text
  , userID               :: Text
  , brokerID             :: Text
  , sessionID            :: Int
  , frontID              :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcLoginInfoField

{#pointer *CThostFtdcLoginInfoField as CThostFtdcLoginInfoFieldPtr -> CThostFtdcLoginInfoField#}

data CThostFtdcQryOptionInstrCommRateField = CThostFtdcQryOptionInstrCommRateField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryOptionInstrCommRateField

{#pointer *CThostFtdcQryOptionInstrCommRateField as CThostFtdcQryOptionInstrCommRateFieldPtr -> CThostFtdcQryOptionInstrCommRateField#}

data CThostFtdcQryBrokerUserField = CThostFtdcQryBrokerUserField
  { userID   :: Text
  , brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerUserField

{#pointer *CThostFtdcQryBrokerUserField as CThostFtdcQryBrokerUserFieldPtr -> CThostFtdcQryBrokerUserField#}

data CThostFtdcInputExecOrderField = CThostFtdcInputExecOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , clientID            :: Text
  , currencyID          :: Text
  , accountID           :: Text
  , investUnitID        :: Text
  , exchangeID          :: Text
  , closeFlag           :: Char
  , reservePositionFlag :: Char
  , posiDirection       :: Char
  , actionType          :: Char
  , hedgeFlag           :: Char
  , offsetFlag          :: Char
  , businessUnit        :: Text
  , requestID           :: Int
  , volume              :: Int
  , userID              :: Text
  , execOrderRef        :: Text
  , instrumentID        :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputExecOrderField

{#pointer *CThostFtdcInputExecOrderField as CThostFtdcInputExecOrderFieldPtr -> CThostFtdcInputExecOrderField#}

data CThostFtdcQryBrokerTradingParamsField = CThostFtdcQryBrokerTradingParamsField
  { currencyID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerTradingParamsField

{#pointer *CThostFtdcQryBrokerTradingParamsField as CThostFtdcQryBrokerTradingParamsFieldPtr -> CThostFtdcQryBrokerTradingParamsField#}

data CThostFtdcOptionInstrMarginAdjustField = CThostFtdcOptionInstrMarginAdjustField
  { mShortMarginRatioByVolume :: Double
  , mShortMarginRatioByMoney  :: Double
  , exchangeID                :: Text
  , isRelative                :: Int
  , aShortMarginRatioByVolume :: Double
  , aShortMarginRatioByMoney  :: Double
  , hShortMarginRatioByVolume :: Double
  , hShortMarginRatioByMoney  :: Double
  , sShortMarginRatioByVolume :: Double
  , sShortMarginRatioByMoney  :: Double
  , investorID                :: Text
  , brokerID                  :: Text
  , investorRange             :: Char
  , instrumentID              :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrMarginAdjustField

{#pointer *CThostFtdcOptionInstrMarginAdjustField as CThostFtdcOptionInstrMarginAdjustFieldPtr -> CThostFtdcOptionInstrMarginAdjustField#}

data CThostFtdcQryOptionInstrTradeCostField = CThostFtdcQryOptionInstrTradeCostField
  { exchangeID      :: Text
  , underlyingPrice :: Double
  , inputPrice      :: Double
  , hedgeFlag       :: Char
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryOptionInstrTradeCostField

{#pointer *CThostFtdcQryOptionInstrTradeCostField as CThostFtdcQryOptionInstrTradeCostFieldPtr -> CThostFtdcQryOptionInstrTradeCostField#}

data CThostFtdcQryExchangeOrderActionField = CThostFtdcQryExchangeOrderActionField
  { traderID      :: Text
  , exchangeID    :: Text
  , clientID      :: Text
  , participantID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeOrderActionField

{#pointer *CThostFtdcQryExchangeOrderActionField as CThostFtdcQryExchangeOrderActionFieldPtr -> CThostFtdcQryExchangeOrderActionField#}

data CThostFtdcTransferFutureToBankReqField = CThostFtdcTransferFutureToBankReqField
  { currencyCode  :: Text
  , custFee       :: Double
  , tradeAmt      :: Double
  , futureAccPwd  :: Text
  , futurePwdFlag :: Char
  , futureAccount :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferFutureToBankReqField

{#pointer *CThostFtdcTransferFutureToBankReqField as CThostFtdcTransferFutureToBankReqFieldPtr -> CThostFtdcTransferFutureToBankReqField#}

data CThostFtdcOptionInstrMiniMarginField = CThostFtdcOptionInstrMiniMarginField
  { exchangeID    :: Text
  , isRelative    :: Int
  , valueMethod   :: Char
  , minMargin     :: Double
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrMiniMarginField

{#pointer *CThostFtdcOptionInstrMiniMarginField as CThostFtdcOptionInstrMiniMarginFieldPtr -> CThostFtdcOptionInstrMiniMarginField#}

data CThostFtdcQryMMOptionInstrCommRateField = CThostFtdcQryMMOptionInstrCommRateField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryMMOptionInstrCommRateField

{#pointer *CThostFtdcQryMMOptionInstrCommRateField as CThostFtdcQryMMOptionInstrCommRateFieldPtr -> CThostFtdcQryMMOptionInstrCommRateField#}

data CThostFtdcExchangeExecOrderActionErrorField = CThostFtdcExchangeExecOrderActionErrorField
  { brokerID         :: Text
  , errorMsg         :: Text
  , errorID          :: Int
  , actionLocalID    :: Text
  , execOrderLocalID :: Text
  , installID        :: Int
  , traderID         :: Text
  , execOrderSysID   :: Text
  , exchangeID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeExecOrderActionErrorField

{#pointer *CThostFtdcExchangeExecOrderActionErrorField as CThostFtdcExchangeExecOrderActionErrorFieldPtr -> CThostFtdcExchangeExecOrderActionErrorField#}

data CThostFtdcQueryMaxOrderVolumeField = CThostFtdcQueryMaxOrderVolumeField
  { exchangeID   :: Text
  , maxVolume    :: Int
  , hedgeFlag    :: Char
  , offsetFlag   :: Char
  , direction    :: Char
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQueryMaxOrderVolumeField

{#pointer *CThostFtdcQueryMaxOrderVolumeField as CThostFtdcQueryMaxOrderVolumeFieldPtr -> CThostFtdcQueryMaxOrderVolumeField#}

data CThostFtdcOptionInstrMarginGuardField = CThostFtdcOptionInstrMarginGuardField
  { exchangeID                :: Text
  , isRelative                :: Int
  , aShortMarginRatioByVolume :: Double
  , aShortMarginRatioByMoney  :: Double
  , hShortMarginRatioByVolume :: Double
  , hShortMarginRatioByMoney  :: Double
  , sShortMarginRatioByVolume :: Double
  , sShortMarginRatioByMoney  :: Double
  , investorID                :: Text
  , brokerID                  :: Text
  , investorRange             :: Char
  , instrumentID              :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrMarginGuardField

{#pointer *CThostFtdcOptionInstrMarginGuardField as CThostFtdcOptionInstrMarginGuardFieldPtr -> CThostFtdcOptionInstrMarginGuardField#}

data CThostFtdcBrokerUserRightAssignField = CThostFtdcBrokerUserRightAssignField
  { tradeable    :: Int
  , dRIdentityID :: Int
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerUserRightAssignField

{#pointer *CThostFtdcBrokerUserRightAssignField as CThostFtdcBrokerUserRightAssignFieldPtr -> CThostFtdcBrokerUserRightAssignField#}

data CThostFtdcInputStockDisposalActionField = CThostFtdcInputStockDisposalActionField
  { instrumentID           :: Text
  , userID                 :: Text
  , actionFlag             :: Char
  , stockDisposalSysID     :: Text
  , exchangeID             :: Text
  , sessionID              :: Int
  , frontID                :: Int
  , requestID              :: Int
  , stockDisposalRef       :: Text
  , stockDisposalActionRef :: Int
  , investorID             :: Text
  , brokerID               :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputStockDisposalActionField

{#pointer *CThostFtdcInputStockDisposalActionField as CThostFtdcInputStockDisposalActionFieldPtr -> CThostFtdcInputStockDisposalActionField#}

data CThostFtdcQryBrokerUserEventField = CThostFtdcQryBrokerUserEventField
  { userEventType :: Char
  , userID        :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerUserEventField

{#pointer *CThostFtdcQryBrokerUserEventField as CThostFtdcQryBrokerUserEventFieldPtr -> CThostFtdcQryBrokerUserEventField#}

data CThostFtdcExchangeBatchOrderActionField = CThostFtdcExchangeBatchOrderActionField
  { macAddress        :: Text
  , iPAddress         :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , exchangeID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeBatchOrderActionField

{#pointer *CThostFtdcExchangeBatchOrderActionField as CThostFtdcExchangeBatchOrderActionFieldPtr -> CThostFtdcExchangeBatchOrderActionField#}

data CThostFtdcReqDayEndFileReadyField = CThostFtdcReqDayEndFileReadyField
  { digest           :: Text
  , fileBusinessCode :: Char
  , sessionID        :: Int
  , lastFragment     :: Char
  , plateSerial      :: Int
  , tradingDay       :: Text
  , bankSerial       :: Text
  , tradeTime        :: Text
  , tradeDate        :: Text
  , brokerBranchID   :: Text
  , brokerID         :: Text
  , bankBranchID     :: Text
  , bankID           :: Text
  , tradeCode        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqDayEndFileReadyField

{#pointer *CThostFtdcReqDayEndFileReadyField as CThostFtdcReqDayEndFileReadyFieldPtr -> CThostFtdcReqDayEndFileReadyField#}

data CThostFtdcTradingAccountPasswordUpdateField = CThostFtdcTradingAccountPasswordUpdateField
  { currencyID  :: Text
  , newPassword :: Text
  , oldPassword :: Text
  , accountID   :: Text
  , brokerID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingAccountPasswordUpdateField

{#pointer *CThostFtdcTradingAccountPasswordUpdateField as CThostFtdcTradingAccountPasswordUpdateFieldPtr -> CThostFtdcTradingAccountPasswordUpdateField#}

data CThostFtdcLimitPosiParamSField = CThostFtdcLimitPosiParamSField
  { openVolume    :: Int
  , totalVolume   :: Int
  , exchangeID    :: Text
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLimitPosiParamSField

{#pointer *CThostFtdcLimitPosiParamSField as CThostFtdcLimitPosiParamSFieldPtr -> CThostFtdcLimitPosiParamSField#}

data CThostFtdcQryInvestorPositionDetailField = CThostFtdcQryInvestorPositionDetailField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorPositionDetailField

{#pointer *CThostFtdcQryInvestorPositionDetailField as CThostFtdcQryInvestorPositionDetailFieldPtr -> CThostFtdcQryInvestorPositionDetailField#}

data CThostFtdcQryInvestorPositionCombineDetailField = CThostFtdcQryInvestorPositionCombineDetailField
  { combInstrumentID :: Text
  , investorID       :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorPositionCombineDetailField

{#pointer *CThostFtdcQryInvestorPositionCombineDetailField as CThostFtdcQryInvestorPositionCombineDetailFieldPtr -> CThostFtdcQryInvestorPositionCombineDetailField#}

data CThostFtdcQryCombinationLegField = CThostFtdcQryCombinationLegField
  { legInstrumentID  :: Text
  , legID            :: Int
  , combInstrumentID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryCombinationLegField

{#pointer *CThostFtdcQryCombinationLegField as CThostFtdcQryCombinationLegFieldPtr -> CThostFtdcQryCombinationLegField#}

data CThostFtdcSyncingInstrumentMarginRateField = CThostFtdcSyncingInstrumentMarginRateField
  { isRelative               :: Int
  , shortMarginRatioByVolume :: Double
  , shortMarginRatioByMoney  :: Double
  , longMarginRatioByVolume  :: Double
  , longMarginRatioByMoney   :: Double
  , hedgeFlag                :: Char
  , investorID               :: Text
  , brokerID                 :: Text
  , investorRange            :: Char
  , instrumentID             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingInstrumentMarginRateField

{#pointer *CThostFtdcSyncingInstrumentMarginRateField as CThostFtdcSyncingInstrumentMarginRateFieldPtr -> CThostFtdcSyncingInstrumentMarginRateField#}

data CThostFtdcQryCombInstrumentGuardField = CThostFtdcQryCombInstrumentGuardField
  { instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryCombInstrumentGuardField

{#pointer *CThostFtdcQryCombInstrumentGuardField as CThostFtdcQryCombInstrumentGuardFieldPtr -> CThostFtdcQryCombInstrumentGuardField#}

data CThostFtdcLockField = CThostFtdcLockField
  { macAddress        :: Text
  , iPAddress         :: Text
  , branchID          :: Text
  , brokerLockSeq     :: Int
  , activeUserID      :: Text
  , statusMsg         :: Text
  , userProductInfo   :: Text
  , sessionID         :: Int
  , frontID           :: Int
  , sequenceNo        :: Int
  , clearingPartID    :: Text
  , lockStatus        :: Char
  , cancelTime        :: Text
  , insertTime        :: Text
  , insertDate        :: Text
  , lockSysID         :: Text
  , settlementID      :: Int
  , tradingDay        :: Text
  , notifySequence    :: Int
  , orderSubmitStatus :: Char
  , installID         :: Int
  , traderID          :: Text
  , exchangeInstID    :: Text
  , clientID          :: Text
  , participantID     :: Text
  , exchangeID        :: Text
  , lockLocalID       :: Text
  , lockType          :: Char
  , businessUnit      :: Text
  , requestID         :: Int
  , volume            :: Int
  , userID            :: Text
  , lockRef           :: Text
  , instrumentID      :: Text
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLockField

{#pointer *CThostFtdcLockField as CThostFtdcLockFieldPtr -> CThostFtdcLockField#}

data CThostFtdcQryTransferSerialField = CThostFtdcQryTransferSerialField
  { currencyID :: Text
  , bankID     :: Text
  , accountID  :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTransferSerialField

{#pointer *CThostFtdcQryTransferSerialField as CThostFtdcQryTransferSerialFieldPtr -> CThostFtdcQryTransferSerialField#}

data CThostFtdcQryTradingAccountField = CThostFtdcQryTradingAccountField
  { bizType    :: Char
  , currencyID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTradingAccountField

{#pointer *CThostFtdcQryTradingAccountField as CThostFtdcQryTradingAccountFieldPtr -> CThostFtdcQryTradingAccountField#}

data CThostFtdcQryInstrumentOrderCommRateField = CThostFtdcQryInstrumentOrderCommRateField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInstrumentOrderCommRateField

{#pointer *CThostFtdcQryInstrumentOrderCommRateField as CThostFtdcQryInstrumentOrderCommRateFieldPtr -> CThostFtdcQryInstrumentOrderCommRateField#}

data CThostFtdcInputForQuoteField = CThostFtdcInputForQuoteField
  { macAddress   :: Text
  , iPAddress    :: Text
  , investUnitID :: Text
  , exchangeID   :: Text
  , userID       :: Text
  , forQuoteRef  :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputForQuoteField

{#pointer *CThostFtdcInputForQuoteField as CThostFtdcInputForQuoteFieldPtr -> CThostFtdcInputForQuoteField#}

data CThostFtdcSecAgentACIDMapField = CThostFtdcSecAgentACIDMapField
  { brokerSecAgentID :: Text
  , currencyID       :: Text
  , accountID        :: Text
  , userID           :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSecAgentACIDMapField

{#pointer *CThostFtdcSecAgentACIDMapField as CThostFtdcSecAgentACIDMapFieldPtr -> CThostFtdcSecAgentACIDMapField#}

data CThostFtdcVerifyFuturePasswordAndCustInfoField = CThostFtdcVerifyFuturePasswordAndCustInfoField
  { currencyID       :: Text
  , password         :: Text
  , accountID        :: Text
  , custType         :: Char
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , customerName     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcVerifyFuturePasswordAndCustInfoField

{#pointer *CThostFtdcVerifyFuturePasswordAndCustInfoField as CThostFtdcVerifyFuturePasswordAndCustInfoFieldPtr -> CThostFtdcVerifyFuturePasswordAndCustInfoField#}

data CThostFtdcRemoveParkedOrderField = CThostFtdcRemoveParkedOrderField
  { parkedOrderID :: Text
  , investorID    :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRemoveParkedOrderField

{#pointer *CThostFtdcRemoveParkedOrderField as CThostFtdcRemoveParkedOrderFieldPtr -> CThostFtdcRemoveParkedOrderField#}

data CThostFtdcQryEWarrantOffsetField = CThostFtdcQryEWarrantOffsetField
  { instrumentID :: Text
  , exchangeID   :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryEWarrantOffsetField

{#pointer *CThostFtdcQryEWarrantOffsetField as CThostFtdcQryEWarrantOffsetFieldPtr -> CThostFtdcQryEWarrantOffsetField#}

data CThostFtdcCFMMCBrokerKeyField = CThostFtdcCFMMCBrokerKeyField
  { keyKind       :: Char
  , currentKey    :: Text
  , keyID         :: Int
  , createTime    :: Text
  , createDate    :: Text
  , participantID :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCFMMCBrokerKeyField

{#pointer *CThostFtdcCFMMCBrokerKeyField as CThostFtdcCFMMCBrokerKeyFieldPtr -> CThostFtdcCFMMCBrokerKeyField#}

data CThostFtdcStockDisposalField = CThostFtdcStockDisposalField
  { businessUnit         :: Text
  , stockDisposalSysID   :: Text
  , branchID             :: Text
  , statusMsg            :: Text
  , userProductInfo      :: Text
  , sessionID            :: Int
  , frontID              :: Int
  , insertTime           :: Text
  , insertDate           :: Text
  , settlementID         :: Int
  , tradingDay           :: Text
  , notifySequence       :: Int
  , stockDisposalStatus  :: Char
  , installID            :: Int
  , traderID             :: Text
  , clientID             :: Text
  , participantID        :: Text
  , exchangeInstID       :: Text
  , exchangeID           :: Text
  , stockDisposalLocalID :: Text
  , stockDisposalType    :: Char
  , volume               :: Int
  , instrumentID         :: Text
  , userID               :: Text
  , stockDisposalRef     :: Text
  , investorID           :: Text
  , brokerID             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcStockDisposalField

{#pointer *CThostFtdcStockDisposalField as CThostFtdcStockDisposalFieldPtr -> CThostFtdcStockDisposalField#}

data CThostFtdcBulletinField = CThostFtdcBulletinField
  { marketID    :: Text
  , uRLLink     :: Text
  , content     :: Text
  , comeFrom    :: Text
  , abstract    :: Text
  , sendTime    :: Text
  , newsUrgency :: Char
  , newsType    :: Text
  , sequenceNo  :: Int
  , bulletinID  :: Int
  , tradingDay  :: Text
  , exchangeID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBulletinField

{#pointer *CThostFtdcBulletinField as CThostFtdcBulletinFieldPtr -> CThostFtdcBulletinField#}

data CThostFtdcQryETFOptionInstrCommRateField = CThostFtdcQryETFOptionInstrCommRateField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryETFOptionInstrCommRateField

{#pointer *CThostFtdcQryETFOptionInstrCommRateField as CThostFtdcQryETFOptionInstrCommRateFieldPtr -> CThostFtdcQryETFOptionInstrCommRateField#}

data CThostFtdcMarketDataAsk45Field = CThostFtdcMarketDataAsk45Field
  { askVolume5 :: Int
  , askPrice5  :: Double
  , askVolume4 :: Int
  , askPrice4  :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataAsk45Field

{#pointer *CThostFtdcMarketDataAsk45Field as CThostFtdcMarketDataAsk45FieldPtr -> CThostFtdcMarketDataAsk45Field#}

data CThostFtdcMarketDataBid45Field = CThostFtdcMarketDataBid45Field
  { bidVolume5 :: Int
  , bidPrice5  :: Double
  , bidVolume4 :: Int
  , bidPrice4  :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataBid45Field

{#pointer *CThostFtdcMarketDataBid45Field as CThostFtdcMarketDataBid45FieldPtr -> CThostFtdcMarketDataBid45Field#}

data CThostFtdcQryInvestorProductGroupMarginField = CThostFtdcQryInvestorProductGroupMarginField
  { hedgeFlag      :: Char
  , productGroupID :: Text
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorProductGroupMarginField

{#pointer *CThostFtdcQryInvestorProductGroupMarginField as CThostFtdcQryInvestorProductGroupMarginFieldPtr -> CThostFtdcQryInvestorProductGroupMarginField#}

data CThostFtdcTraderField = CThostFtdcTraderField
  { brokerID      :: Text
  , installCount  :: Int
  , password      :: Text
  , participantID :: Text
  , traderID      :: Text
  , exchangeID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTraderField

{#pointer *CThostFtdcTraderField as CThostFtdcTraderFieldPtr -> CThostFtdcTraderField#}

data CThostFtdcBrokerField = CThostFtdcBrokerField
  { isActive   :: Int
  , brokerName :: Text
  , brokerAbbr :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerField

{#pointer *CThostFtdcBrokerField as CThostFtdcBrokerFieldPtr -> CThostFtdcBrokerField#}

data CThostFtdcDBFRecordField = CThostFtdcDBFRecordField
  { dBFFdContent4 :: Text
  , dBFFdName4    :: Text
  , dBFFdContent3 :: Text
  , dBFFdName3    :: Text
  , dBFFdContent2 :: Text
  , dBFFdName2    :: Text
  , dBFFdContent1 :: Text
  , dBFFdName1    :: Text
  , dBFComNo      :: Text
  , dBFOComNo     :: Text
  , dBFComTime    :: Text
  , dBFComdType   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcDBFRecordField

{#pointer *CThostFtdcDBFRecordField as CThostFtdcDBFRecordFieldPtr -> CThostFtdcDBFRecordField#}

data CThostFtdcExchangeField = CThostFtdcExchangeField
  { exchangeProperty :: Char
  , exchangeName     :: Text
  , exchangeID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeField

{#pointer *CThostFtdcExchangeField as CThostFtdcExchangeFieldPtr -> CThostFtdcExchangeField#}

newtype CThostFtdcQryCFMMCBrokerKeyField = CThostFtdcQryCFMMCBrokerKeyField
  { brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryCFMMCBrokerKeyField

{#pointer *CThostFtdcQryCFMMCBrokerKeyField as CThostFtdcQryCFMMCBrokerKeyFieldPtr -> CThostFtdcQryCFMMCBrokerKeyField#}

data CThostFtdcMarketDataAsk23Field = CThostFtdcMarketDataAsk23Field
  { askVolume3 :: Int
  , askPrice3  :: Double
  , askVolume2 :: Int
  , askPrice2  :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataAsk23Field

{#pointer *CThostFtdcMarketDataAsk23Field as CThostFtdcMarketDataAsk23FieldPtr -> CThostFtdcMarketDataAsk23Field#}

data CThostFtdcMarketDataBid23Field = CThostFtdcMarketDataBid23Field
  { bidVolume3 :: Int
  , bidPrice3  :: Double
  , bidVolume2 :: Int
  , bidPrice2  :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataBid23Field

{#pointer *CThostFtdcMarketDataBid23Field as CThostFtdcMarketDataBid23FieldPtr -> CThostFtdcMarketDataBid23Field#}

data CThostFtdcQryErrExecOrderActionField = CThostFtdcQryErrExecOrderActionField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryErrExecOrderActionField

{#pointer *CThostFtdcQryErrExecOrderActionField as CThostFtdcQryErrExecOrderActionFieldPtr -> CThostFtdcQryErrExecOrderActionField#}

data CThostFtdcSyncStatusField = CThostFtdcSyncStatusField
  { dataSyncStatus :: Char
  , tradingDay     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncStatusField

{#pointer *CThostFtdcSyncStatusField as CThostFtdcSyncStatusFieldPtr -> CThostFtdcSyncStatusField#}

newtype CThostFtdcMarketDataAveragePriceField = CThostFtdcMarketDataAveragePriceField
  { averagePrice :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataAveragePriceField

{#pointer *CThostFtdcMarketDataAveragePriceField as CThostFtdcMarketDataAveragePriceFieldPtr -> CThostFtdcMarketDataAveragePriceField#}

data CThostFtdcInvestorField = CThostFtdcInvestorField
  { marginModelID      :: Text
  , commModelID        :: Text
  , mobile             :: Text
  , openDate           :: Text
  , address            :: Text
  , telephone          :: Text
  , isActive           :: Int
  , identifiedCardNo   :: Text
  , identifiedCardType :: Char
  , investorName       :: Text
  , investorGroupID    :: Text
  , brokerID           :: Text
  , investorID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorField

{#pointer *CThostFtdcInvestorField as CThostFtdcInvestorFieldPtr -> CThostFtdcInvestorField#}

data CThostFtdcSyncingTradingAccountField = CThostFtdcSyncingTradingAccountField
  { specProductExchangeMargin      :: Double
  , specProductPositionProfitByAlg :: Double
  , specProductCloseProfit         :: Double
  , specProductPositionProfit      :: Double
  , specProductFrozenCommission    :: Double
  , specProductCommission          :: Double
  , specProductFrozenMargin        :: Double
  , specProductMargin              :: Double
  , mortgageableFund               :: Double
  , fundMortgageAvailable          :: Double
  , fundMortgageOut                :: Double
  , fundMortgageIn                 :: Double
  , preFundMortgageOut             :: Double
  , preFundMortgageIn              :: Double
  , currencyID                     :: Text
  , reserveBalance                 :: Double
  , exchangeDeliveryMargin         :: Double
  , deliveryMargin                 :: Double
  , exchangeMargin                 :: Double
  , mortgage                       :: Double
  , credit                         :: Double
  , settlementID                   :: Int
  , tradingDay                     :: Text
  , reserve                        :: Double
  , withdrawQuota                  :: Double
  , available                      :: Double
  , balance                        :: Double
  , positionProfit                 :: Double
  , closeProfit                    :: Double
  , commission                     :: Double
  , cashIn                         :: Double
  , currMargin                     :: Double
  , frozenCommission               :: Double
  , frozenCash                     :: Double
  , frozenMargin                   :: Double
  , withdraw                       :: Double
  , deposit                        :: Double
  , interest                       :: Double
  , interestBase                   :: Double
  , preMargin                      :: Double
  , preBalance                     :: Double
  , preDeposit                     :: Double
  , preCredit                      :: Double
  , preMortgage                    :: Double
  , accountID                      :: Text
  , brokerID                       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingTradingAccountField

{#pointer *CThostFtdcSyncingTradingAccountField as CThostFtdcSyncingTradingAccountFieldPtr -> CThostFtdcSyncingTradingAccountField#}

data CThostFtdcMMInstrumentCommissionRateField = CThostFtdcMMInstrumentCommissionRateField
  { exchangeID              :: Text
  , closeTodayRatioByVolume :: Double
  , closeTodayRatioByMoney  :: Double
  , closeRatioByVolume      :: Double
  , closeRatioByMoney       :: Double
  , openRatioByVolume       :: Double
  , openRatioByMoney        :: Double
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMMInstrumentCommissionRateField

{#pointer *CThostFtdcMMInstrumentCommissionRateField as CThostFtdcMMInstrumentCommissionRateFieldPtr -> CThostFtdcMMInstrumentCommissionRateField#}

data CThostFtdcQryQuoteField = CThostFtdcQryQuoteField
  { insertTimeEnd   :: Text
  , insertTimeStart :: Text
  , quoteSysID      :: Text
  , exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryQuoteField

{#pointer *CThostFtdcQryQuoteField as CThostFtdcQryQuoteFieldPtr -> CThostFtdcQryQuoteField#}

data CThostFtdcQryExchangeCombActionField = CThostFtdcQryExchangeCombActionField
  { traderID       :: Text
  , exchangeID     :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeCombActionField

{#pointer *CThostFtdcQryExchangeCombActionField as CThostFtdcQryExchangeCombActionFieldPtr -> CThostFtdcQryExchangeCombActionField#}

data CThostFtdcParkedOrderActionField = CThostFtdcParkedOrderActionField
  { macAddress          :: Text
  , iPAddress           :: Text
  , investUnitID        :: Text
  , errorMsg            :: Text
  , errorID             :: Int
  , status              :: Char
  , userType            :: Char
  , parkedOrderActionID :: Text
  , instrumentID        :: Text
  , userID              :: Text
  , volumeChange        :: Int
  , limitPrice          :: Double
  , actionFlag          :: Char
  , orderSysID          :: Text
  , exchangeID          :: Text
  , sessionID           :: Int
  , frontID             :: Int
  , requestID           :: Int
  , orderRef            :: Text
  , orderActionRef      :: Int
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcParkedOrderActionField

{#pointer *CThostFtdcParkedOrderActionField as CThostFtdcParkedOrderActionFieldPtr -> CThostFtdcParkedOrderActionField#}

data CThostFtdcQryInstrumentCommissionRateField = CThostFtdcQryInstrumentCommissionRateField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInstrumentCommissionRateField

{#pointer *CThostFtdcQryInstrumentCommissionRateField as CThostFtdcQryInstrumentCommissionRateFieldPtr -> CThostFtdcQryInstrumentCommissionRateField#}

data CThostFtdcManualSyncBrokerUserOTPField = CThostFtdcManualSyncBrokerUserOTPField
  { secondOTP :: Text
  , firstOTP  :: Text
  , oTPType   :: Char
  , userID    :: Text
  , brokerID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcManualSyncBrokerUserOTPField

{#pointer *CThostFtdcManualSyncBrokerUserOTPField as CThostFtdcManualSyncBrokerUserOTPFieldPtr -> CThostFtdcManualSyncBrokerUserOTPField#}

data CThostFtdcTradingNoticeInfoField = CThostFtdcTradingNoticeInfoField
  { sequenceNo     :: Int
  , sequenceSeries :: Int16
  , fieldContent   :: Text
  , sendTime       :: Text
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingNoticeInfoField

{#pointer *CThostFtdcTradingNoticeInfoField as CThostFtdcTradingNoticeInfoFieldPtr -> CThostFtdcTradingNoticeInfoField#}

data CThostFtdcTradingAccountReserveField = CThostFtdcTradingAccountReserveField
  { currencyID :: Text
  , reserve    :: Double
  , accountID  :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingAccountReserveField

{#pointer *CThostFtdcTradingAccountReserveField as CThostFtdcTradingAccountReserveFieldPtr -> CThostFtdcTradingAccountReserveField#}

data CThostFtdcInputExecOrderActionField = CThostFtdcInputExecOrderActionField
  { macAddress         :: Text
  , iPAddress          :: Text
  , investUnitID       :: Text
  , instrumentID       :: Text
  , userID             :: Text
  , actionFlag         :: Char
  , execOrderSysID     :: Text
  , exchangeID         :: Text
  , sessionID          :: Int
  , frontID            :: Int
  , requestID          :: Int
  , execOrderRef       :: Text
  , execOrderActionRef :: Int
  , investorID         :: Text
  , brokerID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputExecOrderActionField

{#pointer *CThostFtdcInputExecOrderActionField as CThostFtdcInputExecOrderActionFieldPtr -> CThostFtdcInputExecOrderActionField#}

data CThostFtdcQryExchangeStockDisposalActionField = CThostFtdcQryExchangeStockDisposalActionField
  { traderID      :: Text
  , exchangeID    :: Text
  , clientID      :: Text
  , participantID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeStockDisposalActionField

{#pointer *CThostFtdcQryExchangeStockDisposalActionField as CThostFtdcQryExchangeStockDisposalActionFieldPtr -> CThostFtdcQryExchangeStockDisposalActionField#}

data CThostFtdcQrySettlementInfoField = CThostFtdcQrySettlementInfoField
  { tradingDay :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySettlementInfoField

{#pointer *CThostFtdcQrySettlementInfoField as CThostFtdcQrySettlementInfoFieldPtr -> CThostFtdcQrySettlementInfoField#}

data CThostFtdcInputCombActionField = CThostFtdcInputCombActionField
  { macAddress    :: Text
  , iPAddress     :: Text
  , exchangeID    :: Text
  , hedgeFlag     :: Char
  , combDirection :: Char
  , volume        :: Int
  , direction     :: Char
  , userID        :: Text
  , combActionRef :: Text
  , instrumentID  :: Text
  , investorID    :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputCombActionField

{#pointer *CThostFtdcInputCombActionField as CThostFtdcInputCombActionFieldPtr -> CThostFtdcInputCombActionField#}

data CThostFtdcForQuoteField = CThostFtdcForQuoteField
  { branchID         :: Text
  , macAddress       :: Text
  , iPAddress        :: Text
  , investUnitID     :: Text
  , brokerForQutoSeq :: Int
  , activeUserID     :: Text
  , statusMsg        :: Text
  , sessionID        :: Int
  , frontID          :: Int
  , forQuoteStatus   :: Char
  , insertTime       :: Text
  , insertDate       :: Text
  , installID        :: Int
  , traderID         :: Text
  , exchangeInstID   :: Text
  , clientID         :: Text
  , participantID    :: Text
  , exchangeID       :: Text
  , forQuoteLocalID  :: Text
  , userID           :: Text
  , forQuoteRef      :: Text
  , instrumentID     :: Text
  , investorID       :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcForQuoteField

{#pointer *CThostFtdcForQuoteField as CThostFtdcForQuoteFieldPtr -> CThostFtdcForQuoteField#}

data CThostFtdcDiscountField = CThostFtdcDiscountField
  { discount      :: Double
  , investorID    :: Text
  , investorRange :: Char
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcDiscountField

{#pointer *CThostFtdcDiscountField as CThostFtdcDiscountFieldPtr -> CThostFtdcDiscountField#}

data CThostFtdcRspSyncKeyField = CThostFtdcRspSyncKeyField
  { errorMsg       :: Text
  , errorID        :: Int
  , tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , message        :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspSyncKeyField

{#pointer *CThostFtdcRspSyncKeyField as CThostFtdcRspSyncKeyFieldPtr -> CThostFtdcRspSyncKeyField#}

data CThostFtdcQryExchangeExecOrderActionField = CThostFtdcQryExchangeExecOrderActionField
  { traderID      :: Text
  , exchangeID    :: Text
  , clientID      :: Text
  , participantID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeExecOrderActionField

{#pointer *CThostFtdcQryExchangeExecOrderActionField as CThostFtdcQryExchangeExecOrderActionFieldPtr -> CThostFtdcQryExchangeExecOrderActionField#}

data CThostFtdcETFOptionInstrCommRateField = CThostFtdcETFOptionInstrCommRateField
  { posiDirection           :: Char
  , hedgeFlag               :: Char
  , exchangeID              :: Text
  , strikeRatioByVolume     :: Double
  , strikeRatioByMoney      :: Double
  , closeTodayRatioByVolume :: Double
  , closeTodayRatioByMoney  :: Double
  , closeRatioByVolume      :: Double
  , closeRatioByMoney       :: Double
  , openRatioByVolume       :: Double
  , openRatioByMoney        :: Double
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcETFOptionInstrCommRateField

{#pointer *CThostFtdcETFOptionInstrCommRateField as CThostFtdcETFOptionInstrCommRateFieldPtr -> CThostFtdcETFOptionInstrCommRateField#}

data CThostFtdcInstrumentField = CThostFtdcInstrumentField
  { instrumentCode         :: Text
  , minSellVolume          :: Int
  , minBuyVolume           :: Int
  , combinationType        :: Char
  , underlyingMultiple     :: Double
  , optionsType            :: Char
  , strikePrice            :: Double
  , underlyingInstrID      :: Text
  , maxMarginSideAlgorithm :: Char
  , shortMarginRatio       :: Double
  , longMarginRatio        :: Double
  , positionDateType       :: Char
  , positionType           :: Char
  , isTrading              :: Int
  , instLifePhase          :: Char
  , endDelivDate           :: Text
  , startDelivDate         :: Text
  , expireDate             :: Text
  , openDate               :: Text
  , createDate             :: Text
  , priceTick              :: Double
  , volumeMultiple         :: Int
  , minLimitOrderVolume    :: Int
  , maxLimitOrderVolume    :: Int
  , minMarketOrderVolume   :: Int
  , maxMarketOrderVolume   :: Int
  , deliveryMonth          :: Int
  , deliveryYear           :: Int
  , productClass           :: Char
  , productID              :: Text
  , exchangeInstID         :: Text
  , instrumentName         :: Text
  , exchangeID             :: Text
  , instrumentID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentField

{#pointer *CThostFtdcInstrumentField as CThostFtdcInstrumentFieldPtr -> CThostFtdcInstrumentField#}

data CThostFtdcUserLogoutField = CThostFtdcUserLogoutField
  { userID   :: Text
  , brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcUserLogoutField

{#pointer *CThostFtdcUserLogoutField as CThostFtdcUserLogoutFieldPtr -> CThostFtdcUserLogoutField#}

data CThostFtdcBrokerUserField = CThostFtdcBrokerUserField
  { isUsingOTP :: Int
  , isActive   :: Int
  , userType   :: Char
  , userName   :: Text
  , userID     :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerUserField

{#pointer *CThostFtdcBrokerUserField as CThostFtdcBrokerUserFieldPtr -> CThostFtdcBrokerUserField#}

data CThostFtdcQryProductField = CThostFtdcQryProductField
  { exchangeID   :: Text
  , productClass :: Char
  , productID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryProductField

{#pointer *CThostFtdcQryProductField as CThostFtdcQryProductFieldPtr -> CThostFtdcQryProductField#}

data CThostFtdcQueryMaxOrderVolumeWithPriceField = CThostFtdcQueryMaxOrderVolumeWithPriceField
  { exchangeID   :: Text
  , price        :: Double
  , maxVolume    :: Int
  , hedgeFlag    :: Char
  , offsetFlag   :: Char
  , direction    :: Char
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQueryMaxOrderVolumeWithPriceField

{#pointer *CThostFtdcQueryMaxOrderVolumeWithPriceField as CThostFtdcQueryMaxOrderVolumeWithPriceFieldPtr -> CThostFtdcQueryMaxOrderVolumeWithPriceField#}

data CThostFtdcSettlementInfoConfirmField = CThostFtdcSettlementInfoConfirmField
  { confirmTime :: Text
  , confirmDate :: Text
  , investorID  :: Text
  , brokerID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSettlementInfoConfirmField

{#pointer *CThostFtdcSettlementInfoConfirmField as CThostFtdcSettlementInfoConfirmFieldPtr -> CThostFtdcSettlementInfoConfirmField#}

data CThostFtdcSyncingInstrumentCommissionRateField = CThostFtdcSyncingInstrumentCommissionRateField
  { exchangeID              :: Text
  , closeTodayRatioByVolume :: Double
  , closeTodayRatioByMoney  :: Double
  , closeRatioByVolume      :: Double
  , closeRatioByMoney       :: Double
  , openRatioByVolume       :: Double
  , openRatioByMoney        :: Double
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingInstrumentCommissionRateField

{#pointer *CThostFtdcSyncingInstrumentCommissionRateField as CThostFtdcSyncingInstrumentCommissionRateFieldPtr -> CThostFtdcSyncingInstrumentCommissionRateField#}

data CThostFtdcNoticeField = CThostFtdcNoticeField
  { sequenceLabel :: Text
  , content       :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcNoticeField

{#pointer *CThostFtdcNoticeField as CThostFtdcNoticeFieldPtr -> CThostFtdcNoticeField#}

data CThostFtdcInvestorWithdrawAlgorithmField = CThostFtdcInvestorWithdrawAlgorithmField
  { fundMortgageRatio :: Double
  , currencyID        :: Text
  , usingRatio        :: Double
  , investorID        :: Text
  , investorRange     :: Char
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorWithdrawAlgorithmField

{#pointer *CThostFtdcInvestorWithdrawAlgorithmField as CThostFtdcInvestorWithdrawAlgorithmFieldPtr -> CThostFtdcInvestorWithdrawAlgorithmField#}

data CThostFtdcQryOrderField = CThostFtdcQryOrderField
  { insertTimeEnd   :: Text
  , insertTimeStart :: Text
  , orderSysID      :: Text
  , exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryOrderField

{#pointer *CThostFtdcQryOrderField as CThostFtdcQryOrderFieldPtr -> CThostFtdcQryOrderField#}

data CThostFtdcErrOrderField = CThostFtdcErrOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , clientID            :: Text
  , currencyID          :: Text
  , accountID           :: Text
  , investUnitID        :: Text
  , exchangeID          :: Text
  , isSwapOrder         :: Int
  , errorMsg            :: Text
  , errorID             :: Int
  , userForceClose      :: Int
  , requestID           :: Int
  , businessUnit        :: Text
  , isAutoSuspend       :: Int
  , forceCloseReason    :: Char
  , stopPrice           :: Double
  , contingentCondition :: Char
  , minVolume           :: Int
  , volumeCondition     :: Char
  , gTDDate             :: Text
  , timeCondition       :: Char
  , volumeTotalOriginal :: Int
  , limitPrice          :: Double
  , combHedgeFlag       :: Text
  , combOffsetFlag      :: Text
  , direction           :: Char
  , orderPriceType      :: Char
  , userID              :: Text
  , orderRef            :: Text
  , instrumentID        :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcErrOrderField

{#pointer *CThostFtdcErrOrderField as CThostFtdcErrOrderFieldPtr -> CThostFtdcErrOrderField#}

data CThostFtdcRemoveParkedOrderActionField = CThostFtdcRemoveParkedOrderActionField
  { parkedOrderActionID :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRemoveParkedOrderActionField

{#pointer *CThostFtdcRemoveParkedOrderActionField as CThostFtdcRemoveParkedOrderActionFieldPtr -> CThostFtdcRemoveParkedOrderActionField#}

newtype CThostFtdcQrySuperUserField = CThostFtdcQrySuperUserField
  { userID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySuperUserField

{#pointer *CThostFtdcQrySuperUserField as CThostFtdcQrySuperUserFieldPtr -> CThostFtdcQrySuperUserField#}

data CThostFtdcExchangeLockField = CThostFtdcExchangeLockField
  { macAddress        :: Text
  , iPAddress         :: Text
  , branchID          :: Text
  , sequenceNo        :: Int
  , clearingPartID    :: Text
  , lockStatus        :: Char
  , cancelTime        :: Text
  , insertTime        :: Text
  , insertDate        :: Text
  , lockSysID         :: Text
  , settlementID      :: Int
  , tradingDay        :: Text
  , notifySequence    :: Int
  , orderSubmitStatus :: Char
  , installID         :: Int
  , traderID          :: Text
  , exchangeInstID    :: Text
  , clientID          :: Text
  , participantID     :: Text
  , exchangeID        :: Text
  , lockLocalID       :: Text
  , lockType          :: Char
  , businessUnit      :: Text
  , requestID         :: Int
  , volume            :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeLockField

{#pointer *CThostFtdcExchangeLockField as CThostFtdcExchangeLockFieldPtr -> CThostFtdcExchangeLockField#}

data CThostFtdcStockDisposalActionField = CThostFtdcStockDisposalActionField
  { branchID               :: Text
  , instrumentID           :: Text
  , statusMsg              :: Text
  , actionType             :: Char
  , userID                 :: Text
  , orderActionStatus      :: Char
  , businessUnit           :: Text
  , clientID               :: Text
  , participantID          :: Text
  , actionLocalID          :: Text
  , stockDisposalLocalID   :: Text
  , installID              :: Int
  , traderID               :: Text
  , actionTime             :: Text
  , actionDate             :: Text
  , actionFlag             :: Char
  , stockDisposalSysID     :: Text
  , exchangeID             :: Text
  , sessionID              :: Int
  , frontID                :: Int
  , requestID              :: Int
  , stockDisposalRef       :: Text
  , stockDisposalActionRef :: Int
  , investorID             :: Text
  , brokerID               :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcStockDisposalActionField

{#pointer *CThostFtdcStockDisposalActionField as CThostFtdcStockDisposalActionFieldPtr -> CThostFtdcStockDisposalActionField#}

data CThostFtdcRspInfoField = CThostFtdcRspInfoField
  { errorMsg :: Text
  , errorID  :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcRspInfoField

{#pointer *CThostFtdcRspInfoField as CThostFtdcRspInfoFieldPtr -> CThostFtdcRspInfoField#}

data CThostFtdcQryForQuoteField = CThostFtdcQryForQuoteField
  { insertTimeEnd   :: Text
  , insertTimeStart :: Text
  , exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryForQuoteField

{#pointer *CThostFtdcQryForQuoteField as CThostFtdcQryForQuoteFieldPtr -> CThostFtdcQryForQuoteField#}

data CThostFtdcQryErrStockDisposalActionField = CThostFtdcQryErrStockDisposalActionField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryErrStockDisposalActionField

{#pointer *CThostFtdcQryErrStockDisposalActionField as CThostFtdcQryErrStockDisposalActionFieldPtr -> CThostFtdcQryErrStockDisposalActionField#}

data CThostFtdcQryInvestorField = CThostFtdcQryInvestorField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorField

{#pointer *CThostFtdcQryInvestorField as CThostFtdcQryInvestorFieldPtr -> CThostFtdcQryInvestorField#}

data CThostFtdcQryTradeField = CThostFtdcQryTradeField
  { tradeTimeEnd   :: Text
  , tradeTimeStart :: Text
  , tradeID        :: Text
  , exchangeID     :: Text
  , instrumentID   :: Text
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTradeField

{#pointer *CThostFtdcQryTradeField as CThostFtdcQryTradeFieldPtr -> CThostFtdcQryTradeField#}

data CThostFtdcCFMMCTradingAccountKeyField = CThostFtdcCFMMCTradingAccountKeyField
  { currentKey    :: Text
  , keyID         :: Int
  , accountID     :: Text
  , participantID :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCFMMCTradingAccountKeyField

{#pointer *CThostFtdcCFMMCTradingAccountKeyField as CThostFtdcCFMMCTradingAccountKeyFieldPtr -> CThostFtdcCFMMCTradingAccountKeyField#}

data CThostFtdcExecFreezeField = CThostFtdcExecFreezeField
  { frozenAmount  :: Double
  , volume        :: Int
  , optionsType   :: Char
  , posiDirection :: Char
  , investorID    :: Text
  , brokerID      :: Text
  , exchangeID    :: Text
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExecFreezeField

{#pointer *CThostFtdcExecFreezeField as CThostFtdcExecFreezeFieldPtr -> CThostFtdcExecFreezeField#}

data CThostFtdcQryOptionInstrTradingRightField = CThostFtdcQryOptionInstrTradingRightField
  { exchangeID   :: Text
  , direction    :: Char
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryOptionInstrTradingRightField

{#pointer *CThostFtdcQryOptionInstrTradingRightField as CThostFtdcQryOptionInstrTradingRightFieldPtr -> CThostFtdcQryOptionInstrTradingRightField#}

data CThostFtdcQryLinkManField = CThostFtdcQryLinkManField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLinkManField

{#pointer *CThostFtdcQryLinkManField as CThostFtdcQryLinkManFieldPtr -> CThostFtdcQryLinkManField#}

data CThostFtdcExchangeStockDisposalField = CThostFtdcExchangeStockDisposalField
  { businessUnit         :: Text
  , stockDisposalSysID   :: Text
  , branchID             :: Text
  , insertTime           :: Text
  , insertDate           :: Text
  , settlementID         :: Int
  , tradingDay           :: Text
  , notifySequence       :: Int
  , stockDisposalStatus  :: Char
  , installID            :: Int
  , traderID             :: Text
  , clientID             :: Text
  , participantID        :: Text
  , exchangeInstID       :: Text
  , exchangeID           :: Text
  , stockDisposalLocalID :: Text
  , stockDisposalType    :: Char
  , volume               :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeStockDisposalField

{#pointer *CThostFtdcExchangeStockDisposalField as CThostFtdcExchangeStockDisposalFieldPtr -> CThostFtdcExchangeStockDisposalField#}

data CThostFtdcProductField = CThostFtdcProductField
  { underlyingMultiple   :: Double
  , exchangeProductID    :: Text
  , mortgageFundUseRange :: Char
  , tradeCurrencyID      :: Text
  , closeDealType        :: Char
  , positionDateType     :: Char
  , positionType         :: Char
  , minLimitOrderVolume  :: Int
  , maxLimitOrderVolume  :: Int
  , minMarketOrderVolume :: Int
  , maxMarketOrderVolume :: Int
  , priceTick            :: Double
  , volumeMultiple       :: Int
  , productClass         :: Char
  , exchangeID           :: Text
  , productName          :: Text
  , productID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcProductField

{#pointer *CThostFtdcProductField as CThostFtdcProductFieldPtr -> CThostFtdcProductField#}

data CThostFtdcQryLockField = CThostFtdcQryLockField
  { insertTimeEnd   :: Text
  , insertTimeStart :: Text
  , lockSysID       :: Text
  , exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLockField

{#pointer *CThostFtdcQryLockField as CThostFtdcQryLockFieldPtr -> CThostFtdcQryLockField#}

data CThostFtdcInvestorPositionCombineDetailField = CThostFtdcInvestorPositionCombineDetailField
  { tradeGroupID       :: Int
  , combInstrumentID   :: Text
  , legMultiple        :: Int
  , legID              :: Int
  , marginRateByVolume :: Double
  , marginRateByMoney  :: Double
  , exchMargin         :: Double
  , margin             :: Double
  , totalAmt           :: Int
  , direction          :: Char
  , hedgeFlag          :: Char
  , instrumentID       :: Text
  , tradeID            :: Text
  , comTradeID         :: Text
  , investorID         :: Text
  , brokerID           :: Text
  , settlementID       :: Int
  , exchangeID         :: Text
  , openDate           :: Text
  , tradingDay         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorPositionCombineDetailField

{#pointer *CThostFtdcInvestorPositionCombineDetailField as CThostFtdcInvestorPositionCombineDetailFieldPtr -> CThostFtdcInvestorPositionCombineDetailField#}

data CThostFtdcMDTraderOfferField = CThostFtdcMDTraderOfferField
  { bizType                  :: Char
  , maxOrderMessageReference :: Text
  , maxTradeID               :: Text
  , brokerID                 :: Text
  , tradingDay               :: Text
  , startTime                :: Text
  , startDate                :: Text
  , connectTime              :: Text
  , connectDate              :: Text
  , lastReportTime           :: Text
  , lastReportDate           :: Text
  , connectRequestTime       :: Text
  , connectRequestDate       :: Text
  , traderConnectStatus      :: Char
  , orderLocalID             :: Text
  , installID                :: Int
  , password                 :: Text
  , participantID            :: Text
  , traderID                 :: Text
  , exchangeID               :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMDTraderOfferField

{#pointer *CThostFtdcMDTraderOfferField as CThostFtdcMDTraderOfferFieldPtr -> CThostFtdcMDTraderOfferField#}

data CThostFtdcReqSyncKeyField = CThostFtdcReqSyncKeyField
  { tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , message        :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqSyncKeyField

{#pointer *CThostFtdcReqSyncKeyField as CThostFtdcReqSyncKeyFieldPtr -> CThostFtdcReqSyncKeyField#}

data CThostFtdcQryInvestorLevelField = CThostFtdcQryInvestorLevelField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorLevelField

{#pointer *CThostFtdcQryInvestorLevelField as CThostFtdcQryInvestorLevelFieldPtr -> CThostFtdcQryInvestorLevelField#}

data CThostFtdcQryLimitPosiField = CThostFtdcQryLimitPosiField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLimitPosiField

{#pointer *CThostFtdcQryLimitPosiField as CThostFtdcQryLimitPosiFieldPtr -> CThostFtdcQryLimitPosiField#}

data CThostFtdcQryBrokerTradingAlgosField = CThostFtdcQryBrokerTradingAlgosField
  { instrumentID :: Text
  , exchangeID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerTradingAlgosField

{#pointer *CThostFtdcQryBrokerTradingAlgosField as CThostFtdcQryBrokerTradingAlgosFieldPtr -> CThostFtdcQryBrokerTradingAlgosField#}

data CThostFtdcForQuoteRspField = CThostFtdcForQuoteRspField
  { exchangeID    :: Text
  , actionDay     :: Text
  , forQuoteTime  :: Text
  , forQuoteSysID :: Text
  , instrumentID  :: Text
  , tradingDay    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcForQuoteRspField

{#pointer *CThostFtdcForQuoteRspField as CThostFtdcForQuoteRspFieldPtr -> CThostFtdcForQuoteRspField#}

data CThostFtdcStrikeOffsetField = CThostFtdcStrikeOffsetField
  { exchangeID    :: Text
  , offsetType    :: Char
  , offset        :: Double
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcStrikeOffsetField

{#pointer *CThostFtdcStrikeOffsetField as CThostFtdcStrikeOffsetFieldPtr -> CThostFtdcStrikeOffsetField#}

data CThostFtdcInstrumentStatusField = CThostFtdcInstrumentStatusField
  { enterReason       :: Char
  , enterTime         :: Text
  , tradingSegmentSN  :: Int
  , instrumentStatus  :: Char
  , instrumentID      :: Text
  , settlementGroupID :: Text
  , exchangeInstID    :: Text
  , exchangeID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentStatusField

{#pointer *CThostFtdcInstrumentStatusField as CThostFtdcInstrumentStatusFieldPtr -> CThostFtdcInstrumentStatusField#}

data CThostFtdcRspAuthenticateField = CThostFtdcRspAuthenticateField
  { userProductInfo :: Text
  , userID          :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspAuthenticateField

{#pointer *CThostFtdcRspAuthenticateField as CThostFtdcRspAuthenticateFieldPtr -> CThostFtdcRspAuthenticateField#}

data CThostFtdcCurrentTimeField = CThostFtdcCurrentTimeField
  { actionDay    :: Text
  , currMillisec :: Int
  , currTime     :: Text
  , currDate     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCurrentTimeField

{#pointer *CThostFtdcCurrentTimeField as CThostFtdcCurrentTimeFieldPtr -> CThostFtdcCurrentTimeField#}

newtype CThostFtdcQryFrontStatusField = CThostFtdcQryFrontStatusField
  { frontID :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcQryFrontStatusField

{#pointer *CThostFtdcQryFrontStatusField as CThostFtdcQryFrontStatusFieldPtr -> CThostFtdcQryFrontStatusField#}

data CThostFtdcQryForQuoteParamField = CThostFtdcQryForQuoteParamField
  { exchangeID   :: Text
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryForQuoteParamField

{#pointer *CThostFtdcQryForQuoteParamField as CThostFtdcQryForQuoteParamFieldPtr -> CThostFtdcQryForQuoteParamField#}

data CThostFtdcQrySettlementInfoConfirmField = CThostFtdcQrySettlementInfoConfirmField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySettlementInfoConfirmField

{#pointer *CThostFtdcQrySettlementInfoConfirmField as CThostFtdcQrySettlementInfoConfirmFieldPtr -> CThostFtdcQrySettlementInfoConfirmField#}

newtype CThostFtdcBrokerSyncField = CThostFtdcBrokerSyncField
  { brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerSyncField

{#pointer *CThostFtdcBrokerSyncField as CThostFtdcBrokerSyncFieldPtr -> CThostFtdcBrokerSyncField#}

data CThostFtdcSyncingInvestorField = CThostFtdcSyncingInvestorField
  { marginModelID      :: Text
  , commModelID        :: Text
  , mobile             :: Text
  , openDate           :: Text
  , address            :: Text
  , telephone          :: Text
  , isActive           :: Int
  , identifiedCardNo   :: Text
  , identifiedCardType :: Char
  , investorName       :: Text
  , investorGroupID    :: Text
  , brokerID           :: Text
  , investorID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingInvestorField

{#pointer *CThostFtdcSyncingInvestorField as CThostFtdcSyncingInvestorFieldPtr -> CThostFtdcSyncingInvestorField#}

data CThostFtdcQueryCFMMCTradingAccountTokenField = CThostFtdcQueryCFMMCTradingAccountTokenField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQueryCFMMCTradingAccountTokenField

{#pointer *CThostFtdcQueryCFMMCTradingAccountTokenField as CThostFtdcQueryCFMMCTradingAccountTokenFieldPtr -> CThostFtdcQueryCFMMCTradingAccountTokenField#}

data CThostFtdcPosiFreezeField = CThostFtdcPosiFreezeField
  { freezeType       :: Char
  , freezeReasonType :: Char
  , volume           :: Int
  , installID        :: Int
  , participantID    :: Text
  , traderID         :: Text
  , orderLocalID     :: Text
  , exchangeID       :: Text
  , instrumentID     :: Text
  , investorID       :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcPosiFreezeField

{#pointer *CThostFtdcPosiFreezeField as CThostFtdcPosiFreezeFieldPtr -> CThostFtdcPosiFreezeField#}

data CThostFtdcReturnResultField = CThostFtdcReturnResultField
  { descrInfoForReturnCode :: Text
  , returnCode             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReturnResultField

{#pointer *CThostFtdcReturnResultField as CThostFtdcReturnResultFieldPtr -> CThostFtdcReturnResultField#}

data CThostFtdcFutureSignIOField = CThostFtdcFutureSignIOField
  { tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , currencyID     :: Text
  , digest         :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcFutureSignIOField

{#pointer *CThostFtdcFutureSignIOField as CThostFtdcFutureSignIOFieldPtr -> CThostFtdcFutureSignIOField#}

data CThostFtdcQrySyncDepositField = CThostFtdcQrySyncDepositField
  { depositSeqNo :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySyncDepositField

{#pointer *CThostFtdcQrySyncDepositField as CThostFtdcQrySyncDepositFieldPtr -> CThostFtdcQrySyncDepositField#}

data CThostFtdcPartBrokerField = CThostFtdcPartBrokerField
  { isActive      :: Int
  , participantID :: Text
  , exchangeID    :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcPartBrokerField

{#pointer *CThostFtdcPartBrokerField as CThostFtdcPartBrokerFieldPtr -> CThostFtdcPartBrokerField#}

newtype CThostFtdcQryInvestorGroupField = CThostFtdcQryInvestorGroupField
  { brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorGroupField

{#pointer *CThostFtdcQryInvestorGroupField as CThostFtdcQryInvestorGroupFieldPtr -> CThostFtdcQryInvestorGroupField#}

data CThostFtdcLockPositionField = CThostFtdcLockPositionField
  { frozenVolume :: Int
  , volume       :: Int
  , exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLockPositionField

{#pointer *CThostFtdcLockPositionField as CThostFtdcLockPositionFieldPtr -> CThostFtdcLockPositionField#}

data CThostFtdcExchangeRateField = CThostFtdcExchangeRateField
  { exchangeRate     :: Double
  , toCurrencyID     :: Text
  , fromCurrencyUnit :: Double
  , fromCurrencyID   :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeRateField

{#pointer *CThostFtdcExchangeRateField as CThostFtdcExchangeRateFieldPtr -> CThostFtdcExchangeRateField#}

data CThostFtdcQryProductGroupField = CThostFtdcQryProductGroupField
  { exchangeID :: Text
  , productID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryProductGroupField

{#pointer *CThostFtdcQryProductGroupField as CThostFtdcQryProductGroupFieldPtr -> CThostFtdcQryProductGroupField#}

data CThostFtdcSuperUserFunctionField = CThostFtdcSuperUserFunctionField
  { functionCode :: Char
  , userID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSuperUserFunctionField

{#pointer *CThostFtdcSuperUserFunctionField as CThostFtdcSuperUserFunctionFieldPtr -> CThostFtdcSuperUserFunctionField#}

data CThostFtdcQryDesignateField = CThostFtdcQryDesignateField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryDesignateField

{#pointer *CThostFtdcQryDesignateField as CThostFtdcQryDesignateFieldPtr -> CThostFtdcQryDesignateField#}

data CThostFtdcFensUserInfoField = CThostFtdcFensUserInfoField
  { loginMode :: Char
  , userID    :: Text
  , brokerID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcFensUserInfoField

{#pointer *CThostFtdcFensUserInfoField as CThostFtdcFensUserInfoFieldPtr -> CThostFtdcFensUserInfoField#}

data CThostFtdcQryHisOrderField = CThostFtdcQryHisOrderField
  { settlementID    :: Int
  , tradingDay      :: Text
  , insertTimeEnd   :: Text
  , insertTimeStart :: Text
  , orderSysID      :: Text
  , exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryHisOrderField

{#pointer *CThostFtdcQryHisOrderField as CThostFtdcQryHisOrderFieldPtr -> CThostFtdcQryHisOrderField#}

data CThostFtdcQryErrOrderField = CThostFtdcQryErrOrderField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryErrOrderField

{#pointer *CThostFtdcQryErrOrderField as CThostFtdcQryErrOrderFieldPtr -> CThostFtdcQryErrOrderField#}

data CThostFtdcExchangeForQuoteField = CThostFtdcExchangeForQuoteField
  { branchID        :: Text
  , macAddress      :: Text
  , iPAddress       :: Text
  , forQuoteStatus  :: Char
  , insertTime      :: Text
  , insertDate      :: Text
  , installID       :: Int
  , traderID        :: Text
  , exchangeInstID  :: Text
  , clientID        :: Text
  , participantID   :: Text
  , exchangeID      :: Text
  , forQuoteLocalID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeForQuoteField

{#pointer *CThostFtdcExchangeForQuoteField as CThostFtdcExchangeForQuoteFieldPtr -> CThostFtdcExchangeForQuoteField#}

data CThostFtdcTraderOfferField = CThostFtdcTraderOfferField
  { bizType                  :: Char
  , maxOrderMessageReference :: Text
  , maxTradeID               :: Text
  , brokerID                 :: Text
  , tradingDay               :: Text
  , startTime                :: Text
  , startDate                :: Text
  , connectTime              :: Text
  , connectDate              :: Text
  , lastReportTime           :: Text
  , lastReportDate           :: Text
  , connectRequestTime       :: Text
  , connectRequestDate       :: Text
  , traderConnectStatus      :: Char
  , orderLocalID             :: Text
  , installID                :: Int
  , password                 :: Text
  , participantID            :: Text
  , traderID                 :: Text
  , exchangeID               :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTraderOfferField

{#pointer *CThostFtdcTraderOfferField as CThostFtdcTraderOfferFieldPtr -> CThostFtdcTraderOfferField#}

data CThostFtdcUserIPField = CThostFtdcUserIPField
  { macAddress :: Text
  , iPMask     :: Text
  , iPAddress  :: Text
  , userID     :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcUserIPField

{#pointer *CThostFtdcUserIPField as CThostFtdcUserIPFieldPtr -> CThostFtdcUserIPField#}

data CThostFtdcLinkManField = CThostFtdcLinkManField
  { personFullName     :: Text
  , uOAZipCode         :: Text
  , priority           :: Int
  , zipCode            :: Text
  , address            :: Text
  , telephone          :: Text
  , personName         :: Text
  , identifiedCardNo   :: Text
  , identifiedCardType :: Char
  , personType         :: Char
  , investorID         :: Text
  , brokerID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLinkManField

{#pointer *CThostFtdcLinkManField as CThostFtdcLinkManFieldPtr -> CThostFtdcLinkManField#}

data CThostFtdcVerifyCustInfoField = CThostFtdcVerifyCustInfoField
  { custType         :: Char
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , customerName     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcVerifyCustInfoField

{#pointer *CThostFtdcVerifyCustInfoField as CThostFtdcVerifyCustInfoFieldPtr -> CThostFtdcVerifyCustInfoField#}

data CThostFtdcProductGroupField = CThostFtdcProductGroupField
  { productGroupID :: Text
  , exchangeID     :: Text
  , productID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcProductGroupField

{#pointer *CThostFtdcProductGroupField as CThostFtdcProductGroupFieldPtr -> CThostFtdcProductGroupField#}

data CThostFtdcQryLoginForbiddenUserField = CThostFtdcQryLoginForbiddenUserField
  { userID   :: Text
  , brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLoginForbiddenUserField

{#pointer *CThostFtdcQryLoginForbiddenUserField as CThostFtdcQryLoginForbiddenUserFieldPtr -> CThostFtdcQryLoginForbiddenUserField#}

data CThostFtdcQryExchangeMarginRateField = CThostFtdcQryExchangeMarginRateField
  { hedgeFlag    :: Char
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeMarginRateField

{#pointer *CThostFtdcQryExchangeMarginRateField as CThostFtdcQryExchangeMarginRateFieldPtr -> CThostFtdcQryExchangeMarginRateField#}

data CThostFtdcQryLimitAmountField = CThostFtdcQryLimitAmountField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLimitAmountField

{#pointer *CThostFtdcQryLimitAmountField as CThostFtdcQryLimitAmountFieldPtr -> CThostFtdcQryLimitAmountField#}

data CThostFtdcQryBulletinField = CThostFtdcQryBulletinField
  { newsUrgency :: Char
  , newsType    :: Text
  , sequenceNo  :: Int
  , bulletinID  :: Int
  , exchangeID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBulletinField

{#pointer *CThostFtdcQryBulletinField as CThostFtdcQryBulletinFieldPtr -> CThostFtdcQryBulletinField#}

data CThostFtdcUserSessionField = CThostFtdcUserSessionField
  { loginRemark          :: Text
  , macAddress           :: Text
  , protocolInfo         :: Text
  , interfaceProductInfo :: Text
  , userProductInfo      :: Text
  , iPAddress            :: Text
  , loginTime            :: Text
  , loginDate            :: Text
  , userID               :: Text
  , brokerID             :: Text
  , sessionID            :: Int
  , frontID              :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcUserSessionField

{#pointer *CThostFtdcUserSessionField as CThostFtdcUserSessionFieldPtr -> CThostFtdcUserSessionField#}

data CThostFtdcSyncDepositField = CThostFtdcSyncDepositField
  { bizType      :: Char
  , currencyID   :: Text
  , isForce      :: Int
  , deposit      :: Double
  , investorID   :: Text
  , brokerID     :: Text
  , depositSeqNo :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncDepositField

{#pointer *CThostFtdcSyncDepositField as CThostFtdcSyncDepositFieldPtr -> CThostFtdcSyncDepositField#}

data CThostFtdcCombActionField = CThostFtdcCombActionField
  { branchID        :: Text
  , comTradeID      :: Text
  , macAddress      :: Text
  , iPAddress       :: Text
  , statusMsg       :: Text
  , userProductInfo :: Text
  , sessionID       :: Int
  , frontID         :: Int
  , sequenceNo      :: Int
  , settlementID    :: Int
  , tradingDay      :: Text
  , notifySequence  :: Int
  , actionStatus    :: Char
  , installID       :: Int
  , traderID        :: Text
  , exchangeInstID  :: Text
  , clientID        :: Text
  , participantID   :: Text
  , exchangeID      :: Text
  , actionLocalID   :: Text
  , hedgeFlag       :: Char
  , combDirection   :: Char
  , volume          :: Int
  , direction       :: Char
  , userID          :: Text
  , combActionRef   :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCombActionField

{#pointer *CThostFtdcCombActionField as CThostFtdcCombActionFieldPtr -> CThostFtdcCombActionField#}

data CThostFtdcCFMMCTradingAccountTokenField = CThostFtdcCFMMCTradingAccountTokenField
  { token         :: Text
  , keyID         :: Int
  , accountID     :: Text
  , participantID :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCFMMCTradingAccountTokenField

{#pointer *CThostFtdcCFMMCTradingAccountTokenField as CThostFtdcCFMMCTradingAccountTokenFieldPtr -> CThostFtdcCFMMCTradingAccountTokenField#}

data CThostFtdcErrorConditionalOrderField = CThostFtdcErrorConditionalOrderField
  { macAddress           :: Text
  , iPAddress            :: Text
  , currencyID           :: Text
  , accountID            :: Text
  , investUnitID         :: Text
  , branchID             :: Text
  , isSwapOrder          :: Int
  , errorMsg             :: Text
  , errorID              :: Int
  , zCETotalTradedVolume :: Int
  , relativeOrderSysID   :: Text
  , brokerOrderSeq       :: Int
  , activeUserID         :: Text
  , userForceClose       :: Int
  , statusMsg            :: Text
  , userProductInfo      :: Text
  , sessionID            :: Int
  , frontID              :: Int
  , sequenceNo           :: Int
  , clearingPartID       :: Text
  , activeTraderID       :: Text
  , cancelTime           :: Text
  , updateTime           :: Text
  , suspendTime          :: Text
  , activeTime           :: Text
  , insertTime           :: Text
  , insertDate           :: Text
  , volumeTotal          :: Int
  , volumeTraded         :: Int
  , orderType            :: Char
  , orderStatus          :: Char
  , orderSource          :: Char
  , orderSysID           :: Text
  , settlementID         :: Int
  , tradingDay           :: Text
  , notifySequence       :: Int
  , orderSubmitStatus    :: Char
  , installID            :: Int
  , traderID             :: Text
  , exchangeInstID       :: Text
  , clientID             :: Text
  , participantID        :: Text
  , exchangeID           :: Text
  , orderLocalID         :: Text
  , requestID            :: Int
  , businessUnit         :: Text
  , isAutoSuspend        :: Int
  , forceCloseReason     :: Char
  , stopPrice            :: Double
  , contingentCondition  :: Char
  , minVolume            :: Int
  , volumeCondition      :: Char
  , gTDDate              :: Text
  , timeCondition        :: Char
  , volumeTotalOriginal  :: Int
  , limitPrice           :: Double
  , combHedgeFlag        :: Text
  , combOffsetFlag       :: Text
  , direction            :: Char
  , orderPriceType       :: Char
  , userID               :: Text
  , orderRef             :: Text
  , instrumentID         :: Text
  , investorID           :: Text
  , brokerID             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcErrorConditionalOrderField

{#pointer *CThostFtdcErrorConditionalOrderField as CThostFtdcErrorConditionalOrderFieldPtr -> CThostFtdcErrorConditionalOrderField#}

data CThostFtdcBrokerUserEventField = CThostFtdcBrokerUserEventField
  { exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , userEventInfo   :: Text
  , eventTime       :: Text
  , eventDate       :: Text
  , eventSequenceNo :: Int
  , userEventType   :: Char
  , userID          :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerUserEventField

{#pointer *CThostFtdcBrokerUserEventField as CThostFtdcBrokerUserEventFieldPtr -> CThostFtdcBrokerUserEventField#}

data CThostFtdcTradingCodeField = CThostFtdcTradingCodeField
  { bizType      :: Char
  , branchID     :: Text
  , clientIDType :: Char
  , isActive     :: Int
  , clientID     :: Text
  , exchangeID   :: Text
  , brokerID     :: Text
  , investorID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingCodeField

{#pointer *CThostFtdcTradingCodeField as CThostFtdcTradingCodeFieldPtr -> CThostFtdcTradingCodeField#}

data CThostFtdcRspUserLoginField = CThostFtdcRspUserLoginField
  { iNETime     :: Text
  , fFEXTime    :: Text
  , cZCETime    :: Text
  , dCETime     :: Text
  , sHFETime    :: Text
  , maxOrderRef :: Text
  , sessionID   :: Int
  , frontID     :: Int
  , systemName  :: Text
  , userID      :: Text
  , brokerID    :: Text
  , loginTime   :: Text
  , tradingDay  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspUserLoginField

{#pointer *CThostFtdcRspUserLoginField as CThostFtdcRspUserLoginFieldPtr -> CThostFtdcRspUserLoginField#}

data CThostFtdcOptionInstrDeltaField = CThostFtdcOptionInstrDeltaField
  { exchangeID    :: Text
  , delta         :: Double
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrDeltaField

{#pointer *CThostFtdcOptionInstrDeltaField as CThostFtdcOptionInstrDeltaFieldPtr -> CThostFtdcOptionInstrDeltaField#}

data CThostFtdcSyncFundMortgageField = CThostFtdcSyncFundMortgageField
  { toCurrencyID   :: Text
  , mortgageAmount :: Double
  , fromCurrencyID :: Text
  , investorID     :: Text
  , brokerID       :: Text
  , mortgageSeqNo  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncFundMortgageField

{#pointer *CThostFtdcSyncFundMortgageField as CThostFtdcSyncFundMortgageFieldPtr -> CThostFtdcSyncFundMortgageField#}

data CThostFtdcQryStockDisposalField = CThostFtdcQryStockDisposalField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryStockDisposalField

{#pointer *CThostFtdcQryStockDisposalField as CThostFtdcQryStockDisposalFieldPtr -> CThostFtdcQryStockDisposalField#}

data CThostFtdcReqAuthenticateField = CThostFtdcReqAuthenticateField
  { authCode        :: Text
  , userProductInfo :: Text
  , userID          :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqAuthenticateField

{#pointer *CThostFtdcReqAuthenticateField as CThostFtdcReqAuthenticateFieldPtr -> CThostFtdcReqAuthenticateField#}

data CThostFtdcSyncingInvestorGroupField = CThostFtdcSyncingInvestorGroupField
  { investorGroupName :: Text
  , investorGroupID   :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingInvestorGroupField

{#pointer *CThostFtdcSyncingInvestorGroupField as CThostFtdcSyncingInvestorGroupFieldPtr -> CThostFtdcSyncingInvestorGroupField#}

data CThostFtdcOpenAccountField = CThostFtdcOpenAccountField
  { errorMsg           :: Text
  , errorID            :: Int
  , userID             :: Text
  , tID                :: Int
  , operNo             :: Text
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , bankSecuAcc        :: Text
  , brokerIDByBank     :: Text
  , bankSecuAccType    :: Char
  , deviceID           :: Text
  , bankAccType        :: Char
  , digest             :: Text
  , cashExchangeCode   :: Char
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , installID          :: Int
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , moneyAccountStatus :: Char
  , eMail              :: Text
  , fax                :: Text
  , mobilePhone        :: Text
  , telephone          :: Text
  , zipCode            :: Text
  , address            :: Text
  , custType           :: Char
  , countryCode        :: Text
  , gender             :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOpenAccountField

{#pointer *CThostFtdcOpenAccountField as CThostFtdcOpenAccountFieldPtr -> CThostFtdcOpenAccountField#}

data CThostFtdcBrokerLimitPosiField = CThostFtdcBrokerLimitPosiField
  { longVolumeFrozen  :: Double
  , totalVolumeFrozen :: Double
  , longVolume        :: Double
  , totalVolume       :: Double
  , exchangeID        :: Text
  , instrumentID      :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerLimitPosiField

{#pointer *CThostFtdcBrokerLimitPosiField as CThostFtdcBrokerLimitPosiFieldPtr -> CThostFtdcBrokerLimitPosiField#}

data CThostFtdcQryInstrumentTradingRightField = CThostFtdcQryInstrumentTradingRightField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInstrumentTradingRightField

{#pointer *CThostFtdcQryInstrumentTradingRightField as CThostFtdcQryInstrumentTradingRightFieldPtr -> CThostFtdcQryInstrumentTradingRightField#}

data CThostFtdcExchangeStockDisposalActionField = CThostFtdcExchangeStockDisposalActionField
  { branchID             :: Text
  , actionType           :: Char
  , userID               :: Text
  , orderActionStatus    :: Char
  , businessUnit         :: Text
  , clientID             :: Text
  , participantID        :: Text
  , actionLocalID        :: Text
  , stockDisposalLocalID :: Text
  , installID            :: Int
  , traderID             :: Text
  , actionTime           :: Text
  , actionDate           :: Text
  , actionFlag           :: Char
  , stockDisposalSysID   :: Text
  , exchangeID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeStockDisposalActionField

{#pointer *CThostFtdcExchangeStockDisposalActionField as CThostFtdcExchangeStockDisposalActionFieldPtr -> CThostFtdcExchangeStockDisposalActionField#}

data CThostFtdcQryUserSessionField = CThostFtdcQryUserSessionField
  { userID    :: Text
  , brokerID  :: Text
  , sessionID :: Int
  , frontID   :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcQryUserSessionField

{#pointer *CThostFtdcQryUserSessionField as CThostFtdcQryUserSessionFieldPtr -> CThostFtdcQryUserSessionField#}

data CThostFtdcQryExecOrderField = CThostFtdcQryExecOrderField
  { insertTimeEnd   :: Text
  , insertTimeStart :: Text
  , execOrderSysID  :: Text
  , exchangeID      :: Text
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExecOrderField

{#pointer *CThostFtdcQryExecOrderField as CThostFtdcQryExecOrderFieldPtr -> CThostFtdcQryExecOrderField#}

data CThostFtdcErrExecOrderField = CThostFtdcErrExecOrderField
  { errorMsg            :: Text
  , errorID             :: Int
  , macAddress          :: Text
  , iPAddress           :: Text
  , clientID            :: Text
  , currencyID          :: Text
  , accountID           :: Text
  , investUnitID        :: Text
  , exchangeID          :: Text
  , closeFlag           :: Char
  , reservePositionFlag :: Char
  , posiDirection       :: Char
  , actionType          :: Char
  , hedgeFlag           :: Char
  , offsetFlag          :: Char
  , businessUnit        :: Text
  , requestID           :: Int
  , volume              :: Int
  , userID              :: Text
  , execOrderRef        :: Text
  , instrumentID        :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcErrExecOrderField

{#pointer *CThostFtdcErrExecOrderField as CThostFtdcErrExecOrderFieldPtr -> CThostFtdcErrExecOrderField#}

data CThostFtdcRspQueryTradeResultBySerialField = CThostFtdcRspQueryTradeResultBySerialField
  { digest                       :: Text
  , tradeAmount                  :: Double
  , currencyID                   :: Text
  , password                     :: Text
  , accountID                    :: Text
  , bankPassWord                 :: Text
  , bankAccount                  :: Text
  , originDescrInfoForReturnCode :: Text
  , originReturnCode             :: Text
  , refrenceIssure               :: Text
  , refrenceIssureType           :: Char
  , reference                    :: Int
  , errorMsg                     :: Text
  , errorID                      :: Int
  , sessionID                    :: Int
  , lastFragment                 :: Char
  , plateSerial                  :: Int
  , tradingDay                   :: Text
  , bankSerial                   :: Text
  , tradeTime                    :: Text
  , tradeDate                    :: Text
  , brokerBranchID               :: Text
  , brokerID                     :: Text
  , bankBranchID                 :: Text
  , bankID                       :: Text
  , tradeCode                    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspQueryTradeResultBySerialField

{#pointer *CThostFtdcRspQueryTradeResultBySerialField as CThostFtdcRspQueryTradeResultBySerialFieldPtr -> CThostFtdcRspQueryTradeResultBySerialField#}

data CThostFtdcInvestorPositionField = CThostFtdcInvestorPositionField
  { ydStrikeFrozen     :: Int
  , exchangeID         :: Text
  , abandonFrozen      :: Int
  , strikeFrozenAmount :: Double
  , strikeFrozen       :: Int
  , marginRateByVolume :: Double
  , marginRateByMoney  :: Double
  , todayPosition      :: Int
  , closeProfitByTrade :: Double
  , closeProfitByDate  :: Double
  , combShortFrozen    :: Int
  , combLongFrozen     :: Int
  , combPosition       :: Int
  , exchangeMargin     :: Double
  , openCost           :: Double
  , settlementID       :: Int
  , tradingDay         :: Text
  , settlementPrice    :: Double
  , preSettlementPrice :: Double
  , positionProfit     :: Double
  , closeProfit        :: Double
  , commission         :: Double
  , cashIn             :: Double
  , frozenCommission   :: Double
  , frozenCash         :: Double
  , frozenMargin       :: Double
  , useMargin          :: Double
  , preMargin          :: Double
  , positionCost       :: Double
  , closeAmount        :: Double
  , openAmount         :: Double
  , closeVolume        :: Int
  , openVolume         :: Int
  , shortFrozenAmount  :: Double
  , longFrozenAmount   :: Double
  , shortFrozen        :: Int
  , longFrozen         :: Int
  , position           :: Int
  , ydPosition         :: Int
  , positionDate       :: Char
  , hedgeFlag          :: Char
  , posiDirection      :: Char
  , investorID         :: Text
  , brokerID           :: Text
  , instrumentID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorPositionField

{#pointer *CThostFtdcInvestorPositionField as CThostFtdcInvestorPositionFieldPtr -> CThostFtdcInvestorPositionField#}

data CThostFtdcTradingAccountField = CThostFtdcTradingAccountField
  { bizType                        :: Char
  , specProductExchangeMargin      :: Double
  , specProductPositionProfitByAlg :: Double
  , specProductCloseProfit         :: Double
  , specProductPositionProfit      :: Double
  , specProductFrozenCommission    :: Double
  , specProductCommission          :: Double
  , specProductFrozenMargin        :: Double
  , specProductMargin              :: Double
  , mortgageableFund               :: Double
  , fundMortgageAvailable          :: Double
  , fundMortgageOut                :: Double
  , fundMortgageIn                 :: Double
  , preFundMortgageOut             :: Double
  , preFundMortgageIn              :: Double
  , currencyID                     :: Text
  , reserveBalance                 :: Double
  , exchangeDeliveryMargin         :: Double
  , deliveryMargin                 :: Double
  , exchangeMargin                 :: Double
  , mortgage                       :: Double
  , credit                         :: Double
  , settlementID                   :: Int
  , tradingDay                     :: Text
  , reserve                        :: Double
  , withdrawQuota                  :: Double
  , available                      :: Double
  , balance                        :: Double
  , positionProfit                 :: Double
  , closeProfit                    :: Double
  , commission                     :: Double
  , cashIn                         :: Double
  , currMargin                     :: Double
  , frozenCommission               :: Double
  , frozenCash                     :: Double
  , frozenMargin                   :: Double
  , withdraw                       :: Double
  , deposit                        :: Double
  , interest                       :: Double
  , interestBase                   :: Double
  , preMargin                      :: Double
  , preBalance                     :: Double
  , preDeposit                     :: Double
  , preCredit                      :: Double
  , preMortgage                    :: Double
  , accountID                      :: Text
  , brokerID                       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingAccountField

{#pointer *CThostFtdcTradingAccountField as CThostFtdcTradingAccountFieldPtr -> CThostFtdcTradingAccountField#}

data CThostFtdcInstructionRightField = CThostFtdcInstructionRightField
  { isForbidden      :: Int
  , instructionRight :: Char
  , investorID       :: Text
  , exchangeID       :: Text
  , brokerID         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstructionRightField

{#pointer *CThostFtdcInstructionRightField as CThostFtdcInstructionRightFieldPtr -> CThostFtdcInstructionRightField#}

data CThostFtdcQryCFMMCTradingAccountKeyField = CThostFtdcQryCFMMCTradingAccountKeyField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryCFMMCTradingAccountKeyField

{#pointer *CThostFtdcQryCFMMCTradingAccountKeyField as CThostFtdcQryCFMMCTradingAccountKeyFieldPtr -> CThostFtdcQryCFMMCTradingAccountKeyField#}

data CThostFtdcExchangeSequenceField = CThostFtdcExchangeSequenceField
  { marketStatus :: Char
  , sequenceNo   :: Int
  , exchangeID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeSequenceField

{#pointer *CThostFtdcExchangeSequenceField as CThostFtdcExchangeSequenceFieldPtr -> CThostFtdcExchangeSequenceField#}

data CThostFtdcUserRightsAssignField = CThostFtdcUserRightsAssignField
  { dRIdentityID :: Int
  , userID       :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcUserRightsAssignField

{#pointer *CThostFtdcUserRightsAssignField as CThostFtdcUserRightsAssignFieldPtr -> CThostFtdcUserRightsAssignField#}

data CThostFtdcTransferBankField = CThostFtdcTransferBankField
  { isActive   :: Int
  , bankName   :: Text
  , bankBrchID :: Text
  , bankID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferBankField

{#pointer *CThostFtdcTransferBankField as CThostFtdcTransferBankFieldPtr -> CThostFtdcTransferBankField#}

data CThostFtdcMarketDataField = CThostFtdcMarketDataField
  { actionDay          :: Text
  , updateMillisec     :: Int
  , updateTime         :: Text
  , currDelta          :: Double
  , preDelta           :: Double
  , lowerLimitPrice    :: Double
  , upperLimitPrice    :: Double
  , settlementPrice    :: Double
  , closePrice         :: Double
  , openInterest       :: Double
  , turnover           :: Double
  , volume             :: Int
  , lowestPrice        :: Double
  , highestPrice       :: Double
  , openPrice          :: Double
  , preOpenInterest    :: Double
  , preClosePrice      :: Double
  , preSettlementPrice :: Double
  , lastPrice          :: Double
  , exchangeInstID     :: Text
  , exchangeID         :: Text
  , instrumentID       :: Text
  , tradingDay         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataField

{#pointer *CThostFtdcMarketDataField as CThostFtdcMarketDataFieldPtr -> CThostFtdcMarketDataField#}

data CThostFtdcQryCommRateModelField = CThostFtdcQryCommRateModelField
  { commModelID :: Text
  , brokerID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryCommRateModelField

{#pointer *CThostFtdcQryCommRateModelField as CThostFtdcQryCommRateModelFieldPtr -> CThostFtdcQryCommRateModelField#}

data CThostFtdcNotifyFutureSignOutField = CThostFtdcNotifyFutureSignOutField
  { errorMsg       :: Text
  , errorID        :: Int
  , tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , currencyID     :: Text
  , digest         :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcNotifyFutureSignOutField

{#pointer *CThostFtdcNotifyFutureSignOutField as CThostFtdcNotifyFutureSignOutFieldPtr -> CThostFtdcNotifyFutureSignOutField#}

data CThostFtdcNotifyFutureSignInField = CThostFtdcNotifyFutureSignInField
  { macKey         :: Text
  , pinKey         :: Text
  , errorMsg       :: Text
  , errorID        :: Int
  , tID            :: Int
  , requestID      :: Int
  , operNo         :: Text
  , brokerIDByBank :: Text
  , deviceID       :: Text
  , currencyID     :: Text
  , digest         :: Text
  , userID         :: Text
  , installID      :: Int
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcNotifyFutureSignInField

{#pointer *CThostFtdcNotifyFutureSignInField as CThostFtdcNotifyFutureSignInFieldPtr -> CThostFtdcNotifyFutureSignInField#}

newtype CThostFtdcQryExchangeField = CThostFtdcQryExchangeField
  { exchangeID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeField

{#pointer *CThostFtdcQryExchangeField as CThostFtdcQryExchangeFieldPtr -> CThostFtdcQryExchangeField#}

data CThostFtdcQryInvestorPositionField = CThostFtdcQryInvestorPositionField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryInvestorPositionField

{#pointer *CThostFtdcQryInvestorPositionField as CThostFtdcQryInvestorPositionFieldPtr -> CThostFtdcQryInvestorPositionField#}

data CThostFtdcCombinationLegField = CThostFtdcCombinationLegField
  { implyLevel       :: Int
  , legMultiple      :: Int
  , direction        :: Char
  , legInstrumentID  :: Text
  , legID            :: Int
  , combInstrumentID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCombinationLegField

{#pointer *CThostFtdcCombinationLegField as CThostFtdcCombinationLegFieldPtr -> CThostFtdcCombinationLegField#}

data CThostFtdcFrontStatusField = CThostFtdcFrontStatusField
  { isActive       :: Int
  , lastReportTime :: Text
  , lastReportDate :: Text
  , frontID        :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcFrontStatusField

{#pointer *CThostFtdcFrontStatusField as CThostFtdcFrontStatusFieldPtr -> CThostFtdcFrontStatusField#}

data CThostFtdcQryQuoteActionField = CThostFtdcQryQuoteActionField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryQuoteActionField

{#pointer *CThostFtdcQryQuoteActionField as CThostFtdcQryQuoteActionFieldPtr -> CThostFtdcQryQuoteActionField#}

data CThostFtdcNotifyQueryAccountField = CThostFtdcNotifyQueryAccountField
  { errorMsg         :: Text
  , errorID          :: Int
  , bankFetchAmount  :: Double
  , bankUseAmount    :: Double
  , tID              :: Int
  , requestID        :: Int
  , operNo           :: Text
  , secuPwdFlag      :: Char
  , bankPwdFlag      :: Char
  , bankSecuAcc      :: Text
  , brokerIDByBank   :: Text
  , bankSecuAccType  :: Char
  , deviceID         :: Text
  , bankAccType      :: Char
  , digest           :: Text
  , currencyID       :: Text
  , verifyCertNoFlag :: Char
  , userID           :: Text
  , installID        :: Int
  , futureSerial     :: Int
  , password         :: Text
  , accountID        :: Text
  , bankPassWord     :: Text
  , bankAccount      :: Text
  , custType         :: Char
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , customerName     :: Text
  , sessionID        :: Int
  , lastFragment     :: Char
  , plateSerial      :: Int
  , tradingDay       :: Text
  , bankSerial       :: Text
  , tradeTime        :: Text
  , tradeDate        :: Text
  , brokerBranchID   :: Text
  , brokerID         :: Text
  , bankBranchID     :: Text
  , bankID           :: Text
  , tradeCode        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcNotifyQueryAccountField

{#pointer *CThostFtdcNotifyQueryAccountField as CThostFtdcNotifyQueryAccountFieldPtr -> CThostFtdcNotifyQueryAccountField#}

data CThostFtdcCombInstrumentGuardField = CThostFtdcCombInstrumentGuardField
  { guarantRatio :: Double
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcCombInstrumentGuardField

{#pointer *CThostFtdcCombInstrumentGuardField as CThostFtdcCombInstrumentGuardFieldPtr -> CThostFtdcCombInstrumentGuardField#}

data CThostFtdcQuoteField = CThostFtdcQuoteField
  { macAddress        :: Text
  , iPAddress         :: Text
  , currencyID        :: Text
  , accountID         :: Text
  , investUnitID      :: Text
  , branchID          :: Text
  , forQuoteSysID     :: Text
  , bidOrderRef       :: Text
  , askOrderRef       :: Text
  , brokerQuoteSeq    :: Int
  , activeUserID      :: Text
  , statusMsg         :: Text
  , userProductInfo   :: Text
  , sessionID         :: Int
  , frontID           :: Int
  , bidOrderSysID     :: Text
  , askOrderSysID     :: Text
  , sequenceNo        :: Int
  , clearingPartID    :: Text
  , quoteStatus       :: Char
  , cancelTime        :: Text
  , insertTime        :: Text
  , insertDate        :: Text
  , quoteSysID        :: Text
  , settlementID      :: Int
  , tradingDay        :: Text
  , orderSubmitStatus :: Char
  , notifySequence    :: Int
  , installID         :: Int
  , traderID          :: Text
  , exchangeInstID    :: Text
  , clientID          :: Text
  , participantID     :: Text
  , exchangeID        :: Text
  , quoteLocalID      :: Text
  , bidHedgeFlag      :: Char
  , askHedgeFlag      :: Char
  , bidOffsetFlag     :: Char
  , askOffsetFlag     :: Char
  , businessUnit      :: Text
  , requestID         :: Int
  , bidVolume         :: Int
  , askVolume         :: Int
  , bidPrice          :: Double
  , askPrice          :: Double
  , userID            :: Text
  , quoteRef          :: Text
  , instrumentID      :: Text
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQuoteField

{#pointer *CThostFtdcQuoteField as CThostFtdcQuoteFieldPtr -> CThostFtdcQuoteField#}

data CThostFtdcRspTransferField = CThostFtdcRspTransferField
  { errorMsg          :: Text
  , errorID           :: Int
  , transferStatus    :: Char
  , tID               :: Int
  , requestID         :: Int
  , operNo            :: Text
  , secuPwdFlag       :: Char
  , bankPwdFlag       :: Char
  , bankSecuAcc       :: Text
  , brokerIDByBank    :: Text
  , bankSecuAccType   :: Char
  , deviceID          :: Text
  , bankAccType       :: Char
  , digest            :: Text
  , message           :: Text
  , brokerFee         :: Double
  , custFee           :: Double
  , feePayFlag        :: Char
  , futureFetchAmount :: Double
  , tradeAmount       :: Double
  , currencyID        :: Text
  , verifyCertNoFlag  :: Char
  , userID            :: Text
  , futureSerial      :: Int
  , installID         :: Int
  , password          :: Text
  , accountID         :: Text
  , bankPassWord      :: Text
  , bankAccount       :: Text
  , custType          :: Char
  , identifiedCardNo  :: Text
  , idCardType        :: Char
  , customerName      :: Text
  , sessionID         :: Int
  , lastFragment      :: Char
  , plateSerial       :: Int
  , tradingDay        :: Text
  , bankSerial        :: Text
  , tradeTime         :: Text
  , tradeDate         :: Text
  , brokerBranchID    :: Text
  , brokerID          :: Text
  , bankBranchID      :: Text
  , bankID            :: Text
  , tradeCode         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspTransferField

{#pointer *CThostFtdcRspTransferField as CThostFtdcRspTransferFieldPtr -> CThostFtdcRspTransferField#}

newtype CThostFtdcQrySuperUserFunctionField = CThostFtdcQrySuperUserFunctionField
  { userID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySuperUserFunctionField

{#pointer *CThostFtdcQrySuperUserFunctionField as CThostFtdcQrySuperUserFunctionFieldPtr -> CThostFtdcQrySuperUserFunctionField#}

data CThostFtdcDRTransferField = CThostFtdcDRTransferField
  { destBrokerID     :: Text
  , origBrokerID     :: Text
  , destDRIdentityID :: Int
  , origDRIdentityID :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcDRTransferField

{#pointer *CThostFtdcDRTransferField as CThostFtdcDRTransferFieldPtr -> CThostFtdcDRTransferField#}

data CThostFtdcInputBatchOrderActionField = CThostFtdcInputBatchOrderActionField
  { macAddress     :: Text
  , iPAddress      :: Text
  , investUnitID   :: Text
  , userID         :: Text
  , exchangeID     :: Text
  , sessionID      :: Int
  , frontID        :: Int
  , requestID      :: Int
  , orderActionRef :: Int
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputBatchOrderActionField

{#pointer *CThostFtdcInputBatchOrderActionField as CThostFtdcInputBatchOrderActionFieldPtr -> CThostFtdcInputBatchOrderActionField#}

data CThostFtdcBrokerLimitPosiParamField = CThostFtdcBrokerLimitPosiParamField
  { longVolume   :: Double
  , totalVolume  :: Double
  , exchangeID   :: Text
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerLimitPosiParamField

{#pointer *CThostFtdcBrokerLimitPosiParamField as CThostFtdcBrokerLimitPosiParamFieldPtr -> CThostFtdcBrokerLimitPosiParamField#}

data CThostFtdcQryLockPositionField = CThostFtdcQryLockPositionField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryLockPositionField

{#pointer *CThostFtdcQryLockPositionField as CThostFtdcQryLockPositionFieldPtr -> CThostFtdcQryLockPositionField#}

data CThostFtdcQryBrokerUserFunctionField = CThostFtdcQryBrokerUserFunctionField
  { userID   :: Text
  , brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerUserFunctionField

{#pointer *CThostFtdcQryBrokerUserFunctionField as CThostFtdcQryBrokerUserFunctionFieldPtr -> CThostFtdcQryBrokerUserFunctionField#}

data CThostFtdcQryExchangeMarginRateAdjustField = CThostFtdcQryExchangeMarginRateAdjustField
  { hedgeFlag    :: Char
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeMarginRateAdjustField

{#pointer *CThostFtdcQryExchangeMarginRateAdjustField as CThostFtdcQryExchangeMarginRateAdjustFieldPtr -> CThostFtdcQryExchangeMarginRateAdjustField#}

data CThostFtdcExchangeStockDisposalActionErrorField = CThostFtdcExchangeStockDisposalActionErrorField
  { brokerID             :: Text
  , errorMsg             :: Text
  , errorID              :: Int
  , actionLocalID        :: Text
  , stockDisposalLocalID :: Text
  , installID            :: Int
  , traderID             :: Text
  , stockDisposalSysID   :: Text
  , exchangeID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeStockDisposalActionErrorField

{#pointer *CThostFtdcExchangeStockDisposalActionErrorField as CThostFtdcExchangeStockDisposalActionErrorFieldPtr -> CThostFtdcExchangeStockDisposalActionErrorField#}

data CThostFtdcTransferHeaderField = CThostFtdcTransferHeaderField
  { requestID   :: Int
  , sessionID   :: Int
  , recordNum   :: Text
  , deviceID    :: Text
  , operNo      :: Text
  , bankBrchID  :: Text
  , bankID      :: Text
  , futureID    :: Text
  , tradeSerial :: Text
  , tradeTime   :: Text
  , tradeDate   :: Text
  , tradeCode   :: Text
  , version     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferHeaderField

{#pointer *CThostFtdcTransferHeaderField as CThostFtdcTransferHeaderFieldPtr -> CThostFtdcTransferHeaderField#}

data CThostFtdcSyncingInstrumentTradingRightField = CThostFtdcSyncingInstrumentTradingRightField
  { exchangeID    :: Text
  , tradingRight  :: Char
  , investorID    :: Text
  , brokerID      :: Text
  , investorRange :: Char
  , instrumentID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingInstrumentTradingRightField

{#pointer *CThostFtdcSyncingInstrumentTradingRightField as CThostFtdcSyncingInstrumentTradingRightFieldPtr -> CThostFtdcSyncingInstrumentTradingRightField#}

data CThostFtdcOrderField = CThostFtdcOrderField
  { macAddress           :: Text
  , iPAddress            :: Text
  , currencyID           :: Text
  , accountID            :: Text
  , investUnitID         :: Text
  , branchID             :: Text
  , isSwapOrder          :: Int
  , zCETotalTradedVolume :: Int
  , relativeOrderSysID   :: Text
  , brokerOrderSeq       :: Int
  , activeUserID         :: Text
  , userForceClose       :: Int
  , statusMsg            :: Text
  , userProductInfo      :: Text
  , sessionID            :: Int
  , frontID              :: Int
  , sequenceNo           :: Int
  , clearingPartID       :: Text
  , activeTraderID       :: Text
  , cancelTime           :: Text
  , updateTime           :: Text
  , suspendTime          :: Text
  , activeTime           :: Text
  , insertTime           :: Text
  , insertDate           :: Text
  , volumeTotal          :: Int
  , volumeTraded         :: Int
  , orderType            :: Char
  , orderStatus          :: Char
  , orderSource          :: Char
  , orderSysID           :: Text
  , settlementID         :: Int
  , tradingDay           :: Text
  , notifySequence       :: Int
  , orderSubmitStatus    :: Char
  , installID            :: Int
  , traderID             :: Text
  , exchangeInstID       :: Text
  , clientID             :: Text
  , participantID        :: Text
  , exchangeID           :: Text
  , orderLocalID         :: Text
  , requestID            :: Int
  , businessUnit         :: Text
  , isAutoSuspend        :: Int
  , forceCloseReason     :: Char
  , stopPrice            :: Double
  , contingentCondition  :: Char
  , minVolume            :: Int
  , volumeCondition      :: Char
  , gTDDate              :: Text
  , timeCondition        :: Char
  , volumeTotalOriginal  :: Int
  , limitPrice           :: Double
  , combHedgeFlag        :: Text
  , combOffsetFlag       :: Text
  , direction            :: Char
  , orderPriceType       :: Char
  , userID               :: Text
  , orderRef             :: Text
  , instrumentID         :: Text
  , investorID           :: Text
  , brokerID             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOrderField

{#pointer *CThostFtdcOrderField as CThostFtdcOrderFieldPtr -> CThostFtdcOrderField#}

data CThostFtdcTradeField = CThostFtdcTradeField
  { tradeSource    :: Char
  , brokerOrderSeq :: Int
  , settlementID   :: Int
  , tradingDay     :: Text
  , sequenceNo     :: Int
  , businessUnit   :: Text
  , clearingPartID :: Text
  , orderLocalID   :: Text
  , traderID       :: Text
  , priceSource    :: Char
  , tradeType      :: Char
  , tradeTime      :: Text
  , tradeDate      :: Text
  , volume         :: Int
  , price          :: Double
  , hedgeFlag      :: Char
  , offsetFlag     :: Char
  , exchangeInstID :: Text
  , tradingRole    :: Char
  , clientID       :: Text
  , participantID  :: Text
  , orderSysID     :: Text
  , direction      :: Char
  , tradeID        :: Text
  , exchangeID     :: Text
  , userID         :: Text
  , orderRef       :: Text
  , instrumentID   :: Text
  , investorID     :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradeField

{#pointer *CThostFtdcTradeField as CThostFtdcTradeFieldPtr -> CThostFtdcTradeField#}

data CThostFtdcInputOrderField = CThostFtdcInputOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , clientID            :: Text
  , currencyID          :: Text
  , accountID           :: Text
  , investUnitID        :: Text
  , exchangeID          :: Text
  , isSwapOrder         :: Int
  , userForceClose      :: Int
  , requestID           :: Int
  , businessUnit        :: Text
  , isAutoSuspend       :: Int
  , forceCloseReason    :: Char
  , stopPrice           :: Double
  , contingentCondition :: Char
  , minVolume           :: Int
  , volumeCondition     :: Char
  , gTDDate             :: Text
  , timeCondition       :: Char
  , volumeTotalOriginal :: Int
  , limitPrice          :: Double
  , combHedgeFlag       :: Text
  , combOffsetFlag      :: Text
  , direction           :: Char
  , orderPriceType      :: Char
  , userID              :: Text
  , orderRef            :: Text
  , instrumentID        :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputOrderField

{#pointer *CThostFtdcInputOrderField as CThostFtdcInputOrderFieldPtr -> CThostFtdcInputOrderField#}

data CThostFtdcReqUserLoginField = CThostFtdcReqUserLoginField
  { loginRemark          :: Text
  , clientIPAddress      :: Text
  , oneTimePassword      :: Text
  , macAddress           :: Text
  , protocolInfo         :: Text
  , interfaceProductInfo :: Text
  , userProductInfo      :: Text
  , password             :: Text
  , userID               :: Text
  , brokerID             :: Text
  , tradingDay           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqUserLoginField

{#pointer *CThostFtdcReqUserLoginField as CThostFtdcReqUserLoginFieldPtr -> CThostFtdcReqUserLoginField#}

data CThostFtdcBrokerUserPasswordField = CThostFtdcBrokerUserPasswordField
  { password :: Text
  , userID   :: Text
  , brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerUserPasswordField

{#pointer *CThostFtdcBrokerUserPasswordField as CThostFtdcBrokerUserPasswordFieldPtr -> CThostFtdcBrokerUserPasswordField#}

newtype CThostFtdcSpecificInstrumentField = CThostFtdcSpecificInstrumentField
  { instrumentID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSpecificInstrumentField

{#pointer *CThostFtdcSpecificInstrumentField as CThostFtdcSpecificInstrumentFieldPtr -> CThostFtdcSpecificInstrumentField#}

data CThostFtdcContractBankField = CThostFtdcContractBankField
  { bankName   :: Text
  , bankBrchID :: Text
  , bankID     :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcContractBankField

{#pointer *CThostFtdcContractBankField as CThostFtdcContractBankFieldPtr -> CThostFtdcContractBankField#}

data CThostFtdcSettlementInfoField = CThostFtdcSettlementInfoField
  { content      :: Text
  , sequenceNo   :: Int
  , investorID   :: Text
  , brokerID     :: Text
  , settlementID :: Int
  , tradingDay   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSettlementInfoField

{#pointer *CThostFtdcSettlementInfoField as CThostFtdcSettlementInfoFieldPtr -> CThostFtdcSettlementInfoField#}

data CThostFtdcOptionInstrCommRateField = CThostFtdcOptionInstrCommRateField
  { exchangeID              :: Text
  , strikeRatioByVolume     :: Double
  , strikeRatioByMoney      :: Double
  , closeTodayRatioByVolume :: Double
  , closeTodayRatioByMoney  :: Double
  , closeRatioByVolume      :: Double
  , closeRatioByMoney       :: Double
  , openRatioByVolume       :: Double
  , openRatioByMoney        :: Double
  , investorID              :: Text
  , brokerID                :: Text
  , investorRange           :: Char
  , instrumentID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrCommRateField

{#pointer *CThostFtdcOptionInstrCommRateField as CThostFtdcOptionInstrCommRateFieldPtr -> CThostFtdcOptionInstrCommRateField#}

data CThostFtdcMarginModelField = CThostFtdcMarginModelField
  { marginModelName :: Text
  , marginModelID   :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcMarginModelField

{#pointer *CThostFtdcMarginModelField as CThostFtdcMarginModelFieldPtr -> CThostFtdcMarginModelField#}

data CThostFtdcInvestorAccountField = CThostFtdcInvestorAccountField
  { bizType    :: Char
  , currencyID :: Text
  , accountID  :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInvestorAccountField

{#pointer *CThostFtdcInvestorAccountField as CThostFtdcInvestorAccountFieldPtr -> CThostFtdcInvestorAccountField#}

data CThostFtdcQryContractBankField = CThostFtdcQryContractBankField
  { bankBrchID :: Text
  , bankID     :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryContractBankField

{#pointer *CThostFtdcQryContractBankField as CThostFtdcQryContractBankFieldPtr -> CThostFtdcQryContractBankField#}

data CThostFtdcTransferQryBankReqField = CThostFtdcTransferQryBankReqField
  { currencyCode  :: Text
  , futureAccPwd  :: Text
  , futurePwdFlag :: Char
  , futureAccount :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferQryBankReqField

{#pointer *CThostFtdcTransferQryBankReqField as CThostFtdcTransferQryBankReqFieldPtr -> CThostFtdcTransferQryBankReqField#}

data CThostFtdcReqQueryTradeResultBySerialField = CThostFtdcReqQueryTradeResultBySerialField
  { digest             :: Text
  , tradeAmount        :: Double
  , currencyID         :: Text
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , custType           :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , refrenceIssure     :: Text
  , refrenceIssureType :: Char
  , reference          :: Int
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqQueryTradeResultBySerialField

{#pointer *CThostFtdcReqQueryTradeResultBySerialField as CThostFtdcReqQueryTradeResultBySerialFieldPtr -> CThostFtdcReqQueryTradeResultBySerialField#}

data CThostFtdcQryExchangeRateField = CThostFtdcQryExchangeRateField
  { toCurrencyID   :: Text
  , fromCurrencyID :: Text
  , brokerID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeRateField

{#pointer *CThostFtdcQryExchangeRateField as CThostFtdcQryExchangeRateFieldPtr -> CThostFtdcQryExchangeRateField#}

data CThostFtdcSyncingInvestorPositionField = CThostFtdcSyncingInvestorPositionField
  { ydStrikeFrozen     :: Int
  , exchangeID         :: Text
  , abandonFrozen      :: Int
  , strikeFrozenAmount :: Double
  , strikeFrozen       :: Int
  , marginRateByVolume :: Double
  , marginRateByMoney  :: Double
  , todayPosition      :: Int
  , closeProfitByTrade :: Double
  , closeProfitByDate  :: Double
  , combShortFrozen    :: Int
  , combLongFrozen     :: Int
  , combPosition       :: Int
  , exchangeMargin     :: Double
  , openCost           :: Double
  , settlementID       :: Int
  , tradingDay         :: Text
  , settlementPrice    :: Double
  , preSettlementPrice :: Double
  , positionProfit     :: Double
  , closeProfit        :: Double
  , commission         :: Double
  , cashIn             :: Double
  , frozenCommission   :: Double
  , frozenCash         :: Double
  , frozenMargin       :: Double
  , useMargin          :: Double
  , preMargin          :: Double
  , positionCost       :: Double
  , closeAmount        :: Double
  , openAmount         :: Double
  , closeVolume        :: Int
  , openVolume         :: Int
  , shortFrozenAmount  :: Double
  , longFrozenAmount   :: Double
  , shortFrozen        :: Int
  , longFrozen         :: Int
  , position           :: Int
  , ydPosition         :: Int
  , positionDate       :: Char
  , hedgeFlag          :: Char
  , posiDirection      :: Char
  , investorID         :: Text
  , brokerID           :: Text
  , instrumentID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcSyncingInvestorPositionField

{#pointer *CThostFtdcSyncingInvestorPositionField as CThostFtdcSyncingInvestorPositionFieldPtr -> CThostFtdcSyncingInvestorPositionField#}

data CThostFtdcTransferSerialField = CThostFtdcTransferSerialField
  { errorMsg         :: Text
  , errorID          :: Int
  , bankNewAccount   :: Text
  , operatorCode     :: Text
  , availabilityFlag :: Char
  , brokerFee        :: Double
  , custFee          :: Double
  , tradeAmount      :: Double
  , currencyID       :: Text
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , futureSerial     :: Int
  , investorID       :: Text
  , accountID        :: Text
  , futureAccType    :: Char
  , brokerBranchID   :: Text
  , brokerID         :: Text
  , bankSerial       :: Text
  , bankAccount      :: Text
  , bankAccType      :: Char
  , bankBranchID     :: Text
  , bankID           :: Text
  , sessionID        :: Int
  , tradeCode        :: Text
  , tradeTime        :: Text
  , tradingDay       :: Text
  , tradeDate        :: Text
  , plateSerial      :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcTransferSerialField

{#pointer *CThostFtdcTransferSerialField as CThostFtdcTransferSerialFieldPtr -> CThostFtdcTransferSerialField#}

data CThostFtdcQryExchangeQuoteField = CThostFtdcQryExchangeQuoteField
  { traderID       :: Text
  , exchangeID     :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeQuoteField

{#pointer *CThostFtdcQryExchangeQuoteField as CThostFtdcQryExchangeQuoteFieldPtr -> CThostFtdcQryExchangeQuoteField#}

data CThostFtdcTransferQryBankRspField = CThostFtdcTransferQryBankRspField
  { currencyCode  :: Text
  , fetchAmt      :: Double
  , useAmt        :: Double
  , tradeAmt      :: Double
  , futureAccount :: Text
  , retInfo       :: Text
  , retCode       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTransferQryBankRspField

{#pointer *CThostFtdcTransferQryBankRspField as CThostFtdcTransferQryBankRspFieldPtr -> CThostFtdcTransferQryBankRspField#}

data CThostFtdcBrokerUserFunctionField = CThostFtdcBrokerUserFunctionField
  { brokerFunctionCode :: Char
  , userID             :: Text
  , brokerID           :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcBrokerUserFunctionField

{#pointer *CThostFtdcBrokerUserFunctionField as CThostFtdcBrokerUserFunctionFieldPtr -> CThostFtdcBrokerUserFunctionField#}

data CThostFtdcMarketDataStaticField = CThostFtdcMarketDataStaticField
  { currDelta       :: Double
  , settlementPrice :: Double
  , lowerLimitPrice :: Double
  , upperLimitPrice :: Double
  , closePrice      :: Double
  , lowestPrice     :: Double
  , highestPrice    :: Double
  , openPrice       :: Double
  } deriving (Generic, Show)

instance Default CThostFtdcMarketDataStaticField

{#pointer *CThostFtdcMarketDataStaticField as CThostFtdcMarketDataStaticFieldPtr -> CThostFtdcMarketDataStaticField#}

data CThostFtdcExecOrderField = CThostFtdcExecOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , currencyID          :: Text
  , accountID           :: Text
  , investUnitID        :: Text
  , branchID            :: Text
  , brokerExecOrderSeq  :: Int
  , activeUserID        :: Text
  , statusMsg           :: Text
  , userProductInfo     :: Text
  , sessionID           :: Int
  , frontID             :: Int
  , sequenceNo          :: Int
  , clearingPartID      :: Text
  , execResult          :: Char
  , cancelTime          :: Text
  , insertTime          :: Text
  , insertDate          :: Text
  , execOrderSysID      :: Text
  , settlementID        :: Int
  , tradingDay          :: Text
  , notifySequence      :: Int
  , orderSubmitStatus   :: Char
  , installID           :: Int
  , traderID            :: Text
  , exchangeInstID      :: Text
  , clientID            :: Text
  , participantID       :: Text
  , exchangeID          :: Text
  , execOrderLocalID    :: Text
  , closeFlag           :: Char
  , reservePositionFlag :: Char
  , posiDirection       :: Char
  , actionType          :: Char
  , hedgeFlag           :: Char
  , offsetFlag          :: Char
  , businessUnit        :: Text
  , requestID           :: Int
  , volume              :: Int
  , userID              :: Text
  , execOrderRef        :: Text
  , instrumentID        :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcExecOrderField

{#pointer *CThostFtdcExecOrderField as CThostFtdcExecOrderFieldPtr -> CThostFtdcExecOrderField#}

data CThostFtdcQryOrderActionField = CThostFtdcQryOrderActionField
  { exchangeID :: Text
  , investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryOrderActionField

{#pointer *CThostFtdcQryOrderActionField as CThostFtdcQryOrderActionFieldPtr -> CThostFtdcQryOrderActionField#}

data CThostFtdcErrOrderActionField = CThostFtdcErrOrderActionField
  { errorMsg          :: Text
  , errorID           :: Int
  , macAddress        :: Text
  , iPAddress         :: Text
  , investUnitID      :: Text
  , branchID          :: Text
  , instrumentID      :: Text
  , statusMsg         :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , orderLocalID      :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , volumeChange      :: Int
  , limitPrice        :: Double
  , actionFlag        :: Char
  , orderSysID        :: Text
  , exchangeID        :: Text
  , sessionID         :: Int
  , frontID           :: Int
  , requestID         :: Int
  , orderRef          :: Text
  , orderActionRef    :: Int
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcErrOrderActionField

{#pointer *CThostFtdcErrOrderActionField as CThostFtdcErrOrderActionFieldPtr -> CThostFtdcErrOrderActionField#}

data CThostFtdcExchangeCombActionField = CThostFtdcExchangeCombActionField
  { branchID       :: Text
  , comTradeID     :: Text
  , macAddress     :: Text
  , iPAddress      :: Text
  , sequenceNo     :: Int
  , settlementID   :: Int
  , tradingDay     :: Text
  , notifySequence :: Int
  , actionStatus   :: Char
  , installID      :: Int
  , traderID       :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  , exchangeID     :: Text
  , actionLocalID  :: Text
  , hedgeFlag      :: Char
  , combDirection  :: Char
  , volume         :: Int
  , direction      :: Char
  } deriving (Generic, Show)

instance Default CThostFtdcExchangeCombActionField

{#pointer *CThostFtdcExchangeCombActionField as CThostFtdcExchangeCombActionFieldPtr -> CThostFtdcExchangeCombActionField#}

data CThostFtdcProductExchRateField = CThostFtdcProductExchRateField
  { exchangeRate    :: Double
  , quoteCurrencyID :: Text
  , productID       :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcProductExchRateField

{#pointer *CThostFtdcProductExchRateField as CThostFtdcProductExchRateFieldPtr -> CThostFtdcProductExchRateField#}

data CThostFtdcQryErrExecOrderField = CThostFtdcQryErrExecOrderField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryErrExecOrderField

{#pointer *CThostFtdcQryErrExecOrderField as CThostFtdcQryErrExecOrderFieldPtr -> CThostFtdcQryErrExecOrderField#}

data CThostFtdcQryParkedOrderField = CThostFtdcQryParkedOrderField
  { exchangeID   :: Text
  , instrumentID :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryParkedOrderField

{#pointer *CThostFtdcQryParkedOrderField as CThostFtdcQryParkedOrderFieldPtr -> CThostFtdcQryParkedOrderField#}

data CThostFtdcQryAccountregisterField = CThostFtdcQryAccountregisterField
  { currencyID   :: Text
  , bankBranchID :: Text
  , bankID       :: Text
  , accountID    :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryAccountregisterField

{#pointer *CThostFtdcQryAccountregisterField as CThostFtdcQryAccountregisterFieldPtr -> CThostFtdcQryAccountregisterField#}

data CThostFtdcInputQuoteField = CThostFtdcInputQuoteField
  { macAddress    :: Text
  , iPAddress     :: Text
  , clientID      :: Text
  , investUnitID  :: Text
  , exchangeID    :: Text
  , forQuoteSysID :: Text
  , bidOrderRef   :: Text
  , askOrderRef   :: Text
  , bidHedgeFlag  :: Char
  , askHedgeFlag  :: Char
  , bidOffsetFlag :: Char
  , askOffsetFlag :: Char
  , businessUnit  :: Text
  , requestID     :: Int
  , bidVolume     :: Int
  , askVolume     :: Int
  , bidPrice      :: Double
  , askPrice      :: Double
  , userID        :: Text
  , quoteRef      :: Text
  , instrumentID  :: Text
  , investorID    :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInputQuoteField

{#pointer *CThostFtdcInputQuoteField as CThostFtdcInputQuoteFieldPtr -> CThostFtdcInputQuoteField#}

data CThostFtdcTradingAccountPasswordUpdateV1Field = CThostFtdcTradingAccountPasswordUpdateV1Field
  { newPassword :: Text
  , oldPassword :: Text
  , investorID  :: Text
  , brokerID    :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcTradingAccountPasswordUpdateV1Field

{#pointer *CThostFtdcTradingAccountPasswordUpdateV1Field as CThostFtdcTradingAccountPasswordUpdateV1FieldPtr -> CThostFtdcTradingAccountPasswordUpdateV1Field#}

data CThostFtdcReqTransferField = CThostFtdcReqTransferField
  { transferStatus    :: Char
  , tID               :: Int
  , requestID         :: Int
  , operNo            :: Text
  , secuPwdFlag       :: Char
  , bankPwdFlag       :: Char
  , bankSecuAcc       :: Text
  , brokerIDByBank    :: Text
  , bankSecuAccType   :: Char
  , deviceID          :: Text
  , bankAccType       :: Char
  , digest            :: Text
  , message           :: Text
  , brokerFee         :: Double
  , custFee           :: Double
  , feePayFlag        :: Char
  , futureFetchAmount :: Double
  , tradeAmount       :: Double
  , currencyID        :: Text
  , verifyCertNoFlag  :: Char
  , userID            :: Text
  , futureSerial      :: Int
  , installID         :: Int
  , password          :: Text
  , accountID         :: Text
  , bankPassWord      :: Text
  , bankAccount       :: Text
  , custType          :: Char
  , identifiedCardNo  :: Text
  , idCardType        :: Char
  , customerName      :: Text
  , sessionID         :: Int
  , lastFragment      :: Char
  , plateSerial       :: Int
  , tradingDay        :: Text
  , bankSerial        :: Text
  , tradeTime         :: Text
  , tradeDate         :: Text
  , brokerBranchID    :: Text
  , brokerID          :: Text
  , bankBranchID      :: Text
  , bankID            :: Text
  , tradeCode         :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqTransferField

{#pointer *CThostFtdcReqTransferField as CThostFtdcReqTransferFieldPtr -> CThostFtdcReqTransferField#}

newtype CThostFtdcQryNoticeField = CThostFtdcQryNoticeField
  { brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryNoticeField

{#pointer *CThostFtdcQryNoticeField as CThostFtdcQryNoticeFieldPtr -> CThostFtdcQryNoticeField#}

newtype CThostFtdcQryProductExchRateField = CThostFtdcQryProductExchRateField
  { productID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryProductExchRateField

{#pointer *CThostFtdcQryProductExchRateField as CThostFtdcQryProductExchRateFieldPtr -> CThostFtdcQryProductExchRateField#}

data CThostFtdcIndexPriceField = CThostFtdcIndexPriceField
  { exchangeID   :: Text
  , closePrice   :: Double
  , instrumentID :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcIndexPriceField

{#pointer *CThostFtdcIndexPriceField as CThostFtdcIndexPriceFieldPtr -> CThostFtdcIndexPriceField#}

data CThostFtdcParkedOrderField = CThostFtdcParkedOrderField
  { macAddress          :: Text
  , iPAddress           :: Text
  , investUnitID        :: Text
  , clientID            :: Text
  , currencyID          :: Text
  , accountID           :: Text
  , isSwapOrder         :: Int
  , errorMsg            :: Text
  , errorID             :: Int
  , status              :: Char
  , userType            :: Char
  , parkedOrderID       :: Text
  , exchangeID          :: Text
  , userForceClose      :: Int
  , requestID           :: Int
  , businessUnit        :: Text
  , isAutoSuspend       :: Int
  , forceCloseReason    :: Char
  , stopPrice           :: Double
  , contingentCondition :: Char
  , minVolume           :: Int
  , volumeCondition     :: Char
  , gTDDate             :: Text
  , timeCondition       :: Char
  , volumeTotalOriginal :: Int
  , limitPrice          :: Double
  , combHedgeFlag       :: Text
  , combOffsetFlag      :: Text
  , direction           :: Char
  , orderPriceType      :: Char
  , userID              :: Text
  , orderRef            :: Text
  , instrumentID        :: Text
  , investorID          :: Text
  , brokerID            :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcParkedOrderField

{#pointer *CThostFtdcParkedOrderField as CThostFtdcParkedOrderFieldPtr -> CThostFtdcParkedOrderField#}

data CThostFtdcRspQueryAccountField = CThostFtdcRspQueryAccountField
  { bankFetchAmount  :: Double
  , bankUseAmount    :: Double
  , tID              :: Int
  , requestID        :: Int
  , operNo           :: Text
  , secuPwdFlag      :: Char
  , bankPwdFlag      :: Char
  , bankSecuAcc      :: Text
  , brokerIDByBank   :: Text
  , bankSecuAccType  :: Char
  , deviceID         :: Text
  , bankAccType      :: Char
  , digest           :: Text
  , currencyID       :: Text
  , verifyCertNoFlag :: Char
  , userID           :: Text
  , installID        :: Int
  , futureSerial     :: Int
  , password         :: Text
  , accountID        :: Text
  , bankPassWord     :: Text
  , bankAccount      :: Text
  , custType         :: Char
  , identifiedCardNo :: Text
  , idCardType       :: Char
  , customerName     :: Text
  , sessionID        :: Int
  , lastFragment     :: Char
  , plateSerial      :: Int
  , tradingDay       :: Text
  , bankSerial       :: Text
  , tradeTime        :: Text
  , tradeDate        :: Text
  , brokerBranchID   :: Text
  , brokerID         :: Text
  , bankBranchID     :: Text
  , bankID           :: Text
  , tradeCode        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcRspQueryAccountField

{#pointer *CThostFtdcRspQueryAccountField as CThostFtdcRspQueryAccountFieldPtr -> CThostFtdcRspQueryAccountField#}

data CThostFtdcAuthenticationInfoField = CThostFtdcAuthenticationInfoField
  { isResult        :: Int
  , authInfo        :: Text
  , userProductInfo :: Text
  , userID          :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcAuthenticationInfoField

{#pointer *CThostFtdcAuthenticationInfoField as CThostFtdcAuthenticationInfoFieldPtr -> CThostFtdcAuthenticationInfoField#}

data CThostFtdcVerifyFuturePasswordField = CThostFtdcVerifyFuturePasswordField
  { currencyID     :: Text
  , tID            :: Int
  , installID      :: Int
  , bankPassWord   :: Text
  , bankAccount    :: Text
  , password       :: Text
  , accountID      :: Text
  , sessionID      :: Int
  , lastFragment   :: Char
  , plateSerial    :: Int
  , tradingDay     :: Text
  , bankSerial     :: Text
  , tradeTime      :: Text
  , tradeDate      :: Text
  , brokerBranchID :: Text
  , brokerID       :: Text
  , bankBranchID   :: Text
  , bankID         :: Text
  , tradeCode      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcVerifyFuturePasswordField

{#pointer *CThostFtdcVerifyFuturePasswordField as CThostFtdcVerifyFuturePasswordFieldPtr -> CThostFtdcVerifyFuturePasswordField#}

data CThostFtdcQrySyncFundMortgageField = CThostFtdcQrySyncFundMortgageField
  { mortgageSeqNo :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQrySyncFundMortgageField

{#pointer *CThostFtdcQrySyncFundMortgageField as CThostFtdcQrySyncFundMortgageFieldPtr -> CThostFtdcQrySyncFundMortgageField#}

data CThostFtdcReqOpenAccountField = CThostFtdcReqOpenAccountField
  { userID             :: Text
  , tID                :: Int
  , operNo             :: Text
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , bankSecuAcc        :: Text
  , brokerIDByBank     :: Text
  , bankSecuAccType    :: Char
  , deviceID           :: Text
  , bankAccType        :: Char
  , digest             :: Text
  , cashExchangeCode   :: Char
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , installID          :: Int
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , moneyAccountStatus :: Char
  , eMail              :: Text
  , fax                :: Text
  , mobilePhone        :: Text
  , telephone          :: Text
  , zipCode            :: Text
  , address            :: Text
  , custType           :: Char
  , countryCode        :: Text
  , gender             :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcReqOpenAccountField

{#pointer *CThostFtdcReqOpenAccountField as CThostFtdcReqOpenAccountFieldPtr -> CThostFtdcReqOpenAccountField#}

data CThostFtdcQryTradingNoticeField = CThostFtdcQryTradingNoticeField
  { investorID :: Text
  , brokerID   :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTradingNoticeField

{#pointer *CThostFtdcQryTradingNoticeField as CThostFtdcQryTradingNoticeFieldPtr -> CThostFtdcQryTradingNoticeField#}

data CThostFtdcLogoutAllField = CThostFtdcLogoutAllField
  { systemName :: Text
  , sessionID  :: Int
  , frontID    :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcLogoutAllField

{#pointer *CThostFtdcLogoutAllField as CThostFtdcLogoutAllFieldPtr -> CThostFtdcLogoutAllField#}

data CThostFtdcOptionInstrTradeCostField = CThostFtdcOptionInstrTradeCostField
  { exchangeID      :: Text
  , exchMiniMargin  :: Double
  , exchFixedMargin :: Double
  , royalty         :: Double
  , miniMargin      :: Double
  , fixedMargin     :: Double
  , hedgeFlag       :: Char
  , instrumentID    :: Text
  , investorID      :: Text
  , brokerID        :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcOptionInstrTradeCostField

{#pointer *CThostFtdcOptionInstrTradeCostField as CThostFtdcOptionInstrTradeCostFieldPtr -> CThostFtdcOptionInstrTradeCostField#}

data CThostFtdcRspRepealField = CThostFtdcRspRepealField
  { errorMsg           :: Text
  , errorID            :: Int
  , transferStatus     :: Char
  , tID                :: Int
  , requestID          :: Int
  , operNo             :: Text
  , secuPwdFlag        :: Char
  , bankPwdFlag        :: Char
  , bankSecuAcc        :: Text
  , brokerIDByBank     :: Text
  , bankSecuAccType    :: Char
  , deviceID           :: Text
  , bankAccType        :: Char
  , digest             :: Text
  , message            :: Text
  , brokerFee          :: Double
  , custFee            :: Double
  , feePayFlag         :: Char
  , futureFetchAmount  :: Double
  , tradeAmount        :: Double
  , currencyID         :: Text
  , verifyCertNoFlag   :: Char
  , userID             :: Text
  , futureSerial       :: Int
  , installID          :: Int
  , password           :: Text
  , accountID          :: Text
  , bankPassWord       :: Text
  , bankAccount        :: Text
  , custType           :: Char
  , identifiedCardNo   :: Text
  , idCardType         :: Char
  , customerName       :: Text
  , sessionID          :: Int
  , lastFragment       :: Char
  , plateSerial        :: Int
  , tradingDay         :: Text
  , bankSerial         :: Text
  , tradeTime          :: Text
  , tradeDate          :: Text
  , brokerBranchID     :: Text
  , brokerID           :: Text
  , bankBranchID       :: Text
  , bankID             :: Text
  , tradeCode          :: Text
  , futureRepealSerial :: Int
  , bankRepealSerial   :: Text
  , plateRepealSerial  :: Int
  , brokerRepealFlag   :: Char
  , bankRepealFlag     :: Char
  , repealedTimes      :: Int
  , repealTimeInterval :: Int
  } deriving (Generic, Show)

instance Default CThostFtdcRspRepealField

{#pointer *CThostFtdcRspRepealField as CThostFtdcRspRepealFieldPtr -> CThostFtdcRspRepealField#}

data CThostFtdcQryTradingCodeField = CThostFtdcQryTradingCodeField
  { clientIDType :: Char
  , clientID     :: Text
  , exchangeID   :: Text
  , investorID   :: Text
  , brokerID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTradingCodeField

{#pointer *CThostFtdcQryTradingCodeField as CThostFtdcQryTradingCodeFieldPtr -> CThostFtdcQryTradingCodeField#}

data CThostFtdcQryTransferBankField = CThostFtdcQryTransferBankField
  { bankBrchID :: Text
  , bankID     :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryTransferBankField

{#pointer *CThostFtdcQryTransferBankField as CThostFtdcQryTransferBankFieldPtr -> CThostFtdcQryTransferBankField#}

newtype CThostFtdcQryBrokerField = CThostFtdcQryBrokerField
  { brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryBrokerField

{#pointer *CThostFtdcQryBrokerField as CThostFtdcQryBrokerFieldPtr -> CThostFtdcQryBrokerField#}

data CThostFtdcQryExchangeOrderField = CThostFtdcQryExchangeOrderField
  { traderID       :: Text
  , exchangeID     :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeOrderField

{#pointer *CThostFtdcQryExchangeOrderField as CThostFtdcQryExchangeOrderFieldPtr -> CThostFtdcQryExchangeOrderField#}

data CThostFtdcInstrumentMarginRateField = CThostFtdcInstrumentMarginRateField
  { isRelative               :: Int
  , shortMarginRatioByVolume :: Double
  , shortMarginRatioByMoney  :: Double
  , longMarginRatioByVolume  :: Double
  , longMarginRatioByMoney   :: Double
  , hedgeFlag                :: Char
  , investorID               :: Text
  , brokerID                 :: Text
  , investorRange            :: Char
  , instrumentID             :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcInstrumentMarginRateField

{#pointer *CThostFtdcInstrumentMarginRateField as CThostFtdcInstrumentMarginRateFieldPtr -> CThostFtdcInstrumentMarginRateField#}

data CThostFtdcQuoteActionField = CThostFtdcQuoteActionField
  { macAddress        :: Text
  , iPAddress         :: Text
  , investUnitID      :: Text
  , branchID          :: Text
  , instrumentID      :: Text
  , statusMsg         :: Text
  , userID            :: Text
  , orderActionStatus :: Char
  , businessUnit      :: Text
  , clientID          :: Text
  , participantID     :: Text
  , actionLocalID     :: Text
  , quoteLocalID      :: Text
  , installID         :: Int
  , traderID          :: Text
  , actionTime        :: Text
  , actionDate        :: Text
  , actionFlag        :: Char
  , quoteSysID        :: Text
  , exchangeID        :: Text
  , sessionID         :: Int
  , frontID           :: Int
  , requestID         :: Int
  , quoteRef          :: Text
  , quoteActionRef    :: Int
  , investorID        :: Text
  , brokerID          :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQuoteActionField

{#pointer *CThostFtdcQuoteActionField as CThostFtdcQuoteActionFieldPtr -> CThostFtdcQuoteActionField#}

data CThostFtdcQryMarginModelField = CThostFtdcQryMarginModelField
  { marginModelID :: Text
  , brokerID      :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryMarginModelField

{#pointer *CThostFtdcQryMarginModelField as CThostFtdcQryMarginModelFieldPtr -> CThostFtdcQryMarginModelField#}

newtype CThostFtdcLoadSettlementInfoField = CThostFtdcLoadSettlementInfoField
  { brokerID :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcLoadSettlementInfoField

{#pointer *CThostFtdcLoadSettlementInfoField as CThostFtdcLoadSettlementInfoFieldPtr -> CThostFtdcLoadSettlementInfoField#}

data CThostFtdcQryExchangeForQuoteField = CThostFtdcQryExchangeForQuoteField
  { traderID       :: Text
  , exchangeID     :: Text
  , exchangeInstID :: Text
  , clientID       :: Text
  , participantID  :: Text
  } deriving (Generic, Show)

instance Default CThostFtdcQryExchangeForQuoteField

{#pointer *CThostFtdcQryExchangeForQuoteField as CThostFtdcQryExchangeForQuoteFieldPtr -> CThostFtdcQryExchangeForQuoteField#}

instance Storable CThostFtdcMarketDataBaseField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataBaseField#}
  alignment _ = {#alignof CThostFtdcMarketDataBaseField#}
  peek p =
    CThostFtdcMarketDataBaseField <$>
    fmap realToFrac ({#get CThostFtdcMarketDataBaseField->PreDelta#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBaseField->PreOpenInterest#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBaseField->PreClosePrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBaseField->PreSettlementPrice#} p) <*>
    (({#get CThostFtdcMarketDataBaseField->TradingDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcMarketDataBaseField->PreDelta#} p (realToFrac $ preDelta (s :: CThostFtdcMarketDataBaseField))
    {#set CThostFtdcMarketDataBaseField->PreOpenInterest#} p (realToFrac $ preOpenInterest (s :: CThostFtdcMarketDataBaseField))
    {#set CThostFtdcMarketDataBaseField->PreClosePrice#} p (realToFrac $ preClosePrice (s :: CThostFtdcMarketDataBaseField))
    {#set CThostFtdcMarketDataBaseField->PreSettlementPrice#} p (realToFrac $ preSettlementPrice (s :: CThostFtdcMarketDataBaseField))
    withText (tradingDay (s :: CThostFtdcMarketDataBaseField)) ({#set CThostFtdcMarketDataBaseField->TradingDay#} p)

instance Storable CThostFtdcExchangeMarginRateField where
  sizeOf _ = {#sizeof CThostFtdcExchangeMarginRateField#}
  alignment _ = {#alignof CThostFtdcExchangeMarginRateField#}
  peek p =
    CThostFtdcExchangeMarginRateField <$>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateField->ShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateField->ShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateField->LongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateField->LongMarginRatioByMoney#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeMarginRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcExchangeMarginRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeMarginRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExchangeMarginRateField->ShortMarginRatioByVolume#} p (realToFrac $ shortMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateField))
    {#set CThostFtdcExchangeMarginRateField->ShortMarginRatioByMoney#} p (realToFrac $ shortMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateField))
    {#set CThostFtdcExchangeMarginRateField->LongMarginRatioByVolume#} p (realToFrac $ longMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateField))
    {#set CThostFtdcExchangeMarginRateField->LongMarginRatioByMoney#} p (realToFrac $ longMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateField))
    {#set CThostFtdcExchangeMarginRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcExchangeMarginRateField))
    withText (instrumentID (s :: CThostFtdcExchangeMarginRateField)) ({#set CThostFtdcExchangeMarginRateField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcExchangeMarginRateField)) ({#set CThostFtdcExchangeMarginRateField->BrokerID#} p)

instance Storable CThostFtdcOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcOrderActionField#}
  alignment _ = {#alignof CThostFtdcOrderActionField#}
  peek p =
    CThostFtdcOrderActionField <$>
    (({#get CThostFtdcOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->ActionDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderActionField->VolumeChange#} p) <*>
    fmap realToFrac ({#get CThostFtdcOrderActionField->LimitPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcOrderActionField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcOrderActionField->OrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderActionField->OrderActionRef#} p) <*>
    (({#get CThostFtdcOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->BranchID#} p)
    withText (instrumentID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->InstrumentID#} p)
    withText (statusMsg (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->StatusMsg#} p)
    withText (userID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->UserID#} p)
    {#set CThostFtdcOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcOrderActionField))
    withText (businessUnit (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->ActionLocalID#} p)
    withText (orderLocalID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->OrderLocalID#} p)
    {#set CThostFtdcOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcOrderActionField))
    withText (traderID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->ActionDate#} p)
    {#set CThostFtdcOrderActionField->VolumeChange#} p (fromIntegral $ volumeChange (s :: CThostFtdcOrderActionField))
    {#set CThostFtdcOrderActionField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcOrderActionField))
    {#set CThostFtdcOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcOrderActionField))
    withText (orderSysID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->ExchangeID#} p)
    {#set CThostFtdcOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcOrderActionField))
    {#set CThostFtdcOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcOrderActionField))
    {#set CThostFtdcOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcOrderActionField))
    withText (orderRef (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->OrderRef#} p)
    {#set CThostFtdcOrderActionField->OrderActionRef#} p (fromIntegral $ orderActionRef (s :: CThostFtdcOrderActionField))
    withText (investorID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOrderActionField)) ({#set CThostFtdcOrderActionField->BrokerID#} p)

instance Storable CThostFtdcUserRightField where
  sizeOf _ = {#sizeof CThostFtdcUserRightField#}
  alignment _ = {#alignof CThostFtdcUserRightField#}
  peek p =
    CThostFtdcUserRightField <$>
    fmap fromIntegral ({#get CThostFtdcUserRightField->IsForbidden#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcUserRightField->UserRightType#} p) <*>
    (({#get CThostFtdcUserRightField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcUserRightField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcUserRightField->IsForbidden#} p (fromIntegral $ isForbidden (s :: CThostFtdcUserRightField))
    {#set CThostFtdcUserRightField->UserRightType#} p (castCharToCChar $ userRightType (s :: CThostFtdcUserRightField))
    withText (userID (s :: CThostFtdcUserRightField)) ({#set CThostFtdcUserRightField->UserID#} p)
    withText (brokerID (s :: CThostFtdcUserRightField)) ({#set CThostFtdcUserRightField->BrokerID#} p)

instance Storable CThostFtdcUserPasswordUpdateField where
  sizeOf _ = {#sizeof CThostFtdcUserPasswordUpdateField#}
  alignment _ = {#alignof CThostFtdcUserPasswordUpdateField#}
  peek p =
    CThostFtdcUserPasswordUpdateField <$>
    (({#get CThostFtdcUserPasswordUpdateField->NewPassword#} p) >>= peekText) <*>
    (({#get CThostFtdcUserPasswordUpdateField->OldPassword#} p) >>= peekText) <*>
    (({#get CThostFtdcUserPasswordUpdateField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcUserPasswordUpdateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (newPassword (s :: CThostFtdcUserPasswordUpdateField)) ({#set CThostFtdcUserPasswordUpdateField->NewPassword#} p)
    withText (oldPassword (s :: CThostFtdcUserPasswordUpdateField)) ({#set CThostFtdcUserPasswordUpdateField->OldPassword#} p)
    withText (userID (s :: CThostFtdcUserPasswordUpdateField)) ({#set CThostFtdcUserPasswordUpdateField->UserID#} p)
    withText (brokerID (s :: CThostFtdcUserPasswordUpdateField)) ({#set CThostFtdcUserPasswordUpdateField->BrokerID#} p)

instance Storable CThostFtdcExchangeQuoteField where
  sizeOf _ = {#sizeof CThostFtdcExchangeQuoteField#}
  alignment _ = {#alignof CThostFtdcExchangeQuoteField#}
  peek p =
    CThostFtdcExchangeQuoteField <$>
    (({#get CThostFtdcExchangeQuoteField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->ForQuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->BidOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->AskOrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->SequenceNo#} p) <*>
    (({#get CThostFtdcExchangeQuoteField->ClearingPartID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteField->QuoteStatus#} p) <*>
    (({#get CThostFtdcExchangeQuoteField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->InsertDate#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->QuoteSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeQuoteField->TradingDay#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->NotifySequence#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeQuoteField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteField->QuoteLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteField->BidHedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteField->AskHedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteField->BidOffsetFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteField->AskOffsetFlag#} p) <*>
    (({#get CThostFtdcExchangeQuoteField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->BidVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteField->AskVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeQuoteField->BidPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeQuoteField->AskPrice#} p)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->BranchID#} p)
    withText (forQuoteSysID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->ForQuoteSysID#} p)
    withText (bidOrderSysID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->BidOrderSysID#} p)
    withText (askOrderSysID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->AskOrderSysID#} p)
    {#set CThostFtdcExchangeQuoteField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeQuoteField))
    withText (clearingPartID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->ClearingPartID#} p)
    {#set CThostFtdcExchangeQuoteField->QuoteStatus#} p (castCharToCChar $ quoteStatus (s :: CThostFtdcExchangeQuoteField))
    withText (cancelTime (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->CancelTime#} p)
    withText (insertTime (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->InsertDate#} p)
    withText (quoteSysID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->QuoteSysID#} p)
    {#set CThostFtdcExchangeQuoteField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeQuoteField))
    withText (tradingDay (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->TradingDay#} p)
    {#set CThostFtdcExchangeQuoteField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeQuoteField))
    withText (traderID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->ExchangeID#} p)
    withText (quoteLocalID (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->QuoteLocalID#} p)
    {#set CThostFtdcExchangeQuoteField->BidHedgeFlag#} p (castCharToCChar $ bidHedgeFlag (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->AskHedgeFlag#} p (castCharToCChar $ askHedgeFlag (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->BidOffsetFlag#} p (castCharToCChar $ bidOffsetFlag (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->AskOffsetFlag#} p (castCharToCChar $ askOffsetFlag (s :: CThostFtdcExchangeQuoteField))
    withText (businessUnit (s :: CThostFtdcExchangeQuoteField)) ({#set CThostFtdcExchangeQuoteField->BusinessUnit#} p)
    {#set CThostFtdcExchangeQuoteField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->BidVolume#} p (fromIntegral $ bidVolume (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->AskVolume#} p (fromIntegral $ askVolume (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->BidPrice#} p (realToFrac $ bidPrice (s :: CThostFtdcExchangeQuoteField))
    {#set CThostFtdcExchangeQuoteField->AskPrice#} p (realToFrac $ askPrice (s :: CThostFtdcExchangeQuoteField))

instance Storable CThostFtdcQryDepthMarketDataField where
  sizeOf _ = {#sizeof CThostFtdcQryDepthMarketDataField#}
  alignment _ = {#alignof CThostFtdcQryDepthMarketDataField#}
  peek p =
    CThostFtdcQryDepthMarketDataField <$>
    (({#get CThostFtdcQryDepthMarketDataField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryDepthMarketDataField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryDepthMarketDataField)) ({#set CThostFtdcQryDepthMarketDataField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryDepthMarketDataField)) ({#set CThostFtdcQryDepthMarketDataField->InstrumentID#} p)

instance Storable CThostFtdcQryExchangeLockField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeLockField#}
  alignment _ = {#alignof CThostFtdcQryExchangeLockField#}
  peek p =
    CThostFtdcQryExchangeLockField <$>
    (({#get CThostFtdcQryExchangeLockField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeLockField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeLockField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeLockField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeLockField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeLockField)) ({#set CThostFtdcQryExchangeLockField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeLockField)) ({#set CThostFtdcQryExchangeLockField->ExchangeID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryExchangeLockField)) ({#set CThostFtdcQryExchangeLockField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeLockField)) ({#set CThostFtdcQryExchangeLockField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeLockField)) ({#set CThostFtdcQryExchangeLockField->ParticipantID#} p)

instance Storable CThostFtdcCurrTransferIdentityField where
  sizeOf _ = {#sizeof CThostFtdcCurrTransferIdentityField#}
  alignment _ = {#alignof CThostFtdcCurrTransferIdentityField#}
  peek p =
    CThostFtdcCurrTransferIdentityField <$>
    fmap fromIntegral ({#get CThostFtdcCurrTransferIdentityField->IdentityID#} p)
  poke p s = do
    {#set CThostFtdcCurrTransferIdentityField->IdentityID#} p (fromIntegral $ identityID (s :: CThostFtdcCurrTransferIdentityField))

instance Storable CThostFtdcInstrumentOrderCommRateField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentOrderCommRateField#}
  alignment _ = {#alignof CThostFtdcInstrumentOrderCommRateField#}
  peek p =
    CThostFtdcInstrumentOrderCommRateField <$>
    fmap realToFrac ({#get CThostFtdcInstrumentOrderCommRateField->OrderActionCommByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentOrderCommRateField->OrderCommByVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentOrderCommRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcInstrumentOrderCommRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentOrderCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentOrderCommRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentOrderCommRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcInstrumentOrderCommRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstrumentOrderCommRateField->OrderActionCommByVolume#} p (realToFrac $ orderActionCommByVolume (s :: CThostFtdcInstrumentOrderCommRateField))
    {#set CThostFtdcInstrumentOrderCommRateField->OrderCommByVolume#} p (realToFrac $ orderCommByVolume (s :: CThostFtdcInstrumentOrderCommRateField))
    {#set CThostFtdcInstrumentOrderCommRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInstrumentOrderCommRateField))
    withText (exchangeID (s :: CThostFtdcInstrumentOrderCommRateField)) ({#set CThostFtdcInstrumentOrderCommRateField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcInstrumentOrderCommRateField)) ({#set CThostFtdcInstrumentOrderCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInstrumentOrderCommRateField)) ({#set CThostFtdcInstrumentOrderCommRateField->BrokerID#} p)
    {#set CThostFtdcInstrumentOrderCommRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcInstrumentOrderCommRateField))
    withText (instrumentID (s :: CThostFtdcInstrumentOrderCommRateField)) ({#set CThostFtdcInstrumentOrderCommRateField->InstrumentID#} p)

instance Storable CThostFtdcAccountregisterField where
  sizeOf _ = {#sizeof CThostFtdcAccountregisterField#}
  alignment _ = {#alignof CThostFtdcAccountregisterField#}
  peek p =
    CThostFtdcAccountregisterField <$>
    fmap castCCharToChar ({#get CThostFtdcAccountregisterField->BankAccType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcAccountregisterField->CustType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcAccountregisterField->TID#} p) <*>
    (({#get CThostFtdcAccountregisterField->OutDate#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->RegDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcAccountregisterField->OpenOrDestroy#} p) <*>
    (({#get CThostFtdcAccountregisterField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->CustomerName#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcAccountregisterField->IdCardType#} p) <*>
    (({#get CThostFtdcAccountregisterField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->BankAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcAccountregisterField->TradeDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcAccountregisterField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcAccountregisterField))
    {#set CThostFtdcAccountregisterField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcAccountregisterField))
    {#set CThostFtdcAccountregisterField->TID#} p (fromIntegral $ tID (s :: CThostFtdcAccountregisterField))
    withText (outDate (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->OutDate#} p)
    withText (regDate (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->RegDate#} p)
    {#set CThostFtdcAccountregisterField->OpenOrDestroy#} p (castCharToCChar $ openOrDestroy (s :: CThostFtdcAccountregisterField))
    withText (currencyID (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->CurrencyID#} p)
    withText (customerName (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->CustomerName#} p)
    withText (identifiedCardNo (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->IdentifiedCardNo#} p)
    {#set CThostFtdcAccountregisterField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcAccountregisterField))
    withText (accountID (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->AccountID#} p)
    withText (brokerBranchID (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->BrokerID#} p)
    withText (bankAccount (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->BankAccount#} p)
    withText (bankBranchID (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->BankID#} p)
    withText (tradeDay (s :: CThostFtdcAccountregisterField)) ({#set CThostFtdcAccountregisterField->TradeDay#} p)

instance Storable CThostFtdcExchangeOrderField where
  sizeOf _ = {#sizeof CThostFtdcExchangeOrderField#}
  alignment _ = {#alignof CThostFtdcExchangeOrderField#}
  peek p =
    CThostFtdcExchangeOrderField <$>
    (({#get CThostFtdcExchangeOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->SequenceNo#} p) <*>
    (({#get CThostFtdcExchangeOrderField->ClearingPartID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->ActiveTraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->UpdateTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->SuspendTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->ActiveTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->VolumeTotal#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->VolumeTraded#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->OrderType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->OrderStatus#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->OrderSource#} p) <*>
    (({#get CThostFtdcExchangeOrderField->OrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeOrderField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->RequestID#} p) <*>
    (({#get CThostFtdcExchangeOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->IsAutoSuspend#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->ForceCloseReason#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeOrderField->StopPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->ContingentCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->MinVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->VolumeCondition#} p) <*>
    (({#get CThostFtdcExchangeOrderField->GTDDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->TimeCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderField->VolumeTotalOriginal#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeOrderField->LimitPrice#} p) <*>
    (({#get CThostFtdcExchangeOrderField->CombHedgeFlag#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderField->CombOffsetFlag#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderField->OrderPriceType#} p)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->BranchID#} p)
    {#set CThostFtdcExchangeOrderField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeOrderField))
    withText (clearingPartID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ClearingPartID#} p)
    withText (activeTraderID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ActiveTraderID#} p)
    withText (cancelTime (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->CancelTime#} p)
    withText (updateTime (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->UpdateTime#} p)
    withText (suspendTime (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->SuspendTime#} p)
    withText (activeTime (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ActiveTime#} p)
    withText (insertTime (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->InsertDate#} p)
    {#set CThostFtdcExchangeOrderField->VolumeTotal#} p (fromIntegral $ volumeTotal (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->VolumeTraded#} p (fromIntegral $ volumeTraded (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->OrderType#} p (castCharToCChar $ orderType (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->OrderStatus#} p (castCharToCChar $ orderStatus (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->OrderSource#} p (castCharToCChar $ orderSource (s :: CThostFtdcExchangeOrderField))
    withText (orderSysID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->OrderSysID#} p)
    {#set CThostFtdcExchangeOrderField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeOrderField))
    withText (tradingDay (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->TradingDay#} p)
    {#set CThostFtdcExchangeOrderField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeOrderField))
    withText (traderID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->ExchangeID#} p)
    withText (orderLocalID (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->OrderLocalID#} p)
    {#set CThostFtdcExchangeOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcExchangeOrderField))
    withText (businessUnit (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->BusinessUnit#} p)
    {#set CThostFtdcExchangeOrderField->IsAutoSuspend#} p (fromIntegral $ isAutoSuspend (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->ForceCloseReason#} p (castCharToCChar $ forceCloseReason (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->StopPrice#} p (realToFrac $ stopPrice (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->ContingentCondition#} p (castCharToCChar $ contingentCondition (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->MinVolume#} p (fromIntegral $ minVolume (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->VolumeCondition#} p (castCharToCChar $ volumeCondition (s :: CThostFtdcExchangeOrderField))
    withText (gTDDate (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->GTDDate#} p)
    {#set CThostFtdcExchangeOrderField->TimeCondition#} p (castCharToCChar $ timeCondition (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->VolumeTotalOriginal#} p (fromIntegral $ volumeTotalOriginal (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcExchangeOrderField))
    withText (combHedgeFlag (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->CombHedgeFlag#} p)
    withText (combOffsetFlag (s :: CThostFtdcExchangeOrderField)) ({#set CThostFtdcExchangeOrderField->CombOffsetFlag#} p)
    {#set CThostFtdcExchangeOrderField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcExchangeOrderField))
    {#set CThostFtdcExchangeOrderField->OrderPriceType#} p (castCharToCChar $ orderPriceType (s :: CThostFtdcExchangeOrderField))

instance Storable CThostFtdcExchangeTradeField where
  sizeOf _ = {#sizeof CThostFtdcExchangeTradeField#}
  alignment _ = {#alignof CThostFtdcExchangeTradeField#}
  peek p =
    CThostFtdcExchangeTradeField <$>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->TradeSource#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeTradeField->SequenceNo#} p) <*>
    (({#get CThostFtdcExchangeTradeField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->ClearingPartID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->OrderLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->TraderID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->PriceSource#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->TradeType#} p) <*>
    (({#get CThostFtdcExchangeTradeField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->TradeDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeTradeField->Volume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeTradeField->Price#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->OffsetFlag#} p) <*>
    (({#get CThostFtdcExchangeTradeField->ExchangeInstID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->TradingRole#} p) <*>
    (({#get CThostFtdcExchangeTradeField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->OrderSysID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeTradeField->Direction#} p) <*>
    (({#get CThostFtdcExchangeTradeField->TradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeTradeField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExchangeTradeField->TradeSource#} p (castCharToCChar $ tradeSource (s :: CThostFtdcExchangeTradeField))
    {#set CThostFtdcExchangeTradeField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeTradeField))
    withText (businessUnit (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->BusinessUnit#} p)
    withText (clearingPartID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->ClearingPartID#} p)
    withText (orderLocalID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->OrderLocalID#} p)
    withText (traderID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->TraderID#} p)
    {#set CThostFtdcExchangeTradeField->PriceSource#} p (castCharToCChar $ priceSource (s :: CThostFtdcExchangeTradeField))
    {#set CThostFtdcExchangeTradeField->TradeType#} p (castCharToCChar $ tradeType (s :: CThostFtdcExchangeTradeField))
    withText (tradeTime (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->TradeDate#} p)
    {#set CThostFtdcExchangeTradeField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExchangeTradeField))
    {#set CThostFtdcExchangeTradeField->Price#} p (realToFrac $ price (s :: CThostFtdcExchangeTradeField))
    {#set CThostFtdcExchangeTradeField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcExchangeTradeField))
    {#set CThostFtdcExchangeTradeField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcExchangeTradeField))
    withText (exchangeInstID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->ExchangeInstID#} p)
    {#set CThostFtdcExchangeTradeField->TradingRole#} p (castCharToCChar $ tradingRole (s :: CThostFtdcExchangeTradeField))
    withText (clientID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->ParticipantID#} p)
    withText (orderSysID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->OrderSysID#} p)
    {#set CThostFtdcExchangeTradeField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcExchangeTradeField))
    withText (tradeID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->TradeID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeTradeField)) ({#set CThostFtdcExchangeTradeField->ExchangeID#} p)

instance Storable CThostFtdcInputOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcInputOrderActionField#}
  alignment _ = {#alignof CThostFtdcInputOrderActionField#}
  peek p =
    CThostFtdcInputOrderActionField <$>
    (({#get CThostFtdcInputOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderActionField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderActionField->VolumeChange#} p) <*>
    fmap realToFrac ({#get CThostFtdcInputOrderActionField->LimitPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcInputOrderActionField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcInputOrderActionField->OrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderActionField->OrderActionRef#} p) <*>
    (({#get CThostFtdcInputOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->InvestUnitID#} p)
    withText (instrumentID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->UserID#} p)
    {#set CThostFtdcInputOrderActionField->VolumeChange#} p (fromIntegral $ volumeChange (s :: CThostFtdcInputOrderActionField))
    {#set CThostFtdcInputOrderActionField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcInputOrderActionField))
    {#set CThostFtdcInputOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcInputOrderActionField))
    withText (orderSysID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->ExchangeID#} p)
    {#set CThostFtdcInputOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcInputOrderActionField))
    {#set CThostFtdcInputOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcInputOrderActionField))
    {#set CThostFtdcInputOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputOrderActionField))
    withText (orderRef (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->OrderRef#} p)
    {#set CThostFtdcInputOrderActionField->OrderActionRef#} p (fromIntegral $ orderActionRef (s :: CThostFtdcInputOrderActionField))
    withText (investorID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputOrderActionField)) ({#set CThostFtdcInputOrderActionField->BrokerID#} p)

instance Storable CThostFtdcSyncingTradingCodeField where
  sizeOf _ = {#sizeof CThostFtdcSyncingTradingCodeField#}
  alignment _ = {#alignof CThostFtdcSyncingTradingCodeField#}
  peek p =
    CThostFtdcSyncingTradingCodeField <$>
    (({#get CThostFtdcSyncingTradingCodeField->BranchID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingTradingCodeField->ClientIDType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingTradingCodeField->IsActive#} p) <*>
    (({#get CThostFtdcSyncingTradingCodeField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingTradingCodeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingTradingCodeField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingTradingCodeField->InvestorID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcSyncingTradingCodeField)) ({#set CThostFtdcSyncingTradingCodeField->BranchID#} p)
    {#set CThostFtdcSyncingTradingCodeField->ClientIDType#} p (castCharToCChar $ clientIDType (s :: CThostFtdcSyncingTradingCodeField))
    {#set CThostFtdcSyncingTradingCodeField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcSyncingTradingCodeField))
    withText (clientID (s :: CThostFtdcSyncingTradingCodeField)) ({#set CThostFtdcSyncingTradingCodeField->ClientID#} p)
    withText (exchangeID (s :: CThostFtdcSyncingTradingCodeField)) ({#set CThostFtdcSyncingTradingCodeField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcSyncingTradingCodeField)) ({#set CThostFtdcSyncingTradingCodeField->BrokerID#} p)
    withText (investorID (s :: CThostFtdcSyncingTradingCodeField)) ({#set CThostFtdcSyncingTradingCodeField->InvestorID#} p)

instance Storable CThostFtdcBrokerWithdrawAlgorithmField where
  sizeOf _ = {#sizeof CThostFtdcBrokerWithdrawAlgorithmField#}
  alignment _ = {#alignof CThostFtdcBrokerWithdrawAlgorithmField#}
  peek p =
    CThostFtdcBrokerWithdrawAlgorithmField <$>
    fmap castCCharToChar ({#get CThostFtdcBrokerWithdrawAlgorithmField->BalanceAlgorithm#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerWithdrawAlgorithmField->FundMortgageRatio#} p) <*>
    (({#get CThostFtdcBrokerWithdrawAlgorithmField->CurrencyID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcBrokerWithdrawAlgorithmField->IsBrokerUserEvent#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerWithdrawAlgorithmField->AvailIncludeCloseProfit#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerWithdrawAlgorithmField->AllWithoutTrade#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerWithdrawAlgorithmField->IncludeCloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerWithdrawAlgorithmField->UsingRatio#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerWithdrawAlgorithmField->WithdrawAlgorithm#} p) <*>
    (({#get CThostFtdcBrokerWithdrawAlgorithmField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerWithdrawAlgorithmField->BalanceAlgorithm#} p (castCharToCChar $ balanceAlgorithm (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    {#set CThostFtdcBrokerWithdrawAlgorithmField->FundMortgageRatio#} p (realToFrac $ fundMortgageRatio (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    withText (currencyID (s :: CThostFtdcBrokerWithdrawAlgorithmField)) ({#set CThostFtdcBrokerWithdrawAlgorithmField->CurrencyID#} p)
    {#set CThostFtdcBrokerWithdrawAlgorithmField->IsBrokerUserEvent#} p (fromIntegral $ isBrokerUserEvent (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    {#set CThostFtdcBrokerWithdrawAlgorithmField->AvailIncludeCloseProfit#} p (castCharToCChar $ availIncludeCloseProfit (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    {#set CThostFtdcBrokerWithdrawAlgorithmField->AllWithoutTrade#} p (castCharToCChar $ allWithoutTrade (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    {#set CThostFtdcBrokerWithdrawAlgorithmField->IncludeCloseProfit#} p (castCharToCChar $ includeCloseProfit (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    {#set CThostFtdcBrokerWithdrawAlgorithmField->UsingRatio#} p (realToFrac $ usingRatio (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    {#set CThostFtdcBrokerWithdrawAlgorithmField->WithdrawAlgorithm#} p (castCharToCChar $ withdrawAlgorithm (s :: CThostFtdcBrokerWithdrawAlgorithmField))
    withText (brokerID (s :: CThostFtdcBrokerWithdrawAlgorithmField)) ({#set CThostFtdcBrokerWithdrawAlgorithmField->BrokerID#} p)

instance Storable CThostFtdcQryInstrumentStatusField where
  sizeOf _ = {#sizeof CThostFtdcQryInstrumentStatusField#}
  alignment _ = {#alignof CThostFtdcQryInstrumentStatusField#}
  peek p =
    CThostFtdcQryInstrumentStatusField <$>
    (({#get CThostFtdcQryInstrumentStatusField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentStatusField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (exchangeInstID (s :: CThostFtdcQryInstrumentStatusField)) ({#set CThostFtdcQryInstrumentStatusField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcQryInstrumentStatusField)) ({#set CThostFtdcQryInstrumentStatusField->ExchangeID#} p)

instance Storable CThostFtdcQryTraderOfferField where
  sizeOf _ = {#sizeof CThostFtdcQryTraderOfferField#}
  alignment _ = {#alignof CThostFtdcQryTraderOfferField#}
  peek p =
    CThostFtdcQryTraderOfferField <$>
    (({#get CThostFtdcQryTraderOfferField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTraderOfferField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTraderOfferField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryTraderOfferField)) ({#set CThostFtdcQryTraderOfferField->TraderID#} p)
    withText (participantID (s :: CThostFtdcQryTraderOfferField)) ({#set CThostFtdcQryTraderOfferField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcQryTraderOfferField)) ({#set CThostFtdcQryTraderOfferField->ExchangeID#} p)

instance Storable CThostFtdcReqQueryAccountField where
  sizeOf _ = {#sizeof CThostFtdcReqQueryAccountField#}
  alignment _ = {#alignof CThostFtdcReqQueryAccountField#}
  peek p =
    CThostFtdcReqQueryAccountField <$>
    fmap fromIntegral ({#get CThostFtdcReqQueryAccountField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryAccountField->RequestID#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryAccountField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryAccountField->FutureSerial#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->CustType#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqQueryAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcReqQueryAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqQueryAccountField))
    {#set CThostFtdcReqQueryAccountField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcReqQueryAccountField))
    withText (operNo (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->OperNo#} p)
    {#set CThostFtdcReqQueryAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcReqQueryAccountField))
    {#set CThostFtdcReqQueryAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcReqQueryAccountField))
    withText (bankSecuAcc (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcReqQueryAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcReqQueryAccountField))
    withText (deviceID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->DeviceID#} p)
    {#set CThostFtdcReqQueryAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcReqQueryAccountField))
    withText (digest (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->Digest#} p)
    withText (currencyID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->CurrencyID#} p)
    {#set CThostFtdcReqQueryAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcReqQueryAccountField))
    withText (userID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->UserID#} p)
    {#set CThostFtdcReqQueryAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqQueryAccountField))
    {#set CThostFtdcReqQueryAccountField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcReqQueryAccountField))
    withText (password (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BankAccount#} p)
    {#set CThostFtdcReqQueryAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqQueryAccountField))
    withText (identifiedCardNo (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqQueryAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqQueryAccountField))
    withText (customerName (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->CustomerName#} p)
    {#set CThostFtdcReqQueryAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqQueryAccountField))
    {#set CThostFtdcReqQueryAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqQueryAccountField))
    {#set CThostFtdcReqQueryAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqQueryAccountField))
    withText (tradingDay (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqQueryAccountField)) ({#set CThostFtdcReqQueryAccountField->TradeCode#} p)

instance Storable CThostFtdcCommPhaseField where
  sizeOf _ = {#sizeof CThostFtdcCommPhaseField#}
  alignment _ = {#alignof CThostFtdcCommPhaseField#}
  peek p =
    CThostFtdcCommPhaseField <$>
    (({#get CThostFtdcCommPhaseField->SystemID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCommPhaseField->CommPhaseNo#} p) <*>
    (({#get CThostFtdcCommPhaseField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (systemID (s :: CThostFtdcCommPhaseField)) ({#set CThostFtdcCommPhaseField->SystemID#} p)
    {#set CThostFtdcCommPhaseField->CommPhaseNo#} p (fromIntegral $ commPhaseNo (s :: CThostFtdcCommPhaseField))
    withText (tradingDay (s :: CThostFtdcCommPhaseField)) ({#set CThostFtdcCommPhaseField->TradingDay#} p)

instance Storable CThostFtdcBrokerUserOTPParamField where
  sizeOf _ = {#sizeof CThostFtdcBrokerUserOTPParamField#}
  alignment _ = {#alignof CThostFtdcBrokerUserOTPParamField#}
  peek p =
    CThostFtdcBrokerUserOTPParamField <$>
    fmap castCCharToChar ({#get CThostFtdcBrokerUserOTPParamField->OTPType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBrokerUserOTPParamField->LastSuccess#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBrokerUserOTPParamField->LastDrift#} p) <*>
    (({#get CThostFtdcBrokerUserOTPParamField->AuthKey#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserOTPParamField->SerialNumber#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserOTPParamField->OTPVendorsID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserOTPParamField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserOTPParamField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerUserOTPParamField->OTPType#} p (castCharToCChar $ oTPType (s :: CThostFtdcBrokerUserOTPParamField))
    {#set CThostFtdcBrokerUserOTPParamField->LastSuccess#} p (fromIntegral $ lastSuccess (s :: CThostFtdcBrokerUserOTPParamField))
    {#set CThostFtdcBrokerUserOTPParamField->LastDrift#} p (fromIntegral $ lastDrift (s :: CThostFtdcBrokerUserOTPParamField))
    withText (authKey (s :: CThostFtdcBrokerUserOTPParamField)) ({#set CThostFtdcBrokerUserOTPParamField->AuthKey#} p)
    withText (serialNumber (s :: CThostFtdcBrokerUserOTPParamField)) ({#set CThostFtdcBrokerUserOTPParamField->SerialNumber#} p)
    withText (oTPVendorsID (s :: CThostFtdcBrokerUserOTPParamField)) ({#set CThostFtdcBrokerUserOTPParamField->OTPVendorsID#} p)
    withText (userID (s :: CThostFtdcBrokerUserOTPParamField)) ({#set CThostFtdcBrokerUserOTPParamField->UserID#} p)
    withText (brokerID (s :: CThostFtdcBrokerUserOTPParamField)) ({#set CThostFtdcBrokerUserOTPParamField->BrokerID#} p)

instance Storable CThostFtdcExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcExecOrderActionField#}
  peek p =
    CThostFtdcExecOrderActionField <$>
    (({#get CThostFtdcExecOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->StatusMsg#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderActionField->ActionType#} p) <*>
    (({#get CThostFtdcExecOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcExecOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ExecOrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcExecOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ActionDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcExecOrderActionField->ExecOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcExecOrderActionField->ExecOrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderActionField->ExecOrderActionRef#} p) <*>
    (({#get CThostFtdcExecOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->BranchID#} p)
    withText (instrumentID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->InstrumentID#} p)
    withText (statusMsg (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->StatusMsg#} p)
    {#set CThostFtdcExecOrderActionField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcExecOrderActionField))
    withText (userID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->UserID#} p)
    {#set CThostFtdcExecOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcExecOrderActionField))
    withText (businessUnit (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ActionLocalID#} p)
    withText (execOrderLocalID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ExecOrderLocalID#} p)
    {#set CThostFtdcExecOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExecOrderActionField))
    withText (traderID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ActionDate#} p)
    {#set CThostFtdcExecOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcExecOrderActionField))
    withText (execOrderSysID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ExecOrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ExchangeID#} p)
    {#set CThostFtdcExecOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcExecOrderActionField))
    {#set CThostFtdcExecOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcExecOrderActionField))
    {#set CThostFtdcExecOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcExecOrderActionField))
    withText (execOrderRef (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->ExecOrderRef#} p)
    {#set CThostFtdcExecOrderActionField->ExecOrderActionRef#} p (fromIntegral $ execOrderActionRef (s :: CThostFtdcExecOrderActionField))
    withText (investorID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcExecOrderActionField)) ({#set CThostFtdcExecOrderActionField->BrokerID#} p)

instance Storable CThostFtdcReqRepealField where
  sizeOf _ = {#sizeof CThostFtdcReqRepealField#}
  alignment _ = {#alignof CThostFtdcReqRepealField#}
  peek p =
    CThostFtdcReqRepealField <$>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->TransferStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->RequestID#} p) <*>
    (({#get CThostFtdcReqRepealField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcReqRepealField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcReqRepealField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->BankAccType#} p) <*>
    (({#get CThostFtdcReqRepealField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->Message#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcReqRepealField->BrokerFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcReqRepealField->CustFee#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->FeePayFlag#} p) <*>
    fmap realToFrac ({#get CThostFtdcReqRepealField->FutureFetchAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcReqRepealField->TradeAmount#} p) <*>
    (({#get CThostFtdcReqRepealField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcReqRepealField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->FutureSerial#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->InstallID#} p) <*>
    (({#get CThostFtdcReqRepealField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->CustType#} p) <*>
    (({#get CThostFtdcReqRepealField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->IdCardType#} p) <*>
    (({#get CThostFtdcReqRepealField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqRepealField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqRepealField->TradeCode#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->FutureRepealSerial#} p) <*>
    (({#get CThostFtdcReqRepealField->BankRepealSerial#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->PlateRepealSerial#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->BrokerRepealFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqRepealField->BankRepealFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->RepealedTimes#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqRepealField->RepealTimeInterval#} p)
  poke p s = do
    {#set CThostFtdcReqRepealField->TransferStatus#} p (castCharToCChar $ transferStatus (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcReqRepealField))
    withText (operNo (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->OperNo#} p)
    {#set CThostFtdcReqRepealField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcReqRepealField))
    withText (bankSecuAcc (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BrokerIDByBank#} p)
    {#set CThostFtdcReqRepealField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcReqRepealField))
    withText (deviceID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->DeviceID#} p)
    {#set CThostFtdcReqRepealField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcReqRepealField))
    withText (digest (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->Digest#} p)
    withText (message (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->Message#} p)
    {#set CThostFtdcReqRepealField->BrokerFee#} p (realToFrac $ brokerFee (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->FeePayFlag#} p (castCharToCChar $ feePayFlag (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->FutureFetchAmount#} p (realToFrac $ futureFetchAmount (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcReqRepealField))
    withText (currencyID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->CurrencyID#} p)
    {#set CThostFtdcReqRepealField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcReqRepealField))
    withText (userID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->UserID#} p)
    {#set CThostFtdcReqRepealField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqRepealField))
    withText (password (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->Password#} p)
    withText (accountID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankAccount#} p)
    {#set CThostFtdcReqRepealField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqRepealField))
    withText (identifiedCardNo (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqRepealField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqRepealField))
    withText (customerName (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->CustomerName#} p)
    {#set CThostFtdcReqRepealField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqRepealField))
    withText (tradingDay (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->TradeCode#} p)
    {#set CThostFtdcReqRepealField->FutureRepealSerial#} p (fromIntegral $ futureRepealSerial (s :: CThostFtdcReqRepealField))
    withText (bankRepealSerial (s :: CThostFtdcReqRepealField)) ({#set CThostFtdcReqRepealField->BankRepealSerial#} p)
    {#set CThostFtdcReqRepealField->PlateRepealSerial#} p (fromIntegral $ plateRepealSerial (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->BrokerRepealFlag#} p (castCharToCChar $ brokerRepealFlag (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->BankRepealFlag#} p (castCharToCChar $ bankRepealFlag (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->RepealedTimes#} p (fromIntegral $ repealedTimes (s :: CThostFtdcReqRepealField))
    {#set CThostFtdcReqRepealField->RepealTimeInterval#} p (fromIntegral $ repealTimeInterval (s :: CThostFtdcReqRepealField))

instance Storable CThostFtdcTradingNoticeField where
  sizeOf _ = {#sizeof CThostFtdcTradingNoticeField#}
  alignment _ = {#alignof CThostFtdcTradingNoticeField#}
  peek p =
    CThostFtdcTradingNoticeField <$>
    (({#get CThostFtdcTradingNoticeField->FieldContent#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTradingNoticeField->SequenceNo#} p) <*>
    (({#get CThostFtdcTradingNoticeField->SendTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingNoticeField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTradingNoticeField->SequenceSeries#} p) <*>
    (({#get CThostFtdcTradingNoticeField->InvestorID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTradingNoticeField->InvestorRange#} p) <*>
    (({#get CThostFtdcTradingNoticeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (fieldContent (s :: CThostFtdcTradingNoticeField)) ({#set CThostFtdcTradingNoticeField->FieldContent#} p)
    {#set CThostFtdcTradingNoticeField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcTradingNoticeField))
    withText (sendTime (s :: CThostFtdcTradingNoticeField)) ({#set CThostFtdcTradingNoticeField->SendTime#} p)
    withText (userID (s :: CThostFtdcTradingNoticeField)) ({#set CThostFtdcTradingNoticeField->UserID#} p)
    {#set CThostFtdcTradingNoticeField->SequenceSeries#} p (fromIntegral $ sequenceSeries (s :: CThostFtdcTradingNoticeField))
    withText (investorID (s :: CThostFtdcTradingNoticeField)) ({#set CThostFtdcTradingNoticeField->InvestorID#} p)
    {#set CThostFtdcTradingNoticeField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcTradingNoticeField))
    withText (brokerID (s :: CThostFtdcTradingNoticeField)) ({#set CThostFtdcTradingNoticeField->BrokerID#} p)

instance Storable CThostFtdcInvestorGroupField where
  sizeOf _ = {#sizeof CThostFtdcInvestorGroupField#}
  alignment _ = {#alignof CThostFtdcInvestorGroupField#}
  peek p =
    CThostFtdcInvestorGroupField <$>
    (({#get CThostFtdcInvestorGroupField->InvestorGroupName#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorGroupField->InvestorGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorGroupField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorGroupName (s :: CThostFtdcInvestorGroupField)) ({#set CThostFtdcInvestorGroupField->InvestorGroupName#} p)
    withText (investorGroupID (s :: CThostFtdcInvestorGroupField)) ({#set CThostFtdcInvestorGroupField->InvestorGroupID#} p)
    withText (brokerID (s :: CThostFtdcInvestorGroupField)) ({#set CThostFtdcInvestorGroupField->BrokerID#} p)

instance Storable CThostFtdcEWarrantOffsetField where
  sizeOf _ = {#sizeof CThostFtdcEWarrantOffsetField#}
  alignment _ = {#alignof CThostFtdcEWarrantOffsetField#}
  peek p =
    CThostFtdcEWarrantOffsetField <$>
    fmap fromIntegral ({#get CThostFtdcEWarrantOffsetField->Volume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcEWarrantOffsetField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcEWarrantOffsetField->Direction#} p) <*>
    (({#get CThostFtdcEWarrantOffsetField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcEWarrantOffsetField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcEWarrantOffsetField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcEWarrantOffsetField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcEWarrantOffsetField->TradingDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcEWarrantOffsetField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcEWarrantOffsetField))
    {#set CThostFtdcEWarrantOffsetField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcEWarrantOffsetField))
    {#set CThostFtdcEWarrantOffsetField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcEWarrantOffsetField))
    withText (instrumentID (s :: CThostFtdcEWarrantOffsetField)) ({#set CThostFtdcEWarrantOffsetField->InstrumentID#} p)
    withText (exchangeID (s :: CThostFtdcEWarrantOffsetField)) ({#set CThostFtdcEWarrantOffsetField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcEWarrantOffsetField)) ({#set CThostFtdcEWarrantOffsetField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcEWarrantOffsetField)) ({#set CThostFtdcEWarrantOffsetField->BrokerID#} p)
    withText (tradingDay (s :: CThostFtdcEWarrantOffsetField)) ({#set CThostFtdcEWarrantOffsetField->TradingDay#} p)

instance Storable CThostFtdcQryStrikeOffsetField where
  sizeOf _ = {#sizeof CThostFtdcQryStrikeOffsetField#}
  alignment _ = {#alignof CThostFtdcQryStrikeOffsetField#}
  peek p =
    CThostFtdcQryStrikeOffsetField <$>
    (({#get CThostFtdcQryStrikeOffsetField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryStrikeOffsetField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryStrikeOffsetField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (instrumentID (s :: CThostFtdcQryStrikeOffsetField)) ({#set CThostFtdcQryStrikeOffsetField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryStrikeOffsetField)) ({#set CThostFtdcQryStrikeOffsetField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryStrikeOffsetField)) ({#set CThostFtdcQryStrikeOffsetField->BrokerID#} p)

instance Storable CThostFtdcQryPartBrokerField where
  sizeOf _ = {#sizeof CThostFtdcQryPartBrokerField#}
  alignment _ = {#alignof CThostFtdcQryPartBrokerField#}
  peek p =
    CThostFtdcQryPartBrokerField <$>
    (({#get CThostFtdcQryPartBrokerField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryPartBrokerField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryPartBrokerField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (participantID (s :: CThostFtdcQryPartBrokerField)) ({#set CThostFtdcQryPartBrokerField->ParticipantID#} p)
    withText (brokerID (s :: CThostFtdcQryPartBrokerField)) ({#set CThostFtdcQryPartBrokerField->BrokerID#} p)
    withText (exchangeID (s :: CThostFtdcQryPartBrokerField)) ({#set CThostFtdcQryPartBrokerField->ExchangeID#} p)

instance Storable CThostFtdcQryCombActionField where
  sizeOf _ = {#sizeof CThostFtdcQryCombActionField#}
  alignment _ = {#alignof CThostFtdcQryCombActionField#}
  peek p =
    CThostFtdcQryCombActionField <$>
    (({#get CThostFtdcQryCombActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryCombActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryCombActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryCombActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryCombActionField)) ({#set CThostFtdcQryCombActionField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryCombActionField)) ({#set CThostFtdcQryCombActionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryCombActionField)) ({#set CThostFtdcQryCombActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryCombActionField)) ({#set CThostFtdcQryCombActionField->BrokerID#} p)

instance Storable CThostFtdcBrokerDepositField where
  sizeOf _ = {#sizeof CThostFtdcBrokerDepositField#}
  alignment _ = {#alignof CThostFtdcBrokerDepositField#}
  peek p =
    CThostFtdcBrokerDepositField <$>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->FrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->Reserve#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->Available#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->Withdraw#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->Deposit#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->Balance#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->CloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->CurrMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerDepositField->PreBalance#} p) <*>
    (({#get CThostFtdcBrokerDepositField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerDepositField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerDepositField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerDepositField->TradingDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerDepositField->FrozenMargin#} p (realToFrac $ frozenMargin (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->Reserve#} p (realToFrac $ reserve (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->Available#} p (realToFrac $ available (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->Withdraw#} p (realToFrac $ withdraw (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->Deposit#} p (realToFrac $ deposit (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->Balance#} p (realToFrac $ balance (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->CloseProfit#} p (realToFrac $ closeProfit (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->CurrMargin#} p (realToFrac $ currMargin (s :: CThostFtdcBrokerDepositField))
    {#set CThostFtdcBrokerDepositField->PreBalance#} p (realToFrac $ preBalance (s :: CThostFtdcBrokerDepositField))
    withText (exchangeID (s :: CThostFtdcBrokerDepositField)) ({#set CThostFtdcBrokerDepositField->ExchangeID#} p)
    withText (participantID (s :: CThostFtdcBrokerDepositField)) ({#set CThostFtdcBrokerDepositField->ParticipantID#} p)
    withText (brokerID (s :: CThostFtdcBrokerDepositField)) ({#set CThostFtdcBrokerDepositField->BrokerID#} p)
    withText (tradingDay (s :: CThostFtdcBrokerDepositField)) ({#set CThostFtdcBrokerDepositField->TradingDay#} p)

instance Storable CThostFtdcQryTraderField where
  sizeOf _ = {#sizeof CThostFtdcQryTraderField#}
  alignment _ = {#alignof CThostFtdcQryTraderField#}
  peek p =
    CThostFtdcQryTraderField <$>
    (({#get CThostFtdcQryTraderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTraderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTraderField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryTraderField)) ({#set CThostFtdcQryTraderField->TraderID#} p)
    withText (participantID (s :: CThostFtdcQryTraderField)) ({#set CThostFtdcQryTraderField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcQryTraderField)) ({#set CThostFtdcQryTraderField->ExchangeID#} p)

instance Storable CThostFtdcLimitAmountField where
  sizeOf _ = {#sizeof CThostFtdcLimitAmountField#}
  alignment _ = {#alignof CThostFtdcLimitAmountField#}
  peek p =
    CThostFtdcLimitAmountField <$>
    fmap realToFrac ({#get CThostFtdcLimitAmountField->LongAmountFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcLimitAmountField->LongAmount#} p) <*>
    (({#get CThostFtdcLimitAmountField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitAmountField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitAmountField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcLimitAmountField->LongAmountFrozen#} p (realToFrac $ longAmountFrozen (s :: CThostFtdcLimitAmountField))
    {#set CThostFtdcLimitAmountField->LongAmount#} p (realToFrac $ longAmount (s :: CThostFtdcLimitAmountField))
    withText (exchangeID (s :: CThostFtdcLimitAmountField)) ({#set CThostFtdcLimitAmountField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcLimitAmountField)) ({#set CThostFtdcLimitAmountField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLimitAmountField)) ({#set CThostFtdcLimitAmountField->BrokerID#} p)

instance Storable CThostFtdcQryInstrumentField where
  sizeOf _ = {#sizeof CThostFtdcQryInstrumentField#}
  alignment _ = {#alignof CThostFtdcQryInstrumentField#}
  peek p =
    CThostFtdcQryInstrumentField <$>
    (({#get CThostFtdcQryInstrumentField->ProductID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (productID (s :: CThostFtdcQryInstrumentField)) ({#set CThostFtdcQryInstrumentField->ProductID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryInstrumentField)) ({#set CThostFtdcQryInstrumentField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcQryInstrumentField)) ({#set CThostFtdcQryInstrumentField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryInstrumentField)) ({#set CThostFtdcQryInstrumentField->InstrumentID#} p)

instance Storable CThostFtdcDesignateField where
  sizeOf _ = {#sizeof CThostFtdcDesignateField#}
  alignment _ = {#alignof CThostFtdcDesignateField#}
  peek p =
    CThostFtdcDesignateField <$>
    (({#get CThostFtdcDesignateField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcDesignateField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDesignateField->FrontID#} p) <*>
    (({#get CThostFtdcDesignateField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcDesignateField->SettlementID#} p) <*>
    (({#get CThostFtdcDesignateField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcDesignateField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcDesignateField->DesignateStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDesignateField->InstallID#} p) <*>
    (({#get CThostFtdcDesignateField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->DesignateLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcDesignateField->DesignateType#} p) <*>
    (({#get CThostFtdcDesignateField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->DesignateRef#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcDesignateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->BranchID#} p)
    withText (statusMsg (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->UserProductInfo#} p)
    {#set CThostFtdcDesignateField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcDesignateField))
    {#set CThostFtdcDesignateField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcDesignateField))
    withText (insertTime (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->InsertDate#} p)
    {#set CThostFtdcDesignateField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcDesignateField))
    withText (tradingDay (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->TradingDay#} p)
    {#set CThostFtdcDesignateField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcDesignateField))
    {#set CThostFtdcDesignateField->DesignateStatus#} p (castCharToCChar $ designateStatus (s :: CThostFtdcDesignateField))
    {#set CThostFtdcDesignateField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcDesignateField))
    withText (traderID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->TraderID#} p)
    withText (clientID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->ClientID#} p)
    withText (participantID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->ExchangeID#} p)
    withText (designateLocalID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->DesignateLocalID#} p)
    {#set CThostFtdcDesignateField->DesignateType#} p (castCharToCChar $ designateType (s :: CThostFtdcDesignateField))
    withText (userID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->UserID#} p)
    withText (designateRef (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->DesignateRef#} p)
    withText (investorID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcDesignateField)) ({#set CThostFtdcDesignateField->BrokerID#} p)

instance Storable CThostFtdcTradingAccountPasswordField where
  sizeOf _ = {#sizeof CThostFtdcTradingAccountPasswordField#}
  alignment _ = {#alignof CThostFtdcTradingAccountPasswordField#}
  peek p =
    CThostFtdcTradingAccountPasswordField <$>
    (({#get CThostFtdcTradingAccountPasswordField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcTradingAccountPasswordField)) ({#set CThostFtdcTradingAccountPasswordField->CurrencyID#} p)
    withText (password (s :: CThostFtdcTradingAccountPasswordField)) ({#set CThostFtdcTradingAccountPasswordField->Password#} p)
    withText (accountID (s :: CThostFtdcTradingAccountPasswordField)) ({#set CThostFtdcTradingAccountPasswordField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcTradingAccountPasswordField)) ({#set CThostFtdcTradingAccountPasswordField->BrokerID#} p)

instance Storable CThostFtdcPositionProfitAlgorithmField where
  sizeOf _ = {#sizeof CThostFtdcPositionProfitAlgorithmField#}
  alignment _ = {#alignof CThostFtdcPositionProfitAlgorithmField#}
  peek p =
    CThostFtdcPositionProfitAlgorithmField <$>
    (({#get CThostFtdcPositionProfitAlgorithmField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcPositionProfitAlgorithmField->Memo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcPositionProfitAlgorithmField->Algorithm#} p) <*>
    (({#get CThostFtdcPositionProfitAlgorithmField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcPositionProfitAlgorithmField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcPositionProfitAlgorithmField)) ({#set CThostFtdcPositionProfitAlgorithmField->CurrencyID#} p)
    withText (memo (s :: CThostFtdcPositionProfitAlgorithmField)) ({#set CThostFtdcPositionProfitAlgorithmField->Memo#} p)
    {#set CThostFtdcPositionProfitAlgorithmField->Algorithm#} p (castCharToCChar $ algorithm (s :: CThostFtdcPositionProfitAlgorithmField))
    withText (accountID (s :: CThostFtdcPositionProfitAlgorithmField)) ({#set CThostFtdcPositionProfitAlgorithmField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcPositionProfitAlgorithmField)) ({#set CThostFtdcPositionProfitAlgorithmField->BrokerID#} p)

instance Storable CThostFtdcQryStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcQryStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcQryStockDisposalActionField#}
  peek p =
    CThostFtdcQryStockDisposalActionField <$>
    (({#get CThostFtdcQryStockDisposalActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryStockDisposalActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryStockDisposalActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryStockDisposalActionField)) ({#set CThostFtdcQryStockDisposalActionField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryStockDisposalActionField)) ({#set CThostFtdcQryStockDisposalActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryStockDisposalActionField)) ({#set CThostFtdcQryStockDisposalActionField->BrokerID#} p)

instance Storable CThostFtdcErrStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcErrStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcErrStockDisposalActionField#}
  peek p =
    CThostFtdcErrStockDisposalActionField <$>
    (({#get CThostFtdcErrStockDisposalActionField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcErrStockDisposalActionField->ErrorID#} p) <*>
    (({#get CThostFtdcErrStockDisposalActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrStockDisposalActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrStockDisposalActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcErrStockDisposalActionField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrStockDisposalActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrStockDisposalActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrStockDisposalActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrStockDisposalActionField->RequestID#} p) <*>
    (({#get CThostFtdcErrStockDisposalActionField->StockDisposalRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrStockDisposalActionField->StockDisposalActionRef#} p) <*>
    (({#get CThostFtdcErrStockDisposalActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrStockDisposalActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->ErrorMsg#} p)
    {#set CThostFtdcErrStockDisposalActionField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcErrStockDisposalActionField))
    withText (instrumentID (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->UserID#} p)
    {#set CThostFtdcErrStockDisposalActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcErrStockDisposalActionField))
    withText (stockDisposalSysID (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->StockDisposalSysID#} p)
    withText (exchangeID (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->ExchangeID#} p)
    {#set CThostFtdcErrStockDisposalActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcErrStockDisposalActionField))
    {#set CThostFtdcErrStockDisposalActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcErrStockDisposalActionField))
    {#set CThostFtdcErrStockDisposalActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcErrStockDisposalActionField))
    withText (stockDisposalRef (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->StockDisposalRef#} p)
    {#set CThostFtdcErrStockDisposalActionField->StockDisposalActionRef#} p (fromIntegral $ stockDisposalActionRef (s :: CThostFtdcErrStockDisposalActionField))
    withText (investorID (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcErrStockDisposalActionField)) ({#set CThostFtdcErrStockDisposalActionField->BrokerID#} p)

instance Storable CThostFtdcQryMMInstrumentCommissionRateField where
  sizeOf _ = {#sizeof CThostFtdcQryMMInstrumentCommissionRateField#}
  alignment _ = {#alignof CThostFtdcQryMMInstrumentCommissionRateField#}
  peek p =
    CThostFtdcQryMMInstrumentCommissionRateField <$>
    (({#get CThostFtdcQryMMInstrumentCommissionRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMMInstrumentCommissionRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMMInstrumentCommissionRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMMInstrumentCommissionRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryMMInstrumentCommissionRateField)) ({#set CThostFtdcQryMMInstrumentCommissionRateField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryMMInstrumentCommissionRateField)) ({#set CThostFtdcQryMMInstrumentCommissionRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryMMInstrumentCommissionRateField)) ({#set CThostFtdcQryMMInstrumentCommissionRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryMMInstrumentCommissionRateField)) ({#set CThostFtdcQryMMInstrumentCommissionRateField->BrokerID#} p)

instance Storable CThostFtdcExchangeExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcExchangeExecOrderField#}
  alignment _ = {#alignof CThostFtdcExchangeExecOrderField#}
  peek p =
    CThostFtdcExchangeExecOrderField <$>
    (({#get CThostFtdcExchangeExecOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderField->SequenceNo#} p) <*>
    (({#get CThostFtdcExchangeExecOrderField->ClearingPartID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->ExecResult#} p) <*>
    (({#get CThostFtdcExchangeExecOrderField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->InsertDate#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->ExecOrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeExecOrderField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeExecOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderField->ExecOrderLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->CloseFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->ReservePositionFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->PosiDirection#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->ActionType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderField->OffsetFlag#} p) <*>
    (({#get CThostFtdcExchangeExecOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderField->Volume#} p)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->BranchID#} p)
    {#set CThostFtdcExchangeExecOrderField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeExecOrderField))
    withText (clearingPartID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ClearingPartID#} p)
    {#set CThostFtdcExchangeExecOrderField->ExecResult#} p (castCharToCChar $ execResult (s :: CThostFtdcExchangeExecOrderField))
    withText (cancelTime (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->CancelTime#} p)
    withText (insertTime (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->InsertDate#} p)
    withText (execOrderSysID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ExecOrderSysID#} p)
    {#set CThostFtdcExchangeExecOrderField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeExecOrderField))
    withText (tradingDay (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->TradingDay#} p)
    {#set CThostFtdcExchangeExecOrderField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeExecOrderField))
    withText (traderID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ExchangeID#} p)
    withText (execOrderLocalID (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->ExecOrderLocalID#} p)
    {#set CThostFtdcExchangeExecOrderField->CloseFlag#} p (castCharToCChar $ closeFlag (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->ReservePositionFlag#} p (castCharToCChar $ reservePositionFlag (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcExchangeExecOrderField))
    withText (businessUnit (s :: CThostFtdcExchangeExecOrderField)) ({#set CThostFtdcExchangeExecOrderField->BusinessUnit#} p)
    {#set CThostFtdcExchangeExecOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcExchangeExecOrderField))
    {#set CThostFtdcExchangeExecOrderField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExchangeExecOrderField))

instance Storable CThostFtdcTransferQryDetailReqField where
  sizeOf _ = {#sizeof CThostFtdcTransferQryDetailReqField#}
  alignment _ = {#alignof CThostFtdcTransferQryDetailReqField#}
  peek p =
    CThostFtdcTransferQryDetailReqField <$>
    (({#get CThostFtdcTransferQryDetailReqField->FutureAccount#} p) >>= peekText)
  poke p s = do
    withText (futureAccount (s :: CThostFtdcTransferQryDetailReqField)) ({#set CThostFtdcTransferQryDetailReqField->FutureAccount#} p)

instance Storable CThostFtdcTransferQryDetailRspField where
  sizeOf _ = {#sizeof CThostFtdcTransferQryDetailRspField#}
  alignment _ = {#alignof CThostFtdcTransferQryDetailRspField#}
  peek p =
    CThostFtdcTransferQryDetailRspField <$>
    fmap castCCharToChar ({#get CThostFtdcTransferQryDetailRspField->Flag#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferQryDetailRspField->TxAmount#} p) <*>
    (({#get CThostFtdcTransferQryDetailRspField->CurrencyCode#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->CertCode#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->BankAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->BankBrchID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->BankID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTransferQryDetailRspField->BankSerial#} p) <*>
    (({#get CThostFtdcTransferQryDetailRspField->FutureAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->FutureID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTransferQryDetailRspField->FutureSerial#} p) <*>
    (({#get CThostFtdcTransferQryDetailRspField->TradeCode#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryDetailRspField->TradeDate#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTransferQryDetailRspField->Flag#} p (castCharToCChar $ flag (s :: CThostFtdcTransferQryDetailRspField))
    {#set CThostFtdcTransferQryDetailRspField->TxAmount#} p (realToFrac $ txAmount (s :: CThostFtdcTransferQryDetailRspField))
    withText (currencyCode (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->CurrencyCode#} p)
    withText (certCode (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->CertCode#} p)
    withText (bankAccount (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->BankAccount#} p)
    withText (bankBrchID (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->BankBrchID#} p)
    withText (bankID (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->BankID#} p)
    {#set CThostFtdcTransferQryDetailRspField->BankSerial#} p (fromIntegral $ bankSerial (s :: CThostFtdcTransferQryDetailRspField))
    withText (futureAccount (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->FutureAccount#} p)
    withText (futureID (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->FutureID#} p)
    {#set CThostFtdcTransferQryDetailRspField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcTransferQryDetailRspField))
    withText (tradeCode (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->TradeCode#} p)
    withText (tradeTime (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcTransferQryDetailRspField)) ({#set CThostFtdcTransferQryDetailRspField->TradeDate#} p)

instance Storable CThostFtdcQryMDTraderOfferField where
  sizeOf _ = {#sizeof CThostFtdcQryMDTraderOfferField#}
  alignment _ = {#alignof CThostFtdcQryMDTraderOfferField#}
  peek p =
    CThostFtdcQryMDTraderOfferField <$>
    (({#get CThostFtdcQryMDTraderOfferField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMDTraderOfferField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMDTraderOfferField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryMDTraderOfferField)) ({#set CThostFtdcQryMDTraderOfferField->TraderID#} p)
    withText (participantID (s :: CThostFtdcQryMDTraderOfferField)) ({#set CThostFtdcQryMDTraderOfferField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcQryMDTraderOfferField)) ({#set CThostFtdcQryMDTraderOfferField->ExchangeID#} p)

instance Storable CThostFtdcVerifyInvestorPasswordField where
  sizeOf _ = {#sizeof CThostFtdcVerifyInvestorPasswordField#}
  alignment _ = {#alignof CThostFtdcVerifyInvestorPasswordField#}
  peek p =
    CThostFtdcVerifyInvestorPasswordField <$>
    (({#get CThostFtdcVerifyInvestorPasswordField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyInvestorPasswordField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyInvestorPasswordField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (password (s :: CThostFtdcVerifyInvestorPasswordField)) ({#set CThostFtdcVerifyInvestorPasswordField->Password#} p)
    withText (investorID (s :: CThostFtdcVerifyInvestorPasswordField)) ({#set CThostFtdcVerifyInvestorPasswordField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcVerifyInvestorPasswordField)) ({#set CThostFtdcVerifyInvestorPasswordField->BrokerID#} p)

instance Storable CThostFtdcExchangeMarginRateAdjustField where
  sizeOf _ = {#sizeof CThostFtdcExchangeMarginRateAdjustField#}
  alignment _ = {#alignof CThostFtdcExchangeMarginRateAdjustField#}
  peek p =
    CThostFtdcExchangeMarginRateAdjustField <$>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->NoShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->NoShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->NoLongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->NoLongMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->ExchShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->ExchShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->ExchLongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->ExchLongMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->ShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->ShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->LongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeMarginRateAdjustField->LongMarginRatioByMoney#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeMarginRateAdjustField->HedgeFlag#} p) <*>
    (({#get CThostFtdcExchangeMarginRateAdjustField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeMarginRateAdjustField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExchangeMarginRateAdjustField->NoShortMarginRatioByVolume#} p (realToFrac $ noShortMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->NoShortMarginRatioByMoney#} p (realToFrac $ noShortMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->NoLongMarginRatioByVolume#} p (realToFrac $ noLongMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->NoLongMarginRatioByMoney#} p (realToFrac $ noLongMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->ExchShortMarginRatioByVolume#} p (realToFrac $ exchShortMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->ExchShortMarginRatioByMoney#} p (realToFrac $ exchShortMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->ExchLongMarginRatioByVolume#} p (realToFrac $ exchLongMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->ExchLongMarginRatioByMoney#} p (realToFrac $ exchLongMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->ShortMarginRatioByVolume#} p (realToFrac $ shortMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->ShortMarginRatioByMoney#} p (realToFrac $ shortMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->LongMarginRatioByVolume#} p (realToFrac $ longMarginRatioByVolume (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->LongMarginRatioByMoney#} p (realToFrac $ longMarginRatioByMoney (s :: CThostFtdcExchangeMarginRateAdjustField))
    {#set CThostFtdcExchangeMarginRateAdjustField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcExchangeMarginRateAdjustField))
    withText (instrumentID (s :: CThostFtdcExchangeMarginRateAdjustField)) ({#set CThostFtdcExchangeMarginRateAdjustField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcExchangeMarginRateAdjustField)) ({#set CThostFtdcExchangeMarginRateAdjustField->BrokerID#} p)

instance Storable CThostFtdcInstrumentCommissionRateField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentCommissionRateField#}
  alignment _ = {#alignof CThostFtdcInstrumentCommissionRateField#}
  peek p =
    CThostFtdcInstrumentCommissionRateField <$>
    fmap castCCharToChar ({#get CThostFtdcInstrumentCommissionRateField->BizType#} p) <*>
    (({#get CThostFtdcInstrumentCommissionRateField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentCommissionRateField->CloseTodayRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentCommissionRateField->CloseTodayRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentCommissionRateField->CloseRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentCommissionRateField->CloseRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentCommissionRateField->OpenRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentCommissionRateField->OpenRatioByMoney#} p) <*>
    (({#get CThostFtdcInstrumentCommissionRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentCommissionRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentCommissionRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcInstrumentCommissionRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstrumentCommissionRateField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcInstrumentCommissionRateField))
    withText (exchangeID (s :: CThostFtdcInstrumentCommissionRateField)) ({#set CThostFtdcInstrumentCommissionRateField->ExchangeID#} p)
    {#set CThostFtdcInstrumentCommissionRateField->CloseTodayRatioByVolume#} p (realToFrac $ closeTodayRatioByVolume (s :: CThostFtdcInstrumentCommissionRateField))
    {#set CThostFtdcInstrumentCommissionRateField->CloseTodayRatioByMoney#} p (realToFrac $ closeTodayRatioByMoney (s :: CThostFtdcInstrumentCommissionRateField))
    {#set CThostFtdcInstrumentCommissionRateField->CloseRatioByVolume#} p (realToFrac $ closeRatioByVolume (s :: CThostFtdcInstrumentCommissionRateField))
    {#set CThostFtdcInstrumentCommissionRateField->CloseRatioByMoney#} p (realToFrac $ closeRatioByMoney (s :: CThostFtdcInstrumentCommissionRateField))
    {#set CThostFtdcInstrumentCommissionRateField->OpenRatioByVolume#} p (realToFrac $ openRatioByVolume (s :: CThostFtdcInstrumentCommissionRateField))
    {#set CThostFtdcInstrumentCommissionRateField->OpenRatioByMoney#} p (realToFrac $ openRatioByMoney (s :: CThostFtdcInstrumentCommissionRateField))
    withText (investorID (s :: CThostFtdcInstrumentCommissionRateField)) ({#set CThostFtdcInstrumentCommissionRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInstrumentCommissionRateField)) ({#set CThostFtdcInstrumentCommissionRateField->BrokerID#} p)
    {#set CThostFtdcInstrumentCommissionRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcInstrumentCommissionRateField))
    withText (instrumentID (s :: CThostFtdcInstrumentCommissionRateField)) ({#set CThostFtdcInstrumentCommissionRateField->InstrumentID#} p)

instance Storable CThostFtdcQryExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryExecOrderActionField#}
  peek p =
    CThostFtdcQryExecOrderActionField <$>
    (({#get CThostFtdcQryExecOrderActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryExecOrderActionField)) ({#set CThostFtdcQryExecOrderActionField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryExecOrderActionField)) ({#set CThostFtdcQryExecOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryExecOrderActionField)) ({#set CThostFtdcQryExecOrderActionField->BrokerID#} p)

instance Storable CThostFtdcErrExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcErrExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcErrExecOrderActionField#}
  peek p =
    CThostFtdcErrExecOrderActionField <$>
    (({#get CThostFtdcErrExecOrderActionField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderActionField->ErrorID#} p) <*>
    (({#get CThostFtdcErrExecOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcErrExecOrderActionField->ExecOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcErrExecOrderActionField->ExecOrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderActionField->ExecOrderActionRef#} p) <*>
    (({#get CThostFtdcErrExecOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->ErrorMsg#} p)
    {#set CThostFtdcErrExecOrderActionField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcErrExecOrderActionField))
    withText (macAddress (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->InvestUnitID#} p)
    withText (instrumentID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->UserID#} p)
    {#set CThostFtdcErrExecOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcErrExecOrderActionField))
    withText (execOrderSysID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->ExecOrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->ExchangeID#} p)
    {#set CThostFtdcErrExecOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcErrExecOrderActionField))
    {#set CThostFtdcErrExecOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcErrExecOrderActionField))
    {#set CThostFtdcErrExecOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcErrExecOrderActionField))
    withText (execOrderRef (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->ExecOrderRef#} p)
    {#set CThostFtdcErrExecOrderActionField->ExecOrderActionRef#} p (fromIntegral $ execOrderActionRef (s :: CThostFtdcErrExecOrderActionField))
    withText (investorID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcErrExecOrderActionField)) ({#set CThostFtdcErrExecOrderActionField->BrokerID#} p)

instance Storable CThostFtdcQryParkedOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryParkedOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryParkedOrderActionField#}
  peek p =
    CThostFtdcQryParkedOrderActionField <$>
    (({#get CThostFtdcQryParkedOrderActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryParkedOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryParkedOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryParkedOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryParkedOrderActionField)) ({#set CThostFtdcQryParkedOrderActionField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryParkedOrderActionField)) ({#set CThostFtdcQryParkedOrderActionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryParkedOrderActionField)) ({#set CThostFtdcQryParkedOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryParkedOrderActionField)) ({#set CThostFtdcQryParkedOrderActionField->BrokerID#} p)

instance Storable CThostFtdcInvestorPositionDetailField where
  sizeOf _ = {#sizeof CThostFtdcInvestorPositionDetailField#}
  alignment _ = {#alignof CThostFtdcInvestorPositionDetailField#}
  peek p =
    CThostFtdcInvestorPositionDetailField <$>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->CloseAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionDetailField->CloseVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->SettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->LastSettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->MarginRateByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->MarginRateByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->ExchMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->Margin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->PositionProfitByTrade#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->PositionProfitByDate#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->CloseProfitByTrade#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->CloseProfitByDate#} p) <*>
    (({#get CThostFtdcInvestorPositionDetailField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionDetailField->CombInstrumentID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionDetailField->TradeType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionDetailField->SettlementID#} p) <*>
    (({#get CThostFtdcInvestorPositionDetailField->TradingDay#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionDetailField->OpenPrice#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionDetailField->Volume#} p) <*>
    (({#get CThostFtdcInvestorPositionDetailField->TradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionDetailField->OpenDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionDetailField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionDetailField->HedgeFlag#} p) <*>
    (({#get CThostFtdcInvestorPositionDetailField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionDetailField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionDetailField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorPositionDetailField->CloseAmount#} p (realToFrac $ closeAmount (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->CloseVolume#} p (fromIntegral $ closeVolume (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->SettlementPrice#} p (realToFrac $ settlementPrice (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->LastSettlementPrice#} p (realToFrac $ lastSettlementPrice (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->MarginRateByVolume#} p (realToFrac $ marginRateByVolume (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->MarginRateByMoney#} p (realToFrac $ marginRateByMoney (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->ExchMargin#} p (realToFrac $ exchMargin (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->Margin#} p (realToFrac $ margin (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->PositionProfitByTrade#} p (realToFrac $ positionProfitByTrade (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->PositionProfitByDate#} p (realToFrac $ positionProfitByDate (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->CloseProfitByTrade#} p (realToFrac $ closeProfitByTrade (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->CloseProfitByDate#} p (realToFrac $ closeProfitByDate (s :: CThostFtdcInvestorPositionDetailField))
    withText (exchangeID (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->ExchangeID#} p)
    withText (combInstrumentID (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->CombInstrumentID#} p)
    {#set CThostFtdcInvestorPositionDetailField->TradeType#} p (castCharToCChar $ tradeType (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcInvestorPositionDetailField))
    withText (tradingDay (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->TradingDay#} p)
    {#set CThostFtdcInvestorPositionDetailField->OpenPrice#} p (realToFrac $ openPrice (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcInvestorPositionDetailField))
    withText (tradeID (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->TradeID#} p)
    withText (openDate (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->OpenDate#} p)
    {#set CThostFtdcInvestorPositionDetailField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcInvestorPositionDetailField))
    {#set CThostFtdcInvestorPositionDetailField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInvestorPositionDetailField))
    withText (investorID (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->BrokerID#} p)
    withText (instrumentID (s :: CThostFtdcInvestorPositionDetailField)) ({#set CThostFtdcInvestorPositionDetailField->InstrumentID#} p)

instance Storable CThostFtdcQryLimitPosiSField where
  sizeOf _ = {#sizeof CThostFtdcQryLimitPosiSField#}
  alignment _ = {#alignof CThostFtdcQryLimitPosiSField#}
  peek p =
    CThostFtdcQryLimitPosiSField <$>
    (({#get CThostFtdcQryLimitPosiSField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitPosiSField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitPosiSField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitPosiSField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryLimitPosiSField)) ({#set CThostFtdcQryLimitPosiSField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryLimitPosiSField)) ({#set CThostFtdcQryLimitPosiSField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryLimitPosiSField)) ({#set CThostFtdcQryLimitPosiSField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryLimitPosiSField)) ({#set CThostFtdcQryLimitPosiSField->BrokerID#} p)

instance Storable CThostFtdcLimitPosiSField where
  sizeOf _ = {#sizeof CThostFtdcLimitPosiSField#}
  alignment _ = {#alignof CThostFtdcLimitPosiSField#}
  peek p =
    CThostFtdcLimitPosiSField <$>
    fmap fromIntegral ({#get CThostFtdcLimitPosiSField->OpenVolumeFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiSField->TotalVolumeFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiSField->OpenVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiSField->TotalVolume#} p) <*>
    (({#get CThostFtdcLimitPosiSField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiSField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiSField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiSField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcLimitPosiSField->OpenVolumeFrozen#} p (fromIntegral $ openVolumeFrozen (s :: CThostFtdcLimitPosiSField))
    {#set CThostFtdcLimitPosiSField->TotalVolumeFrozen#} p (fromIntegral $ totalVolumeFrozen (s :: CThostFtdcLimitPosiSField))
    {#set CThostFtdcLimitPosiSField->OpenVolume#} p (fromIntegral $ openVolume (s :: CThostFtdcLimitPosiSField))
    {#set CThostFtdcLimitPosiSField->TotalVolume#} p (fromIntegral $ totalVolume (s :: CThostFtdcLimitPosiSField))
    withText (exchangeID (s :: CThostFtdcLimitPosiSField)) ({#set CThostFtdcLimitPosiSField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcLimitPosiSField)) ({#set CThostFtdcLimitPosiSField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcLimitPosiSField)) ({#set CThostFtdcLimitPosiSField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLimitPosiSField)) ({#set CThostFtdcLimitPosiSField->BrokerID#} p)

instance Storable CThostFtdcQryBrokerLimitPosiField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerLimitPosiField#}
  alignment _ = {#alignof CThostFtdcQryBrokerLimitPosiField#}
  peek p =
    CThostFtdcQryBrokerLimitPosiField <$>
    (({#get CThostFtdcQryBrokerLimitPosiField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerLimitPosiField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerLimitPosiField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryBrokerLimitPosiField)) ({#set CThostFtdcQryBrokerLimitPosiField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryBrokerLimitPosiField)) ({#set CThostFtdcQryBrokerLimitPosiField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcQryBrokerLimitPosiField)) ({#set CThostFtdcQryBrokerLimitPosiField->BrokerID#} p)

instance Storable CThostFtdcInputQuoteActionField where
  sizeOf _ = {#sizeof CThostFtdcInputQuoteActionField#}
  alignment _ = {#alignof CThostFtdcInputQuoteActionField#}
  peek p =
    CThostFtdcInputQuoteActionField <$>
    (({#get CThostFtdcInputQuoteActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputQuoteActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcInputQuoteActionField->QuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteActionField->RequestID#} p) <*>
    (({#get CThostFtdcInputQuoteActionField->QuoteRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteActionField->QuoteActionRef#} p) <*>
    (({#get CThostFtdcInputQuoteActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->IPAddress#} p)
    withText (clientID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->ClientID#} p)
    withText (investUnitID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->InvestUnitID#} p)
    withText (instrumentID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->UserID#} p)
    {#set CThostFtdcInputQuoteActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcInputQuoteActionField))
    withText (quoteSysID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->QuoteSysID#} p)
    withText (exchangeID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->ExchangeID#} p)
    {#set CThostFtdcInputQuoteActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcInputQuoteActionField))
    {#set CThostFtdcInputQuoteActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcInputQuoteActionField))
    {#set CThostFtdcInputQuoteActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputQuoteActionField))
    withText (quoteRef (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->QuoteRef#} p)
    {#set CThostFtdcInputQuoteActionField->QuoteActionRef#} p (fromIntegral $ quoteActionRef (s :: CThostFtdcInputQuoteActionField))
    withText (investorID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputQuoteActionField)) ({#set CThostFtdcInputQuoteActionField->BrokerID#} p)

instance Storable CThostFtdcTransferBankToFutureRspField where
  sizeOf _ = {#sizeof CThostFtdcTransferBankToFutureRspField#}
  alignment _ = {#alignof CThostFtdcTransferBankToFutureRspField#}
  peek p =
    CThostFtdcTransferBankToFutureRspField <$>
    (({#get CThostFtdcTransferBankToFutureRspField->CurrencyCode#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTransferBankToFutureRspField->CustFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferBankToFutureRspField->TradeAmt#} p) <*>
    (({#get CThostFtdcTransferBankToFutureRspField->FutureAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferBankToFutureRspField->RetInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferBankToFutureRspField->RetCode#} p) >>= peekText)
  poke p s = do
    withText (currencyCode (s :: CThostFtdcTransferBankToFutureRspField)) ({#set CThostFtdcTransferBankToFutureRspField->CurrencyCode#} p)
    {#set CThostFtdcTransferBankToFutureRspField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcTransferBankToFutureRspField))
    {#set CThostFtdcTransferBankToFutureRspField->TradeAmt#} p (realToFrac $ tradeAmt (s :: CThostFtdcTransferBankToFutureRspField))
    withText (futureAccount (s :: CThostFtdcTransferBankToFutureRspField)) ({#set CThostFtdcTransferBankToFutureRspField->FutureAccount#} p)
    withText (retInfo (s :: CThostFtdcTransferBankToFutureRspField)) ({#set CThostFtdcTransferBankToFutureRspField->RetInfo#} p)
    withText (retCode (s :: CThostFtdcTransferBankToFutureRspField)) ({#set CThostFtdcTransferBankToFutureRspField->RetCode#} p)

instance Storable CThostFtdcQryExchangeSequenceField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeSequenceField#}
  alignment _ = {#alignof CThostFtdcQryExchangeSequenceField#}
  peek p =
    CThostFtdcQryExchangeSequenceField <$>
    (({#get CThostFtdcQryExchangeSequenceField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryExchangeSequenceField)) ({#set CThostFtdcQryExchangeSequenceField->ExchangeID#} p)

instance Storable CThostFtdcNotifySyncKeyField where
  sizeOf _ = {#sizeof CThostFtdcNotifySyncKeyField#}
  alignment _ = {#alignof CThostFtdcNotifySyncKeyField#}
  peek p =
    CThostFtdcNotifySyncKeyField <$>
    (({#get CThostFtdcNotifySyncKeyField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifySyncKeyField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifySyncKeyField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifySyncKeyField->RequestID#} p) <*>
    (({#get CThostFtdcNotifySyncKeyField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->Message#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifySyncKeyField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifySyncKeyField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifySyncKeyField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifySyncKeyField->PlateSerial#} p) <*>
    (({#get CThostFtdcNotifySyncKeyField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifySyncKeyField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->ErrorMsg#} p)
    {#set CThostFtdcNotifySyncKeyField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcNotifySyncKeyField))
    {#set CThostFtdcNotifySyncKeyField->TID#} p (fromIntegral $ tID (s :: CThostFtdcNotifySyncKeyField))
    {#set CThostFtdcNotifySyncKeyField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcNotifySyncKeyField))
    withText (operNo (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->DeviceID#} p)
    withText (message (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->Message#} p)
    withText (userID (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->UserID#} p)
    {#set CThostFtdcNotifySyncKeyField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcNotifySyncKeyField))
    {#set CThostFtdcNotifySyncKeyField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcNotifySyncKeyField))
    {#set CThostFtdcNotifySyncKeyField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcNotifySyncKeyField))
    {#set CThostFtdcNotifySyncKeyField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcNotifySyncKeyField))
    withText (tradingDay (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcNotifySyncKeyField)) ({#set CThostFtdcNotifySyncKeyField->TradeCode#} p)

instance Storable CThostFtdcInputStockDisposalField where
  sizeOf _ = {#sizeof CThostFtdcInputStockDisposalField#}
  alignment _ = {#alignof CThostFtdcInputStockDisposalField#}
  peek p =
    CThostFtdcInputStockDisposalField <$>
    (({#get CThostFtdcInputStockDisposalField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputStockDisposalField->StockDisposalType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputStockDisposalField->Volume#} p) <*>
    (({#get CThostFtdcInputStockDisposalField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalField->StockDisposalRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcInputStockDisposalField)) ({#set CThostFtdcInputStockDisposalField->ExchangeID#} p)
    {#set CThostFtdcInputStockDisposalField->StockDisposalType#} p (castCharToCChar $ stockDisposalType (s :: CThostFtdcInputStockDisposalField))
    {#set CThostFtdcInputStockDisposalField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcInputStockDisposalField))
    withText (instrumentID (s :: CThostFtdcInputStockDisposalField)) ({#set CThostFtdcInputStockDisposalField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcInputStockDisposalField)) ({#set CThostFtdcInputStockDisposalField->UserID#} p)
    withText (stockDisposalRef (s :: CThostFtdcInputStockDisposalField)) ({#set CThostFtdcInputStockDisposalField->StockDisposalRef#} p)
    withText (investorID (s :: CThostFtdcInputStockDisposalField)) ({#set CThostFtdcInputStockDisposalField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputStockDisposalField)) ({#set CThostFtdcInputStockDisposalField->BrokerID#} p)

instance Storable CThostFtdcBatchOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcBatchOrderActionField#}
  alignment _ = {#alignof CThostFtdcBatchOrderActionField#}
  peek p =
    CThostFtdcBatchOrderActionField <$>
    (({#get CThostFtdcBatchOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcBatchOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcBatchOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcBatchOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcBatchOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->ActionDate#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcBatchOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBatchOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBatchOrderActionField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBatchOrderActionField->OrderActionRef#} p) <*>
    (({#get CThostFtdcBatchOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcBatchOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->InvestUnitID#} p)
    withText (statusMsg (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->StatusMsg#} p)
    withText (userID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->UserID#} p)
    {#set CThostFtdcBatchOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcBatchOrderActionField))
    withText (businessUnit (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->ActionLocalID#} p)
    {#set CThostFtdcBatchOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcBatchOrderActionField))
    withText (traderID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->ActionDate#} p)
    withText (exchangeID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->ExchangeID#} p)
    {#set CThostFtdcBatchOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcBatchOrderActionField))
    {#set CThostFtdcBatchOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcBatchOrderActionField))
    {#set CThostFtdcBatchOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcBatchOrderActionField))
    {#set CThostFtdcBatchOrderActionField->OrderActionRef#} p (fromIntegral $ orderActionRef (s :: CThostFtdcBatchOrderActionField))
    withText (investorID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcBatchOrderActionField)) ({#set CThostFtdcBatchOrderActionField->BrokerID#} p)

instance Storable CThostFtdcDisseminationField where
  sizeOf _ = {#sizeof CThostFtdcDisseminationField#}
  alignment _ = {#alignof CThostFtdcDisseminationField#}
  peek p =
    CThostFtdcDisseminationField <$>
    fmap fromIntegral ({#get CThostFtdcDisseminationField->SequenceNo#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDisseminationField->SequenceSeries#} p)
  poke p s = do
    {#set CThostFtdcDisseminationField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcDisseminationField))
    {#set CThostFtdcDisseminationField->SequenceSeries#} p (fromIntegral $ sequenceSeries (s :: CThostFtdcDisseminationField))

instance Storable CThostFtdcLimitAmountParamField where
  sizeOf _ = {#sizeof CThostFtdcLimitAmountParamField#}
  alignment _ = {#alignof CThostFtdcLimitAmountParamField#}
  peek p =
    CThostFtdcLimitAmountParamField <$>
    fmap realToFrac ({#get CThostFtdcLimitAmountParamField->LongAmount#} p) <*>
    (({#get CThostFtdcLimitAmountParamField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitAmountParamField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitAmountParamField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcLimitAmountParamField->InvestorRange#} p)
  poke p s = do
    {#set CThostFtdcLimitAmountParamField->LongAmount#} p (realToFrac $ longAmount (s :: CThostFtdcLimitAmountParamField))
    withText (exchangeID (s :: CThostFtdcLimitAmountParamField)) ({#set CThostFtdcLimitAmountParamField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcLimitAmountParamField)) ({#set CThostFtdcLimitAmountParamField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLimitAmountParamField)) ({#set CThostFtdcLimitAmountParamField->BrokerID#} p)
    {#set CThostFtdcLimitAmountParamField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcLimitAmountParamField))

instance Storable CThostFtdcSuperUserField where
  sizeOf _ = {#sizeof CThostFtdcSuperUserField#}
  alignment _ = {#alignof CThostFtdcSuperUserField#}
  peek p =
    CThostFtdcSuperUserField <$>
    fmap fromIntegral ({#get CThostFtdcSuperUserField->IsActive#} p) <*>
    (({#get CThostFtdcSuperUserField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcSuperUserField->UserName#} p) >>= peekText) <*>
    (({#get CThostFtdcSuperUserField->UserID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSuperUserField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcSuperUserField))
    withText (password (s :: CThostFtdcSuperUserField)) ({#set CThostFtdcSuperUserField->Password#} p)
    withText (userName (s :: CThostFtdcSuperUserField)) ({#set CThostFtdcSuperUserField->UserName#} p)
    withText (userID (s :: CThostFtdcSuperUserField)) ({#set CThostFtdcSuperUserField->UserID#} p)

instance Storable CThostFtdcMarketDataLastMatchField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataLastMatchField#}
  alignment _ = {#alignof CThostFtdcMarketDataLastMatchField#}
  peek p =
    CThostFtdcMarketDataLastMatchField <$>
    fmap realToFrac ({#get CThostFtdcMarketDataLastMatchField->OpenInterest#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataLastMatchField->Turnover#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataLastMatchField->Volume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataLastMatchField->LastPrice#} p)
  poke p s = do
    {#set CThostFtdcMarketDataLastMatchField->OpenInterest#} p (realToFrac $ openInterest (s :: CThostFtdcMarketDataLastMatchField))
    {#set CThostFtdcMarketDataLastMatchField->Turnover#} p (realToFrac $ turnover (s :: CThostFtdcMarketDataLastMatchField))
    {#set CThostFtdcMarketDataLastMatchField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcMarketDataLastMatchField))
    {#set CThostFtdcMarketDataLastMatchField->LastPrice#} p (realToFrac $ lastPrice (s :: CThostFtdcMarketDataLastMatchField))

instance Storable CThostFtdcMarketDataBestPriceField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataBestPriceField#}
  alignment _ = {#alignof CThostFtdcMarketDataBestPriceField#}
  peek p =
    CThostFtdcMarketDataBestPriceField <$>
    fmap fromIntegral ({#get CThostFtdcMarketDataBestPriceField->AskVolume1#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBestPriceField->AskPrice1#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataBestPriceField->BidVolume1#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBestPriceField->BidPrice1#} p)
  poke p s = do
    {#set CThostFtdcMarketDataBestPriceField->AskVolume1#} p (fromIntegral $ askVolume1 (s :: CThostFtdcMarketDataBestPriceField))
    {#set CThostFtdcMarketDataBestPriceField->AskPrice1#} p (realToFrac $ askPrice1 (s :: CThostFtdcMarketDataBestPriceField))
    {#set CThostFtdcMarketDataBestPriceField->BidVolume1#} p (fromIntegral $ bidVolume1 (s :: CThostFtdcMarketDataBestPriceField))
    {#set CThostFtdcMarketDataBestPriceField->BidPrice1#} p (realToFrac $ bidPrice1 (s :: CThostFtdcMarketDataBestPriceField))

instance Storable CThostFtdcRspFutureSignOutField where
  sizeOf _ = {#sizeof CThostFtdcRspFutureSignOutField#}
  alignment _ = {#alignof CThostFtdcRspFutureSignOutField#}
  peek p =
    CThostFtdcRspFutureSignOutField <$>
    (({#get CThostFtdcRspFutureSignOutField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignOutField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignOutField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignOutField->RequestID#} p) <*>
    (({#get CThostFtdcRspFutureSignOutField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignOutField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignOutField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspFutureSignOutField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignOutField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspFutureSignOutField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignOutField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->ErrorMsg#} p)
    {#set CThostFtdcRspFutureSignOutField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspFutureSignOutField))
    {#set CThostFtdcRspFutureSignOutField->TID#} p (fromIntegral $ tID (s :: CThostFtdcRspFutureSignOutField))
    {#set CThostFtdcRspFutureSignOutField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcRspFutureSignOutField))
    withText (operNo (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->DeviceID#} p)
    withText (currencyID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->CurrencyID#} p)
    withText (digest (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->Digest#} p)
    withText (userID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->UserID#} p)
    {#set CThostFtdcRspFutureSignOutField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcRspFutureSignOutField))
    {#set CThostFtdcRspFutureSignOutField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspFutureSignOutField))
    {#set CThostFtdcRspFutureSignOutField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspFutureSignOutField))
    {#set CThostFtdcRspFutureSignOutField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspFutureSignOutField))
    withText (tradingDay (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspFutureSignOutField)) ({#set CThostFtdcRspFutureSignOutField->TradeCode#} p)

instance Storable CThostFtdcReqCancelAccountField where
  sizeOf _ = {#sizeof CThostFtdcReqCancelAccountField#}
  alignment _ = {#alignof CThostFtdcReqCancelAccountField#}
  peek p =
    CThostFtdcReqCancelAccountField <$>
    (({#get CThostFtdcReqCancelAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqCancelAccountField->TID#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->Digest#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->CashExchangeCode#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->VerifyCertNoFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqCancelAccountField->InstallID#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->MoneyAccountStatus#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->EMail#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->Fax#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->MobilePhone#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->Address#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->CustType#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->CountryCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->Gender#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqCancelAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqCancelAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqCancelAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqCancelAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqCancelAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->UserID#} p)
    {#set CThostFtdcReqCancelAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqCancelAccountField))
    withText (operNo (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->OperNo#} p)
    {#set CThostFtdcReqCancelAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcReqCancelAccountField))
    {#set CThostFtdcReqCancelAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcReqCancelAccountField))
    withText (bankSecuAcc (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcReqCancelAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcReqCancelAccountField))
    withText (deviceID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->DeviceID#} p)
    {#set CThostFtdcReqCancelAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcReqCancelAccountField))
    withText (digest (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->Digest#} p)
    {#set CThostFtdcReqCancelAccountField->CashExchangeCode#} p (castCharToCChar $ cashExchangeCode (s :: CThostFtdcReqCancelAccountField))
    withText (currencyID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->CurrencyID#} p)
    {#set CThostFtdcReqCancelAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcReqCancelAccountField))
    {#set CThostFtdcReqCancelAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqCancelAccountField))
    withText (password (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BankAccount#} p)
    {#set CThostFtdcReqCancelAccountField->MoneyAccountStatus#} p (castCharToCChar $ moneyAccountStatus (s :: CThostFtdcReqCancelAccountField))
    withText (eMail (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->EMail#} p)
    withText (fax (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->Fax#} p)
    withText (mobilePhone (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->MobilePhone#} p)
    withText (telephone (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->Telephone#} p)
    withText (zipCode (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->ZipCode#} p)
    withText (address (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->Address#} p)
    {#set CThostFtdcReqCancelAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqCancelAccountField))
    withText (countryCode (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->CountryCode#} p)
    {#set CThostFtdcReqCancelAccountField->Gender#} p (castCharToCChar $ gender (s :: CThostFtdcReqCancelAccountField))
    withText (identifiedCardNo (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqCancelAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqCancelAccountField))
    withText (customerName (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->CustomerName#} p)
    {#set CThostFtdcReqCancelAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqCancelAccountField))
    {#set CThostFtdcReqCancelAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqCancelAccountField))
    {#set CThostFtdcReqCancelAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqCancelAccountField))
    withText (tradingDay (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqCancelAccountField)) ({#set CThostFtdcReqCancelAccountField->TradeCode#} p)

instance Storable CThostFtdcInvestorLevelField where
  sizeOf _ = {#sizeof CThostFtdcInvestorLevelField#}
  alignment _ = {#alignof CThostFtdcInvestorLevelField#}
  peek p =
    CThostFtdcInvestorLevelField <$>
    fmap castCCharToChar ({#get CThostFtdcInvestorLevelField->LevelType#} p) <*>
    (({#get CThostFtdcInvestorLevelField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorLevelField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorLevelField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorLevelField->LevelType#} p (castCharToCChar $ levelType (s :: CThostFtdcInvestorLevelField))
    withText (exchangeID (s :: CThostFtdcInvestorLevelField)) ({#set CThostFtdcInvestorLevelField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcInvestorLevelField)) ({#set CThostFtdcInvestorLevelField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInvestorLevelField)) ({#set CThostFtdcInvestorLevelField->BrokerID#} p)

instance Storable CThostFtdcExchangeQuoteActionField where
  sizeOf _ = {#sizeof CThostFtdcExchangeQuoteActionField#}
  alignment _ = {#alignof CThostFtdcExchangeQuoteActionField#}
  peek p =
    CThostFtdcExchangeQuoteActionField <$>
    (({#get CThostFtdcExchangeQuoteActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcExchangeQuoteActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->QuoteLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeQuoteActionField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeQuoteActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->ActionDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeQuoteActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcExchangeQuoteActionField->QuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeQuoteActionField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->BranchID#} p)
    withText (macAddress (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->IPAddress#} p)
    withText (userID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->UserID#} p)
    {#set CThostFtdcExchangeQuoteActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcExchangeQuoteActionField))
    withText (businessUnit (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->ActionLocalID#} p)
    withText (quoteLocalID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->QuoteLocalID#} p)
    {#set CThostFtdcExchangeQuoteActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeQuoteActionField))
    withText (traderID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->ActionDate#} p)
    {#set CThostFtdcExchangeQuoteActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcExchangeQuoteActionField))
    withText (quoteSysID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->QuoteSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeQuoteActionField)) ({#set CThostFtdcExchangeQuoteActionField->ExchangeID#} p)

instance Storable CThostFtdcExchangeOrderInsertErrorField where
  sizeOf _ = {#sizeof CThostFtdcExchangeOrderInsertErrorField#}
  alignment _ = {#alignof CThostFtdcExchangeOrderInsertErrorField#}
  peek p =
    CThostFtdcExchangeOrderInsertErrorField <$>
    (({#get CThostFtdcExchangeOrderInsertErrorField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderInsertErrorField->ErrorID#} p) <*>
    (({#get CThostFtdcExchangeOrderInsertErrorField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderInsertErrorField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeOrderInsertErrorField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderInsertErrorField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderInsertErrorField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcExchangeOrderInsertErrorField)) ({#set CThostFtdcExchangeOrderInsertErrorField->ErrorMsg#} p)
    {#set CThostFtdcExchangeOrderInsertErrorField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcExchangeOrderInsertErrorField))
    withText (orderLocalID (s :: CThostFtdcExchangeOrderInsertErrorField)) ({#set CThostFtdcExchangeOrderInsertErrorField->OrderLocalID#} p)
    {#set CThostFtdcExchangeOrderInsertErrorField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeOrderInsertErrorField))
    withText (traderID (s :: CThostFtdcExchangeOrderInsertErrorField)) ({#set CThostFtdcExchangeOrderInsertErrorField->TraderID#} p)
    withText (participantID (s :: CThostFtdcExchangeOrderInsertErrorField)) ({#set CThostFtdcExchangeOrderInsertErrorField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeOrderInsertErrorField)) ({#set CThostFtdcExchangeOrderInsertErrorField->ExchangeID#} p)

instance Storable CThostFtdcDepthMarketDataField where
  sizeOf _ = {#sizeof CThostFtdcDepthMarketDataField#}
  alignment _ = {#alignof CThostFtdcDepthMarketDataField#}
  peek p =
    CThostFtdcDepthMarketDataField <$>
    (({#get CThostFtdcDepthMarketDataField->ActionDay#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->AveragePrice#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->AskVolume5#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->AskPrice5#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->BidVolume5#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->BidPrice5#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->AskVolume4#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->AskPrice4#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->BidVolume4#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->BidPrice4#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->AskVolume3#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->AskPrice3#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->BidVolume3#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->BidPrice3#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->AskVolume2#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->AskPrice2#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->BidVolume2#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->BidPrice2#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->AskVolume1#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->AskPrice1#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->BidVolume1#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->BidPrice1#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->UpdateMillisec#} p) <*>
    (({#get CThostFtdcDepthMarketDataField->UpdateTime#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->CurrDelta#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->PreDelta#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->LowerLimitPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->UpperLimitPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->SettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->ClosePrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->OpenInterest#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->Turnover#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDepthMarketDataField->Volume#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->LowestPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->HighestPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->OpenPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->PreOpenInterest#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->PreClosePrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->PreSettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepthMarketDataField->LastPrice#} p) <*>
    (({#get CThostFtdcDepthMarketDataField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcDepthMarketDataField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcDepthMarketDataField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcDepthMarketDataField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (actionDay (s :: CThostFtdcDepthMarketDataField)) ({#set CThostFtdcDepthMarketDataField->ActionDay#} p)
    {#set CThostFtdcDepthMarketDataField->AveragePrice#} p (realToFrac $ averagePrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskVolume5#} p (fromIntegral $ askVolume5 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskPrice5#} p (realToFrac $ askPrice5 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidVolume5#} p (fromIntegral $ bidVolume5 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidPrice5#} p (realToFrac $ bidPrice5 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskVolume4#} p (fromIntegral $ askVolume4 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskPrice4#} p (realToFrac $ askPrice4 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidVolume4#} p (fromIntegral $ bidVolume4 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidPrice4#} p (realToFrac $ bidPrice4 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskVolume3#} p (fromIntegral $ askVolume3 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskPrice3#} p (realToFrac $ askPrice3 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidVolume3#} p (fromIntegral $ bidVolume3 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidPrice3#} p (realToFrac $ bidPrice3 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskVolume2#} p (fromIntegral $ askVolume2 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskPrice2#} p (realToFrac $ askPrice2 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidVolume2#} p (fromIntegral $ bidVolume2 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidPrice2#} p (realToFrac $ bidPrice2 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskVolume1#} p (fromIntegral $ askVolume1 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->AskPrice1#} p (realToFrac $ askPrice1 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidVolume1#} p (fromIntegral $ bidVolume1 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->BidPrice1#} p (realToFrac $ bidPrice1 (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->UpdateMillisec#} p (fromIntegral $ updateMillisec (s :: CThostFtdcDepthMarketDataField))
    withText (updateTime (s :: CThostFtdcDepthMarketDataField)) ({#set CThostFtdcDepthMarketDataField->UpdateTime#} p)
    {#set CThostFtdcDepthMarketDataField->CurrDelta#} p (realToFrac $ currDelta (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->PreDelta#} p (realToFrac $ preDelta (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->LowerLimitPrice#} p (realToFrac $ lowerLimitPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->UpperLimitPrice#} p (realToFrac $ upperLimitPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->SettlementPrice#} p (realToFrac $ settlementPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->ClosePrice#} p (realToFrac $ closePrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->OpenInterest#} p (realToFrac $ openInterest (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->Turnover#} p (realToFrac $ turnover (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->LowestPrice#} p (realToFrac $ lowestPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->HighestPrice#} p (realToFrac $ highestPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->OpenPrice#} p (realToFrac $ openPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->PreOpenInterest#} p (realToFrac $ preOpenInterest (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->PreClosePrice#} p (realToFrac $ preClosePrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->PreSettlementPrice#} p (realToFrac $ preSettlementPrice (s :: CThostFtdcDepthMarketDataField))
    {#set CThostFtdcDepthMarketDataField->LastPrice#} p (realToFrac $ lastPrice (s :: CThostFtdcDepthMarketDataField))
    withText (exchangeInstID (s :: CThostFtdcDepthMarketDataField)) ({#set CThostFtdcDepthMarketDataField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcDepthMarketDataField)) ({#set CThostFtdcDepthMarketDataField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcDepthMarketDataField)) ({#set CThostFtdcDepthMarketDataField->InstrumentID#} p)
    withText (tradingDay (s :: CThostFtdcDepthMarketDataField)) ({#set CThostFtdcDepthMarketDataField->TradingDay#} p)

instance Storable CThostFtdcMarketDataExchangeField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataExchangeField#}
  alignment _ = {#alignof CThostFtdcMarketDataExchangeField#}
  peek p =
    CThostFtdcMarketDataExchangeField <$>
    (({#get CThostFtdcMarketDataExchangeField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcMarketDataExchangeField)) ({#set CThostFtdcMarketDataExchangeField->ExchangeID#} p)

instance Storable CThostFtdcQryExchangeExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeExecOrderField#}
  alignment _ = {#alignof CThostFtdcQryExchangeExecOrderField#}
  peek p =
    CThostFtdcQryExchangeExecOrderField <$>
    (({#get CThostFtdcQryExchangeExecOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeExecOrderField)) ({#set CThostFtdcQryExchangeExecOrderField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeExecOrderField)) ({#set CThostFtdcQryExchangeExecOrderField->ExchangeID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryExchangeExecOrderField)) ({#set CThostFtdcQryExchangeExecOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeExecOrderField)) ({#set CThostFtdcQryExchangeExecOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeExecOrderField)) ({#set CThostFtdcQryExchangeExecOrderField->ParticipantID#} p)

instance Storable CThostFtdcInstrumentTradingRightField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentTradingRightField#}
  alignment _ = {#alignof CThostFtdcInstrumentTradingRightField#}
  peek p =
    CThostFtdcInstrumentTradingRightField <$>
    fmap castCCharToChar ({#get CThostFtdcInstrumentTradingRightField->BizType#} p) <*>
    (({#get CThostFtdcInstrumentTradingRightField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentTradingRightField->TradingRight#} p) <*>
    (({#get CThostFtdcInstrumentTradingRightField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentTradingRightField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentTradingRightField->InvestorRange#} p) <*>
    (({#get CThostFtdcInstrumentTradingRightField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstrumentTradingRightField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcInstrumentTradingRightField))
    withText (exchangeID (s :: CThostFtdcInstrumentTradingRightField)) ({#set CThostFtdcInstrumentTradingRightField->ExchangeID#} p)
    {#set CThostFtdcInstrumentTradingRightField->TradingRight#} p (castCharToCChar $ tradingRight (s :: CThostFtdcInstrumentTradingRightField))
    withText (investorID (s :: CThostFtdcInstrumentTradingRightField)) ({#set CThostFtdcInstrumentTradingRightField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInstrumentTradingRightField)) ({#set CThostFtdcInstrumentTradingRightField->BrokerID#} p)
    {#set CThostFtdcInstrumentTradingRightField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcInstrumentTradingRightField))
    withText (instrumentID (s :: CThostFtdcInstrumentTradingRightField)) ({#set CThostFtdcInstrumentTradingRightField->InstrumentID#} p)

instance Storable CThostFtdcQryBatchOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryBatchOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryBatchOrderActionField#}
  peek p =
    CThostFtdcQryBatchOrderActionField <$>
    (({#get CThostFtdcQryBatchOrderActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBatchOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBatchOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryBatchOrderActionField)) ({#set CThostFtdcQryBatchOrderActionField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryBatchOrderActionField)) ({#set CThostFtdcQryBatchOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryBatchOrderActionField)) ({#set CThostFtdcQryBatchOrderActionField->BrokerID#} p)

instance Storable CThostFtdcExchangeOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcExchangeOrderActionField#}
  alignment _ = {#alignof CThostFtdcExchangeOrderActionField#}
  peek p =
    CThostFtdcExchangeOrderActionField <$>
    (({#get CThostFtdcExchangeOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcExchangeOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->ActionDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderActionField->VolumeChange#} p) <*>
    fmap realToFrac ({#get CThostFtdcExchangeOrderActionField->LimitPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcExchangeOrderActionField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->BranchID#} p)
    withText (userID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->UserID#} p)
    {#set CThostFtdcExchangeOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcExchangeOrderActionField))
    withText (businessUnit (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->ActionLocalID#} p)
    withText (orderLocalID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->OrderLocalID#} p)
    {#set CThostFtdcExchangeOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeOrderActionField))
    withText (traderID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->ActionDate#} p)
    {#set CThostFtdcExchangeOrderActionField->VolumeChange#} p (fromIntegral $ volumeChange (s :: CThostFtdcExchangeOrderActionField))
    {#set CThostFtdcExchangeOrderActionField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcExchangeOrderActionField))
    {#set CThostFtdcExchangeOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcExchangeOrderActionField))
    withText (orderSysID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeOrderActionField)) ({#set CThostFtdcExchangeOrderActionField->ExchangeID#} p)

instance Storable CThostFtdcQueryBrokerDepositField where
  sizeOf _ = {#sizeof CThostFtdcQueryBrokerDepositField#}
  alignment _ = {#alignof CThostFtdcQueryBrokerDepositField#}
  peek p =
    CThostFtdcQueryBrokerDepositField <$>
    (({#get CThostFtdcQueryBrokerDepositField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQueryBrokerDepositField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQueryBrokerDepositField)) ({#set CThostFtdcQueryBrokerDepositField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcQueryBrokerDepositField)) ({#set CThostFtdcQueryBrokerDepositField->BrokerID#} p)

instance Storable CThostFtdcTransferFutureToBankRspField where
  sizeOf _ = {#sizeof CThostFtdcTransferFutureToBankRspField#}
  alignment _ = {#alignof CThostFtdcTransferFutureToBankRspField#}
  peek p =
    CThostFtdcTransferFutureToBankRspField <$>
    (({#get CThostFtdcTransferFutureToBankRspField->CurrencyCode#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTransferFutureToBankRspField->CustFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferFutureToBankRspField->TradeAmt#} p) <*>
    (({#get CThostFtdcTransferFutureToBankRspField->FutureAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferFutureToBankRspField->RetInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferFutureToBankRspField->RetCode#} p) >>= peekText)
  poke p s = do
    withText (currencyCode (s :: CThostFtdcTransferFutureToBankRspField)) ({#set CThostFtdcTransferFutureToBankRspField->CurrencyCode#} p)
    {#set CThostFtdcTransferFutureToBankRspField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcTransferFutureToBankRspField))
    {#set CThostFtdcTransferFutureToBankRspField->TradeAmt#} p (realToFrac $ tradeAmt (s :: CThostFtdcTransferFutureToBankRspField))
    withText (futureAccount (s :: CThostFtdcTransferFutureToBankRspField)) ({#set CThostFtdcTransferFutureToBankRspField->FutureAccount#} p)
    withText (retInfo (s :: CThostFtdcTransferFutureToBankRspField)) ({#set CThostFtdcTransferFutureToBankRspField->RetInfo#} p)
    withText (retCode (s :: CThostFtdcTransferFutureToBankRspField)) ({#set CThostFtdcTransferFutureToBankRspField->RetCode#} p)

instance Storable CThostFtdcQrySyncStatusField where
  sizeOf _ = {#sizeof CThostFtdcQrySyncStatusField#}
  alignment _ = {#alignof CThostFtdcQrySyncStatusField#}
  peek p =
    CThostFtdcQrySyncStatusField <$>
    (({#get CThostFtdcQrySyncStatusField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (tradingDay (s :: CThostFtdcQrySyncStatusField)) ({#set CThostFtdcQrySyncStatusField->TradingDay#} p)

instance Storable CThostFtdcMulticastGroupInfoField where
  sizeOf _ = {#sizeof CThostFtdcMulticastGroupInfoField#}
  alignment _ = {#alignof CThostFtdcMulticastGroupInfoField#}
  peek p =
    CThostFtdcMulticastGroupInfoField <$>
    (({#get CThostFtdcMulticastGroupInfoField->SourceIP#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcMulticastGroupInfoField->GroupPort#} p) <*>
    (({#get CThostFtdcMulticastGroupInfoField->GroupIP#} p) >>= peekText)
  poke p s = do
    withText (sourceIP (s :: CThostFtdcMulticastGroupInfoField)) ({#set CThostFtdcMulticastGroupInfoField->SourceIP#} p)
    {#set CThostFtdcMulticastGroupInfoField->GroupPort#} p (fromIntegral $ groupPort (s :: CThostFtdcMulticastGroupInfoField))
    withText (groupIP (s :: CThostFtdcMulticastGroupInfoField)) ({#set CThostFtdcMulticastGroupInfoField->GroupIP#} p)

instance Storable CThostFtdcLoginForbiddenUserField where
  sizeOf _ = {#sizeof CThostFtdcLoginForbiddenUserField#}
  alignment _ = {#alignof CThostFtdcLoginForbiddenUserField#}
  peek p =
    CThostFtdcLoginForbiddenUserField <$>
    (({#get CThostFtdcLoginForbiddenUserField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginForbiddenUserField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginForbiddenUserField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (iPAddress (s :: CThostFtdcLoginForbiddenUserField)) ({#set CThostFtdcLoginForbiddenUserField->IPAddress#} p)
    withText (userID (s :: CThostFtdcLoginForbiddenUserField)) ({#set CThostFtdcLoginForbiddenUserField->UserID#} p)
    withText (brokerID (s :: CThostFtdcLoginForbiddenUserField)) ({#set CThostFtdcLoginForbiddenUserField->BrokerID#} p)

instance Storable CThostFtdcBrokerTradingParamsField where
  sizeOf _ = {#sizeof CThostFtdcBrokerTradingParamsField#}
  alignment _ = {#alignof CThostFtdcBrokerTradingParamsField#}
  peek p =
    CThostFtdcBrokerTradingParamsField <$>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingParamsField->OptionRoyaltyPriceType#} p) <*>
    (({#get CThostFtdcBrokerTradingParamsField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingParamsField->AvailIncludeCloseProfit#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingParamsField->Algorithm#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingParamsField->MarginPriceType#} p) <*>
    (({#get CThostFtdcBrokerTradingParamsField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerTradingParamsField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerTradingParamsField->OptionRoyaltyPriceType#} p (castCharToCChar $ optionRoyaltyPriceType (s :: CThostFtdcBrokerTradingParamsField))
    withText (currencyID (s :: CThostFtdcBrokerTradingParamsField)) ({#set CThostFtdcBrokerTradingParamsField->CurrencyID#} p)
    {#set CThostFtdcBrokerTradingParamsField->AvailIncludeCloseProfit#} p (castCharToCChar $ availIncludeCloseProfit (s :: CThostFtdcBrokerTradingParamsField))
    {#set CThostFtdcBrokerTradingParamsField->Algorithm#} p (castCharToCChar $ algorithm (s :: CThostFtdcBrokerTradingParamsField))
    {#set CThostFtdcBrokerTradingParamsField->MarginPriceType#} p (castCharToCChar $ marginPriceType (s :: CThostFtdcBrokerTradingParamsField))
    withText (investorID (s :: CThostFtdcBrokerTradingParamsField)) ({#set CThostFtdcBrokerTradingParamsField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcBrokerTradingParamsField)) ({#set CThostFtdcBrokerTradingParamsField->BrokerID#} p)

instance Storable CThostFtdcMarketDataUpdateTimeField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataUpdateTimeField#}
  alignment _ = {#alignof CThostFtdcMarketDataUpdateTimeField#}
  peek p =
    CThostFtdcMarketDataUpdateTimeField <$>
    (({#get CThostFtdcMarketDataUpdateTimeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcMarketDataUpdateTimeField->ActionDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataUpdateTimeField->UpdateMillisec#} p) <*>
    (({#get CThostFtdcMarketDataUpdateTimeField->UpdateTime#} p) >>= peekText) <*>
    (({#get CThostFtdcMarketDataUpdateTimeField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcMarketDataUpdateTimeField)) ({#set CThostFtdcMarketDataUpdateTimeField->ExchangeID#} p)
    withText (actionDay (s :: CThostFtdcMarketDataUpdateTimeField)) ({#set CThostFtdcMarketDataUpdateTimeField->ActionDay#} p)
    {#set CThostFtdcMarketDataUpdateTimeField->UpdateMillisec#} p (fromIntegral $ updateMillisec (s :: CThostFtdcMarketDataUpdateTimeField))
    withText (updateTime (s :: CThostFtdcMarketDataUpdateTimeField)) ({#set CThostFtdcMarketDataUpdateTimeField->UpdateTime#} p)
    withText (instrumentID (s :: CThostFtdcMarketDataUpdateTimeField)) ({#set CThostFtdcMarketDataUpdateTimeField->InstrumentID#} p)

instance Storable CThostFtdcInputDesignateField where
  sizeOf _ = {#sizeof CThostFtdcInputDesignateField#}
  alignment _ = {#alignof CThostFtdcInputDesignateField#}
  peek p =
    CThostFtdcInputDesignateField <$>
    (({#get CThostFtdcInputDesignateField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputDesignateField->DesignateType#} p) <*>
    (({#get CThostFtdcInputDesignateField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputDesignateField->DesignateRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputDesignateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputDesignateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcInputDesignateField)) ({#set CThostFtdcInputDesignateField->ExchangeID#} p)
    {#set CThostFtdcInputDesignateField->DesignateType#} p (castCharToCChar $ designateType (s :: CThostFtdcInputDesignateField))
    withText (userID (s :: CThostFtdcInputDesignateField)) ({#set CThostFtdcInputDesignateField->UserID#} p)
    withText (designateRef (s :: CThostFtdcInputDesignateField)) ({#set CThostFtdcInputDesignateField->DesignateRef#} p)
    withText (investorID (s :: CThostFtdcInputDesignateField)) ({#set CThostFtdcInputDesignateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputDesignateField)) ({#set CThostFtdcInputDesignateField->BrokerID#} p)

instance Storable CThostFtdcForceUserLogoutField where
  sizeOf _ = {#sizeof CThostFtdcForceUserLogoutField#}
  alignment _ = {#alignof CThostFtdcForceUserLogoutField#}
  peek p =
    CThostFtdcForceUserLogoutField <$>
    (({#get CThostFtdcForceUserLogoutField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcForceUserLogoutField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcForceUserLogoutField)) ({#set CThostFtdcForceUserLogoutField->UserID#} p)
    withText (brokerID (s :: CThostFtdcForceUserLogoutField)) ({#set CThostFtdcForceUserLogoutField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeQuoteActionField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeQuoteActionField#}
  alignment _ = {#alignof CThostFtdcQryExchangeQuoteActionField#}
  peek p =
    CThostFtdcQryExchangeQuoteActionField <$>
    (({#get CThostFtdcQryExchangeQuoteActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteActionField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeQuoteActionField)) ({#set CThostFtdcQryExchangeQuoteActionField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeQuoteActionField)) ({#set CThostFtdcQryExchangeQuoteActionField->ExchangeID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeQuoteActionField)) ({#set CThostFtdcQryExchangeQuoteActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeQuoteActionField)) ({#set CThostFtdcQryExchangeQuoteActionField->ParticipantID#} p)

instance Storable CThostFtdcForQuoteParamField where
  sizeOf _ = {#sizeof CThostFtdcForQuoteParamField#}
  alignment _ = {#alignof CThostFtdcForQuoteParamField#}
  peek p =
    CThostFtdcForQuoteParamField <$>
    fmap realToFrac ({#get CThostFtdcForQuoteParamField->PriceInterval#} p) <*>
    fmap realToFrac ({#get CThostFtdcForQuoteParamField->LastPrice#} p) <*>
    (({#get CThostFtdcForQuoteParamField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteParamField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteParamField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcForQuoteParamField->PriceInterval#} p (realToFrac $ priceInterval (s :: CThostFtdcForQuoteParamField))
    {#set CThostFtdcForQuoteParamField->LastPrice#} p (realToFrac $ lastPrice (s :: CThostFtdcForQuoteParamField))
    withText (exchangeID (s :: CThostFtdcForQuoteParamField)) ({#set CThostFtdcForQuoteParamField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcForQuoteParamField)) ({#set CThostFtdcForQuoteParamField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcForQuoteParamField)) ({#set CThostFtdcForQuoteParamField->BrokerID#} p)

instance Storable CThostFtdcOptionInstrTradingRightField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrTradingRightField#}
  alignment _ = {#alignof CThostFtdcOptionInstrTradingRightField#}
  peek p =
    CThostFtdcOptionInstrTradingRightField <$>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrTradingRightField->HedgeFlag#} p) <*>
    (({#get CThostFtdcOptionInstrTradingRightField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrTradingRightField->TradingRight#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrTradingRightField->Direction#} p) <*>
    (({#get CThostFtdcOptionInstrTradingRightField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrTradingRightField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrTradingRightField->InvestorRange#} p) <*>
    (({#get CThostFtdcOptionInstrTradingRightField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcOptionInstrTradingRightField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcOptionInstrTradingRightField))
    withText (exchangeID (s :: CThostFtdcOptionInstrTradingRightField)) ({#set CThostFtdcOptionInstrTradingRightField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrTradingRightField->TradingRight#} p (castCharToCChar $ tradingRight (s :: CThostFtdcOptionInstrTradingRightField))
    {#set CThostFtdcOptionInstrTradingRightField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcOptionInstrTradingRightField))
    withText (investorID (s :: CThostFtdcOptionInstrTradingRightField)) ({#set CThostFtdcOptionInstrTradingRightField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrTradingRightField)) ({#set CThostFtdcOptionInstrTradingRightField->BrokerID#} p)
    {#set CThostFtdcOptionInstrTradingRightField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcOptionInstrTradingRightField))
    withText (instrumentID (s :: CThostFtdcOptionInstrTradingRightField)) ({#set CThostFtdcOptionInstrTradingRightField->InstrumentID#} p)

instance Storable CThostFtdcBrokerTradingAlgosField where
  sizeOf _ = {#sizeof CThostFtdcBrokerTradingAlgosField#}
  alignment _ = {#alignof CThostFtdcBrokerTradingAlgosField#}
  peek p =
    CThostFtdcBrokerTradingAlgosField <$>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingAlgosField->HandleTradingAccountAlgoID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingAlgosField->FindMarginRateAlgoID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerTradingAlgosField->HandlePositionAlgoID#} p) <*>
    (({#get CThostFtdcBrokerTradingAlgosField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerTradingAlgosField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerTradingAlgosField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerTradingAlgosField->HandleTradingAccountAlgoID#} p (castCharToCChar $ handleTradingAccountAlgoID (s :: CThostFtdcBrokerTradingAlgosField))
    {#set CThostFtdcBrokerTradingAlgosField->FindMarginRateAlgoID#} p (castCharToCChar $ findMarginRateAlgoID (s :: CThostFtdcBrokerTradingAlgosField))
    {#set CThostFtdcBrokerTradingAlgosField->HandlePositionAlgoID#} p (castCharToCChar $ handlePositionAlgoID (s :: CThostFtdcBrokerTradingAlgosField))
    withText (instrumentID (s :: CThostFtdcBrokerTradingAlgosField)) ({#set CThostFtdcBrokerTradingAlgosField->InstrumentID#} p)
    withText (exchangeID (s :: CThostFtdcBrokerTradingAlgosField)) ({#set CThostFtdcBrokerTradingAlgosField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcBrokerTradingAlgosField)) ({#set CThostFtdcBrokerTradingAlgosField->BrokerID#} p)

instance Storable CThostFtdcCommRateModelField where
  sizeOf _ = {#sizeof CThostFtdcCommRateModelField#}
  alignment _ = {#alignof CThostFtdcCommRateModelField#}
  peek p =
    CThostFtdcCommRateModelField <$>
    (({#get CThostFtdcCommRateModelField->CommModelName#} p) >>= peekText) <*>
    (({#get CThostFtdcCommRateModelField->CommModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcCommRateModelField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (commModelName (s :: CThostFtdcCommRateModelField)) ({#set CThostFtdcCommRateModelField->CommModelName#} p)
    withText (commModelID (s :: CThostFtdcCommRateModelField)) ({#set CThostFtdcCommRateModelField->CommModelID#} p)
    withText (brokerID (s :: CThostFtdcCommRateModelField)) ({#set CThostFtdcCommRateModelField->BrokerID#} p)

instance Storable CThostFtdcQrySecAgentACIDMapField where
  sizeOf _ = {#sizeof CThostFtdcQrySecAgentACIDMapField#}
  alignment _ = {#alignof CThostFtdcQrySecAgentACIDMapField#}
  peek p =
    CThostFtdcQrySecAgentACIDMapField <$>
    (({#get CThostFtdcQrySecAgentACIDMapField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySecAgentACIDMapField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySecAgentACIDMapField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySecAgentACIDMapField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcQrySecAgentACIDMapField)) ({#set CThostFtdcQrySecAgentACIDMapField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcQrySecAgentACIDMapField)) ({#set CThostFtdcQrySecAgentACIDMapField->AccountID#} p)
    withText (userID (s :: CThostFtdcQrySecAgentACIDMapField)) ({#set CThostFtdcQrySecAgentACIDMapField->UserID#} p)
    withText (brokerID (s :: CThostFtdcQrySecAgentACIDMapField)) ({#set CThostFtdcQrySecAgentACIDMapField->BrokerID#} p)

instance Storable CThostFtdcTransferBankToFutureReqField where
  sizeOf _ = {#sizeof CThostFtdcTransferBankToFutureReqField#}
  alignment _ = {#alignof CThostFtdcTransferBankToFutureReqField#}
  peek p =
    CThostFtdcTransferBankToFutureReqField <$>
    (({#get CThostFtdcTransferBankToFutureReqField->CurrencyCode#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTransferBankToFutureReqField->CustFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferBankToFutureReqField->TradeAmt#} p) <*>
    (({#get CThostFtdcTransferBankToFutureReqField->FutureAccPwd#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferBankToFutureReqField->FuturePwdFlag#} p) <*>
    (({#get CThostFtdcTransferBankToFutureReqField->FutureAccount#} p) >>= peekText)
  poke p s = do
    withText (currencyCode (s :: CThostFtdcTransferBankToFutureReqField)) ({#set CThostFtdcTransferBankToFutureReqField->CurrencyCode#} p)
    {#set CThostFtdcTransferBankToFutureReqField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcTransferBankToFutureReqField))
    {#set CThostFtdcTransferBankToFutureReqField->TradeAmt#} p (realToFrac $ tradeAmt (s :: CThostFtdcTransferBankToFutureReqField))
    withText (futureAccPwd (s :: CThostFtdcTransferBankToFutureReqField)) ({#set CThostFtdcTransferBankToFutureReqField->FutureAccPwd#} p)
    {#set CThostFtdcTransferBankToFutureReqField->FuturePwdFlag#} p (castCharToCChar $ futurePwdFlag (s :: CThostFtdcTransferBankToFutureReqField))
    withText (futureAccount (s :: CThostFtdcTransferBankToFutureReqField)) ({#set CThostFtdcTransferBankToFutureReqField->FutureAccount#} p)

instance Storable CThostFtdcRspFutureSignInField where
  sizeOf _ = {#sizeof CThostFtdcRspFutureSignInField#}
  alignment _ = {#alignof CThostFtdcRspFutureSignInField#}
  peek p =
    CThostFtdcRspFutureSignInField <$>
    (({#get CThostFtdcRspFutureSignInField->MacKey#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->PinKey#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignInField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignInField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignInField->RequestID#} p) <*>
    (({#get CThostFtdcRspFutureSignInField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignInField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignInField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspFutureSignInField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspFutureSignInField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspFutureSignInField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspFutureSignInField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (macKey (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->MacKey#} p)
    withText (pinKey (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->PinKey#} p)
    withText (errorMsg (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->ErrorMsg#} p)
    {#set CThostFtdcRspFutureSignInField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspFutureSignInField))
    {#set CThostFtdcRspFutureSignInField->TID#} p (fromIntegral $ tID (s :: CThostFtdcRspFutureSignInField))
    {#set CThostFtdcRspFutureSignInField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcRspFutureSignInField))
    withText (operNo (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->DeviceID#} p)
    withText (currencyID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->CurrencyID#} p)
    withText (digest (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->Digest#} p)
    withText (userID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->UserID#} p)
    {#set CThostFtdcRspFutureSignInField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcRspFutureSignInField))
    {#set CThostFtdcRspFutureSignInField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspFutureSignInField))
    {#set CThostFtdcRspFutureSignInField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspFutureSignInField))
    {#set CThostFtdcRspFutureSignInField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspFutureSignInField))
    withText (tradingDay (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspFutureSignInField)) ({#set CThostFtdcRspFutureSignInField->TradeCode#} p)

instance Storable CThostFtdcSettlementRefField where
  sizeOf _ = {#sizeof CThostFtdcSettlementRefField#}
  alignment _ = {#alignof CThostFtdcSettlementRefField#}
  peek p =
    CThostFtdcSettlementRefField <$>
    fmap fromIntegral ({#get CThostFtdcSettlementRefField->SettlementID#} p) <*>
    (({#get CThostFtdcSettlementRefField->TradingDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSettlementRefField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcSettlementRefField))
    withText (tradingDay (s :: CThostFtdcSettlementRefField)) ({#set CThostFtdcSettlementRefField->TradingDay#} p)

instance Storable CThostFtdcQryErrOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryErrOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryErrOrderActionField#}
  peek p =
    CThostFtdcQryErrOrderActionField <$>
    (({#get CThostFtdcQryErrOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryErrOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryErrOrderActionField)) ({#set CThostFtdcQryErrOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryErrOrderActionField)) ({#set CThostFtdcQryErrOrderActionField->BrokerID#} p)

instance Storable CThostFtdcQryExecFreezeField where
  sizeOf _ = {#sizeof CThostFtdcQryExecFreezeField#}
  alignment _ = {#alignof CThostFtdcQryExecFreezeField#}
  peek p =
    CThostFtdcQryExecFreezeField <$>
    (({#get CThostFtdcQryExecFreezeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecFreezeField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecFreezeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecFreezeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryExecFreezeField)) ({#set CThostFtdcQryExecFreezeField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryExecFreezeField)) ({#set CThostFtdcQryExecFreezeField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryExecFreezeField)) ({#set CThostFtdcQryExecFreezeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryExecFreezeField)) ({#set CThostFtdcQryExecFreezeField->BrokerID#} p)

instance Storable CThostFtdcExchangeExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcExchangeExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcExchangeExecOrderActionField#}
  peek p =
    CThostFtdcExchangeExecOrderActionField <$>
    (({#get CThostFtdcExchangeExecOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->BranchID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderActionField->ActionType#} p) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ExecOrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ActionDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeExecOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ExecOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->BranchID#} p)
    {#set CThostFtdcExchangeExecOrderActionField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcExchangeExecOrderActionField))
    withText (userID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->UserID#} p)
    {#set CThostFtdcExchangeExecOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcExchangeExecOrderActionField))
    withText (businessUnit (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ActionLocalID#} p)
    withText (execOrderLocalID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ExecOrderLocalID#} p)
    {#set CThostFtdcExchangeExecOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeExecOrderActionField))
    withText (traderID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ActionDate#} p)
    {#set CThostFtdcExchangeExecOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcExchangeExecOrderActionField))
    withText (execOrderSysID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ExecOrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeExecOrderActionField)) ({#set CThostFtdcExchangeExecOrderActionField->ExchangeID#} p)

instance Storable CThostFtdcChangeAccountField where
  sizeOf _ = {#sizeof CThostFtdcChangeAccountField#}
  alignment _ = {#alignof CThostFtdcChangeAccountField#}
  peek p =
    CThostFtdcChangeAccountField <$>
    (({#get CThostFtdcChangeAccountField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcChangeAccountField->ErrorID#} p) <*>
    (({#get CThostFtdcChangeAccountField->Digest#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcChangeAccountField->TID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcChangeAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->VerifyCertNoFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcChangeAccountField->InstallID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcChangeAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->NewBankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->NewBankAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->MoneyAccountStatus#} p) <*>
    (({#get CThostFtdcChangeAccountField->EMail#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->Fax#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->MobilePhone#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->Address#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->CustType#} p) <*>
    (({#get CThostFtdcChangeAccountField->CountryCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->Gender#} p) <*>
    (({#get CThostFtdcChangeAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcChangeAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcChangeAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcChangeAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcChangeAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcChangeAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcChangeAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->ErrorMsg#} p)
    {#set CThostFtdcChangeAccountField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcChangeAccountField))
    withText (digest (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->Digest#} p)
    {#set CThostFtdcChangeAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcChangeAccountField))
    {#set CThostFtdcChangeAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcChangeAccountField))
    {#set CThostFtdcChangeAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcChangeAccountField))
    withText (brokerIDByBank (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BrokerIDByBank#} p)
    withText (currencyID (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->CurrencyID#} p)
    {#set CThostFtdcChangeAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcChangeAccountField))
    {#set CThostFtdcChangeAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcChangeAccountField))
    {#set CThostFtdcChangeAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcChangeAccountField))
    withText (password (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->AccountID#} p)
    withText (newBankPassWord (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->NewBankPassWord#} p)
    withText (newBankAccount (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->NewBankAccount#} p)
    withText (bankPassWord (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BankAccount#} p)
    {#set CThostFtdcChangeAccountField->MoneyAccountStatus#} p (castCharToCChar $ moneyAccountStatus (s :: CThostFtdcChangeAccountField))
    withText (eMail (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->EMail#} p)
    withText (fax (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->Fax#} p)
    withText (mobilePhone (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->MobilePhone#} p)
    withText (telephone (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->Telephone#} p)
    withText (zipCode (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->ZipCode#} p)
    withText (address (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->Address#} p)
    {#set CThostFtdcChangeAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcChangeAccountField))
    withText (countryCode (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->CountryCode#} p)
    {#set CThostFtdcChangeAccountField->Gender#} p (castCharToCChar $ gender (s :: CThostFtdcChangeAccountField))
    withText (identifiedCardNo (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcChangeAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcChangeAccountField))
    withText (customerName (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->CustomerName#} p)
    {#set CThostFtdcChangeAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcChangeAccountField))
    {#set CThostFtdcChangeAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcChangeAccountField))
    {#set CThostFtdcChangeAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcChangeAccountField))
    withText (tradingDay (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcChangeAccountField)) ({#set CThostFtdcChangeAccountField->TradeCode#} p)

instance Storable CThostFtdcCancelAccountField where
  sizeOf _ = {#sizeof CThostFtdcCancelAccountField#}
  alignment _ = {#alignof CThostFtdcCancelAccountField#}
  peek p =
    CThostFtdcCancelAccountField <$>
    (({#get CThostFtdcCancelAccountField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcCancelAccountField->ErrorID#} p) <*>
    (({#get CThostFtdcCancelAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCancelAccountField->TID#} p) <*>
    (({#get CThostFtdcCancelAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcCancelAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcCancelAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcCancelAccountField->Digest#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->CashExchangeCode#} p) <*>
    (({#get CThostFtdcCancelAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->VerifyCertNoFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCancelAccountField->InstallID#} p) <*>
    (({#get CThostFtdcCancelAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->MoneyAccountStatus#} p) <*>
    (({#get CThostFtdcCancelAccountField->EMail#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->Fax#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->MobilePhone#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->Address#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->CustType#} p) <*>
    (({#get CThostFtdcCancelAccountField->CountryCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->Gender#} p) <*>
    (({#get CThostFtdcCancelAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcCancelAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCancelAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcCancelAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCancelAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcCancelAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcCancelAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->ErrorMsg#} p)
    {#set CThostFtdcCancelAccountField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcCancelAccountField))
    withText (userID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->UserID#} p)
    {#set CThostFtdcCancelAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcCancelAccountField))
    withText (operNo (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->OperNo#} p)
    {#set CThostFtdcCancelAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcCancelAccountField))
    {#set CThostFtdcCancelAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcCancelAccountField))
    withText (bankSecuAcc (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcCancelAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcCancelAccountField))
    withText (deviceID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->DeviceID#} p)
    {#set CThostFtdcCancelAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcCancelAccountField))
    withText (digest (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->Digest#} p)
    {#set CThostFtdcCancelAccountField->CashExchangeCode#} p (castCharToCChar $ cashExchangeCode (s :: CThostFtdcCancelAccountField))
    withText (currencyID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->CurrencyID#} p)
    {#set CThostFtdcCancelAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcCancelAccountField))
    {#set CThostFtdcCancelAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcCancelAccountField))
    withText (password (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BankAccount#} p)
    {#set CThostFtdcCancelAccountField->MoneyAccountStatus#} p (castCharToCChar $ moneyAccountStatus (s :: CThostFtdcCancelAccountField))
    withText (eMail (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->EMail#} p)
    withText (fax (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->Fax#} p)
    withText (mobilePhone (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->MobilePhone#} p)
    withText (telephone (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->Telephone#} p)
    withText (zipCode (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->ZipCode#} p)
    withText (address (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->Address#} p)
    {#set CThostFtdcCancelAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcCancelAccountField))
    withText (countryCode (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->CountryCode#} p)
    {#set CThostFtdcCancelAccountField->Gender#} p (castCharToCChar $ gender (s :: CThostFtdcCancelAccountField))
    withText (identifiedCardNo (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcCancelAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcCancelAccountField))
    withText (customerName (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->CustomerName#} p)
    {#set CThostFtdcCancelAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcCancelAccountField))
    {#set CThostFtdcCancelAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcCancelAccountField))
    {#set CThostFtdcCancelAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcCancelAccountField))
    withText (tradingDay (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcCancelAccountField)) ({#set CThostFtdcCancelAccountField->TradeCode#} p)

instance Storable CThostFtdcReqChangeAccountField where
  sizeOf _ = {#sizeof CThostFtdcReqChangeAccountField#}
  alignment _ = {#alignof CThostFtdcReqChangeAccountField#}
  peek p =
    CThostFtdcReqChangeAccountField <$>
    (({#get CThostFtdcReqChangeAccountField->Digest#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqChangeAccountField->TID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->VerifyCertNoFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqChangeAccountField->InstallID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->NewBankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->NewBankAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->MoneyAccountStatus#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->EMail#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->Fax#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->MobilePhone#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->Address#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->CustType#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->CountryCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->Gender#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqChangeAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqChangeAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqChangeAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqChangeAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqChangeAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (digest (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->Digest#} p)
    {#set CThostFtdcReqChangeAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqChangeAccountField))
    {#set CThostFtdcReqChangeAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcReqChangeAccountField))
    {#set CThostFtdcReqChangeAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcReqChangeAccountField))
    withText (brokerIDByBank (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BrokerIDByBank#} p)
    withText (currencyID (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->CurrencyID#} p)
    {#set CThostFtdcReqChangeAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcReqChangeAccountField))
    {#set CThostFtdcReqChangeAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqChangeAccountField))
    {#set CThostFtdcReqChangeAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcReqChangeAccountField))
    withText (password (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->AccountID#} p)
    withText (newBankPassWord (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->NewBankPassWord#} p)
    withText (newBankAccount (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->NewBankAccount#} p)
    withText (bankPassWord (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BankAccount#} p)
    {#set CThostFtdcReqChangeAccountField->MoneyAccountStatus#} p (castCharToCChar $ moneyAccountStatus (s :: CThostFtdcReqChangeAccountField))
    withText (eMail (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->EMail#} p)
    withText (fax (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->Fax#} p)
    withText (mobilePhone (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->MobilePhone#} p)
    withText (telephone (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->Telephone#} p)
    withText (zipCode (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->ZipCode#} p)
    withText (address (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->Address#} p)
    {#set CThostFtdcReqChangeAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqChangeAccountField))
    withText (countryCode (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->CountryCode#} p)
    {#set CThostFtdcReqChangeAccountField->Gender#} p (castCharToCChar $ gender (s :: CThostFtdcReqChangeAccountField))
    withText (identifiedCardNo (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqChangeAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqChangeAccountField))
    withText (customerName (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->CustomerName#} p)
    {#set CThostFtdcReqChangeAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqChangeAccountField))
    {#set CThostFtdcReqChangeAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqChangeAccountField))
    {#set CThostFtdcReqChangeAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqChangeAccountField))
    withText (tradingDay (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqChangeAccountField)) ({#set CThostFtdcReqChangeAccountField->TradeCode#} p)

instance Storable CThostFtdcInstrumentMarginRateAdjustField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentMarginRateAdjustField#}
  alignment _ = {#alignof CThostFtdcInstrumentMarginRateAdjustField#}
  peek p =
    CThostFtdcInstrumentMarginRateAdjustField <$>
    fmap fromIntegral ({#get CThostFtdcInstrumentMarginRateAdjustField->IsRelative#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateAdjustField->ShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateAdjustField->ShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateAdjustField->LongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateAdjustField->LongMarginRatioByMoney#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentMarginRateAdjustField->HedgeFlag#} p) <*>
    (({#get CThostFtdcInstrumentMarginRateAdjustField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentMarginRateAdjustField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentMarginRateAdjustField->InvestorRange#} p) <*>
    (({#get CThostFtdcInstrumentMarginRateAdjustField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstrumentMarginRateAdjustField->IsRelative#} p (fromIntegral $ isRelative (s :: CThostFtdcInstrumentMarginRateAdjustField))
    {#set CThostFtdcInstrumentMarginRateAdjustField->ShortMarginRatioByVolume#} p (realToFrac $ shortMarginRatioByVolume (s :: CThostFtdcInstrumentMarginRateAdjustField))
    {#set CThostFtdcInstrumentMarginRateAdjustField->ShortMarginRatioByMoney#} p (realToFrac $ shortMarginRatioByMoney (s :: CThostFtdcInstrumentMarginRateAdjustField))
    {#set CThostFtdcInstrumentMarginRateAdjustField->LongMarginRatioByVolume#} p (realToFrac $ longMarginRatioByVolume (s :: CThostFtdcInstrumentMarginRateAdjustField))
    {#set CThostFtdcInstrumentMarginRateAdjustField->LongMarginRatioByMoney#} p (realToFrac $ longMarginRatioByMoney (s :: CThostFtdcInstrumentMarginRateAdjustField))
    {#set CThostFtdcInstrumentMarginRateAdjustField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInstrumentMarginRateAdjustField))
    withText (investorID (s :: CThostFtdcInstrumentMarginRateAdjustField)) ({#set CThostFtdcInstrumentMarginRateAdjustField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInstrumentMarginRateAdjustField)) ({#set CThostFtdcInstrumentMarginRateAdjustField->BrokerID#} p)
    {#set CThostFtdcInstrumentMarginRateAdjustField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcInstrumentMarginRateAdjustField))
    withText (instrumentID (s :: CThostFtdcInstrumentMarginRateAdjustField)) ({#set CThostFtdcInstrumentMarginRateAdjustField->InstrumentID#} p)

instance Storable CThostFtdcExchangeOrderActionErrorField where
  sizeOf _ = {#sizeof CThostFtdcExchangeOrderActionErrorField#}
  alignment _ = {#alignof CThostFtdcExchangeOrderActionErrorField#}
  peek p =
    CThostFtdcExchangeOrderActionErrorField <$>
    (({#get CThostFtdcExchangeOrderActionErrorField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionErrorField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderActionErrorField->ErrorID#} p) <*>
    (({#get CThostFtdcExchangeOrderActionErrorField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionErrorField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeOrderActionErrorField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeOrderActionErrorField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionErrorField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeOrderActionErrorField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->BrokerID#} p)
    withText (errorMsg (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->ErrorMsg#} p)
    {#set CThostFtdcExchangeOrderActionErrorField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcExchangeOrderActionErrorField))
    withText (actionLocalID (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->ActionLocalID#} p)
    withText (orderLocalID (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->OrderLocalID#} p)
    {#set CThostFtdcExchangeOrderActionErrorField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeOrderActionErrorField))
    withText (traderID (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->TraderID#} p)
    withText (orderSysID (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeOrderActionErrorField)) ({#set CThostFtdcExchangeOrderActionErrorField->ExchangeID#} p)

instance Storable CThostFtdcReqFutureSignOutField where
  sizeOf _ = {#sizeof CThostFtdcReqFutureSignOutField#}
  alignment _ = {#alignof CThostFtdcReqFutureSignOutField#}
  peek p =
    CThostFtdcReqFutureSignOutField <$>
    fmap fromIntegral ({#get CThostFtdcReqFutureSignOutField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqFutureSignOutField->RequestID#} p) <*>
    (({#get CThostFtdcReqFutureSignOutField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqFutureSignOutField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqFutureSignOutField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqFutureSignOutField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqFutureSignOutField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqFutureSignOutField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqFutureSignOutField->TradeCode#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcReqFutureSignOutField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqFutureSignOutField))
    {#set CThostFtdcReqFutureSignOutField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcReqFutureSignOutField))
    withText (operNo (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->DeviceID#} p)
    withText (currencyID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->CurrencyID#} p)
    withText (digest (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->Digest#} p)
    withText (userID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->UserID#} p)
    {#set CThostFtdcReqFutureSignOutField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqFutureSignOutField))
    {#set CThostFtdcReqFutureSignOutField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqFutureSignOutField))
    {#set CThostFtdcReqFutureSignOutField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqFutureSignOutField))
    {#set CThostFtdcReqFutureSignOutField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqFutureSignOutField))
    withText (tradingDay (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqFutureSignOutField)) ({#set CThostFtdcReqFutureSignOutField->TradeCode#} p)

instance Storable CThostFtdcMMOptionInstrCommRateField where
  sizeOf _ = {#sizeof CThostFtdcMMOptionInstrCommRateField#}
  alignment _ = {#alignof CThostFtdcMMOptionInstrCommRateField#}
  peek p =
    CThostFtdcMMOptionInstrCommRateField <$>
    (({#get CThostFtdcMMOptionInstrCommRateField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->StrikeRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->StrikeRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->CloseTodayRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->CloseTodayRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->CloseRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->CloseRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->OpenRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMOptionInstrCommRateField->OpenRatioByMoney#} p) <*>
    (({#get CThostFtdcMMOptionInstrCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcMMOptionInstrCommRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcMMOptionInstrCommRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcMMOptionInstrCommRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcMMOptionInstrCommRateField)) ({#set CThostFtdcMMOptionInstrCommRateField->ExchangeID#} p)
    {#set CThostFtdcMMOptionInstrCommRateField->StrikeRatioByVolume#} p (realToFrac $ strikeRatioByVolume (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->StrikeRatioByMoney#} p (realToFrac $ strikeRatioByMoney (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->CloseTodayRatioByVolume#} p (realToFrac $ closeTodayRatioByVolume (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->CloseTodayRatioByMoney#} p (realToFrac $ closeTodayRatioByMoney (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->CloseRatioByVolume#} p (realToFrac $ closeRatioByVolume (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->CloseRatioByMoney#} p (realToFrac $ closeRatioByMoney (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->OpenRatioByVolume#} p (realToFrac $ openRatioByVolume (s :: CThostFtdcMMOptionInstrCommRateField))
    {#set CThostFtdcMMOptionInstrCommRateField->OpenRatioByMoney#} p (realToFrac $ openRatioByMoney (s :: CThostFtdcMMOptionInstrCommRateField))
    withText (investorID (s :: CThostFtdcMMOptionInstrCommRateField)) ({#set CThostFtdcMMOptionInstrCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcMMOptionInstrCommRateField)) ({#set CThostFtdcMMOptionInstrCommRateField->BrokerID#} p)
    {#set CThostFtdcMMOptionInstrCommRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcMMOptionInstrCommRateField))
    withText (instrumentID (s :: CThostFtdcMMOptionInstrCommRateField)) ({#set CThostFtdcMMOptionInstrCommRateField->InstrumentID#} p)

instance Storable CThostFtdcExchangeDesignateField where
  sizeOf _ = {#sizeof CThostFtdcExchangeDesignateField#}
  alignment _ = {#alignof CThostFtdcExchangeDesignateField#}
  peek p =
    CThostFtdcExchangeDesignateField <$>
    (({#get CThostFtdcExchangeDesignateField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeDesignateField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeDesignateField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeDesignateField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeDesignateField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeDesignateField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeDesignateField->DesignateStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeDesignateField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeDesignateField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeDesignateField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeDesignateField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeDesignateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeDesignateField->DesignateLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeDesignateField->DesignateType#} p)
  poke p s = do
    withText (branchID (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->BranchID#} p)
    withText (insertTime (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->InsertDate#} p)
    {#set CThostFtdcExchangeDesignateField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeDesignateField))
    withText (tradingDay (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->TradingDay#} p)
    {#set CThostFtdcExchangeDesignateField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeDesignateField))
    {#set CThostFtdcExchangeDesignateField->DesignateStatus#} p (castCharToCChar $ designateStatus (s :: CThostFtdcExchangeDesignateField))
    {#set CThostFtdcExchangeDesignateField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeDesignateField))
    withText (traderID (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->TraderID#} p)
    withText (clientID (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->ExchangeID#} p)
    withText (designateLocalID (s :: CThostFtdcExchangeDesignateField)) ({#set CThostFtdcExchangeDesignateField->DesignateLocalID#} p)
    {#set CThostFtdcExchangeDesignateField->DesignateType#} p (castCharToCChar $ designateType (s :: CThostFtdcExchangeDesignateField))

instance Storable CThostFtdcInputLockField where
  sizeOf _ = {#sizeof CThostFtdcInputLockField#}
  alignment _ = {#alignof CThostFtdcInputLockField#}
  peek p =
    CThostFtdcInputLockField <$>
    (({#get CThostFtdcInputLockField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputLockField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputLockField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputLockField->LockType#} p) <*>
    (({#get CThostFtdcInputLockField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputLockField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputLockField->Volume#} p) <*>
    (({#get CThostFtdcInputLockField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputLockField->LockRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputLockField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputLockField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputLockField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->IPAddress#} p)
    withText (exchangeID (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->ExchangeID#} p)
    {#set CThostFtdcInputLockField->LockType#} p (castCharToCChar $ lockType (s :: CThostFtdcInputLockField))
    withText (businessUnit (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->BusinessUnit#} p)
    {#set CThostFtdcInputLockField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputLockField))
    {#set CThostFtdcInputLockField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcInputLockField))
    withText (userID (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->UserID#} p)
    withText (lockRef (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->LockRef#} p)
    withText (instrumentID (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputLockField)) ({#set CThostFtdcInputLockField->BrokerID#} p)

instance Storable CThostFtdcInvestorProductGroupMarginField where
  sizeOf _ = {#sizeof CThostFtdcInvestorProductGroupMarginField#}
  alignment _ = {#alignof CThostFtdcInvestorProductGroupMarginField#}
  peek p =
    CThostFtdcInvestorProductGroupMarginField <$>
    fmap castCCharToChar ({#get CThostFtdcInvestorProductGroupMarginField->HedgeFlag#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ShortExchOffsetAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->LongExchOffsetAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ExchOffsetAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ShortOffsetAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->LongOffsetAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->OffsetAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->PositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->CashIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->FrozenCash#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->Commission#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->FrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->CloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ShortExchMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->LongExchMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ExchMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ShortUseMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->LongUseMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->UseMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->ShortFrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->LongFrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorProductGroupMarginField->FrozenMargin#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorProductGroupMarginField->SettlementID#} p) <*>
    (({#get CThostFtdcInvestorProductGroupMarginField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorProductGroupMarginField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorProductGroupMarginField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorProductGroupMarginField->ProductGroupID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorProductGroupMarginField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ShortExchOffsetAmount#} p (realToFrac $ shortExchOffsetAmount (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->LongExchOffsetAmount#} p (realToFrac $ longExchOffsetAmount (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ExchOffsetAmount#} p (realToFrac $ exchOffsetAmount (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ShortOffsetAmount#} p (realToFrac $ shortOffsetAmount (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->LongOffsetAmount#} p (realToFrac $ longOffsetAmount (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->OffsetAmount#} p (realToFrac $ offsetAmount (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->PositionProfit#} p (realToFrac $ positionProfit (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->CashIn#} p (realToFrac $ cashIn (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->FrozenCash#} p (realToFrac $ frozenCash (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->Commission#} p (realToFrac $ commission (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->FrozenCommission#} p (realToFrac $ frozenCommission (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->CloseProfit#} p (realToFrac $ closeProfit (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ShortExchMargin#} p (realToFrac $ shortExchMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->LongExchMargin#} p (realToFrac $ longExchMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ExchMargin#} p (realToFrac $ exchMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ShortUseMargin#} p (realToFrac $ shortUseMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->LongUseMargin#} p (realToFrac $ longUseMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->UseMargin#} p (realToFrac $ useMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->ShortFrozenMargin#} p (realToFrac $ shortFrozenMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->LongFrozenMargin#} p (realToFrac $ longFrozenMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->FrozenMargin#} p (realToFrac $ frozenMargin (s :: CThostFtdcInvestorProductGroupMarginField))
    {#set CThostFtdcInvestorProductGroupMarginField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcInvestorProductGroupMarginField))
    withText (tradingDay (s :: CThostFtdcInvestorProductGroupMarginField)) ({#set CThostFtdcInvestorProductGroupMarginField->TradingDay#} p)
    withText (investorID (s :: CThostFtdcInvestorProductGroupMarginField)) ({#set CThostFtdcInvestorProductGroupMarginField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInvestorProductGroupMarginField)) ({#set CThostFtdcInvestorProductGroupMarginField->BrokerID#} p)
    withText (productGroupID (s :: CThostFtdcInvestorProductGroupMarginField)) ({#set CThostFtdcInvestorProductGroupMarginField->ProductGroupID#} p)

instance Storable CThostFtdcQryInstrumentMarginRateField where
  sizeOf _ = {#sizeof CThostFtdcQryInstrumentMarginRateField#}
  alignment _ = {#alignof CThostFtdcQryInstrumentMarginRateField#}
  peek p =
    CThostFtdcQryInstrumentMarginRateField <$>
    fmap castCCharToChar ({#get CThostFtdcQryInstrumentMarginRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcQryInstrumentMarginRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentMarginRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentMarginRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryInstrumentMarginRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQryInstrumentMarginRateField))
    withText (instrumentID (s :: CThostFtdcQryInstrumentMarginRateField)) ({#set CThostFtdcQryInstrumentMarginRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInstrumentMarginRateField)) ({#set CThostFtdcQryInstrumentMarginRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInstrumentMarginRateField)) ({#set CThostFtdcQryInstrumentMarginRateField->BrokerID#} p)

instance Storable CThostFtdcLimitPosiField where
  sizeOf _ = {#sizeof CThostFtdcLimitPosiField#}
  alignment _ = {#alignof CThostFtdcLimitPosiField#}
  peek p =
    CThostFtdcLimitPosiField <$>
    fmap realToFrac ({#get CThostFtdcLimitPosiField->LongAmountFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiField->OpenVolumeFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiField->LongVolumeFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiField->TotalVolumeFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcLimitPosiField->LongAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiField->OpenVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiField->LongVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiField->TotalVolume#} p) <*>
    (({#get CThostFtdcLimitPosiField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcLimitPosiField->LongAmountFrozen#} p (realToFrac $ longAmountFrozen (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->OpenVolumeFrozen#} p (fromIntegral $ openVolumeFrozen (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->LongVolumeFrozen#} p (fromIntegral $ longVolumeFrozen (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->TotalVolumeFrozen#} p (fromIntegral $ totalVolumeFrozen (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->LongAmount#} p (realToFrac $ longAmount (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->OpenVolume#} p (fromIntegral $ openVolume (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->LongVolume#} p (fromIntegral $ longVolume (s :: CThostFtdcLimitPosiField))
    {#set CThostFtdcLimitPosiField->TotalVolume#} p (fromIntegral $ totalVolume (s :: CThostFtdcLimitPosiField))
    withText (exchangeID (s :: CThostFtdcLimitPosiField)) ({#set CThostFtdcLimitPosiField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcLimitPosiField)) ({#set CThostFtdcLimitPosiField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcLimitPosiField)) ({#set CThostFtdcLimitPosiField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLimitPosiField)) ({#set CThostFtdcLimitPosiField->BrokerID#} p)

instance Storable CThostFtdcLimitPosiParamField where
  sizeOf _ = {#sizeof CThostFtdcLimitPosiParamField#}
  alignment _ = {#alignof CThostFtdcLimitPosiParamField#}
  peek p =
    CThostFtdcLimitPosiParamField <$>
    fmap realToFrac ({#get CThostFtdcLimitPosiParamField->LongAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiParamField->OpenVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiParamField->LongVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiParamField->TotalVolume#} p) <*>
    (({#get CThostFtdcLimitPosiParamField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiParamField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiParamField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcLimitPosiParamField->InvestorRange#} p) <*>
    (({#get CThostFtdcLimitPosiParamField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcLimitPosiParamField->LongAmount#} p (realToFrac $ longAmount (s :: CThostFtdcLimitPosiParamField))
    {#set CThostFtdcLimitPosiParamField->OpenVolume#} p (fromIntegral $ openVolume (s :: CThostFtdcLimitPosiParamField))
    {#set CThostFtdcLimitPosiParamField->LongVolume#} p (fromIntegral $ longVolume (s :: CThostFtdcLimitPosiParamField))
    {#set CThostFtdcLimitPosiParamField->TotalVolume#} p (fromIntegral $ totalVolume (s :: CThostFtdcLimitPosiParamField))
    withText (exchangeID (s :: CThostFtdcLimitPosiParamField)) ({#set CThostFtdcLimitPosiParamField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcLimitPosiParamField)) ({#set CThostFtdcLimitPosiParamField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLimitPosiParamField)) ({#set CThostFtdcLimitPosiParamField->BrokerID#} p)
    {#set CThostFtdcLimitPosiParamField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcLimitPosiParamField))
    withText (instrumentID (s :: CThostFtdcLimitPosiParamField)) ({#set CThostFtdcLimitPosiParamField->InstrumentID#} p)

instance Storable CThostFtdcDepositResultInformField where
  sizeOf _ = {#sizeof CThostFtdcDepositResultInformField#}
  alignment _ = {#alignof CThostFtdcDepositResultInformField#}
  peek p =
    CThostFtdcDepositResultInformField <$>
    (({#get CThostFtdcDepositResultInformField->DescrInfoForReturnCode#} p) >>= peekText) <*>
    (({#get CThostFtdcDepositResultInformField->ReturnCode#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcDepositResultInformField->RequestID#} p) <*>
    fmap realToFrac ({#get CThostFtdcDepositResultInformField->Deposit#} p) <*>
    (({#get CThostFtdcDepositResultInformField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcDepositResultInformField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcDepositResultInformField->DepositSeqNo#} p) >>= peekText)
  poke p s = do
    withText (descrInfoForReturnCode (s :: CThostFtdcDepositResultInformField)) ({#set CThostFtdcDepositResultInformField->DescrInfoForReturnCode#} p)
    withText (returnCode (s :: CThostFtdcDepositResultInformField)) ({#set CThostFtdcDepositResultInformField->ReturnCode#} p)
    {#set CThostFtdcDepositResultInformField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcDepositResultInformField))
    {#set CThostFtdcDepositResultInformField->Deposit#} p (realToFrac $ deposit (s :: CThostFtdcDepositResultInformField))
    withText (investorID (s :: CThostFtdcDepositResultInformField)) ({#set CThostFtdcDepositResultInformField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcDepositResultInformField)) ({#set CThostFtdcDepositResultInformField->BrokerID#} p)
    withText (depositSeqNo (s :: CThostFtdcDepositResultInformField)) ({#set CThostFtdcDepositResultInformField->DepositSeqNo#} p)

instance Storable CThostFtdcLoginInfoField where
  sizeOf _ = {#sizeof CThostFtdcLoginInfoField#}
  alignment _ = {#alignof CThostFtdcLoginInfoField#}
  peek p =
    CThostFtdcLoginInfoField <$>
    (({#get CThostFtdcLoginInfoField->LoginRemark#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->INETime#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->OneTimePassword#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->FFEXTime#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->CZCETime#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->DCETime#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->SHFETime#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->MaxOrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->SystemName#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->ProtocolInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->InterfaceProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->UserProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->LoginTime#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->LoginDate#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcLoginInfoField->BrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLoginInfoField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLoginInfoField->FrontID#} p)
  poke p s = do
    withText (loginRemark (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->LoginRemark#} p)
    withText (iNETime (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->INETime#} p)
    withText (oneTimePassword (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->OneTimePassword#} p)
    withText (macAddress (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->MacAddress#} p)
    withText (fFEXTime (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->FFEXTime#} p)
    withText (cZCETime (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->CZCETime#} p)
    withText (dCETime (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->DCETime#} p)
    withText (sHFETime (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->SHFETime#} p)
    withText (maxOrderRef (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->MaxOrderRef#} p)
    withText (password (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->Password#} p)
    withText (systemName (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->SystemName#} p)
    withText (protocolInfo (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->ProtocolInfo#} p)
    withText (interfaceProductInfo (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->InterfaceProductInfo#} p)
    withText (userProductInfo (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->UserProductInfo#} p)
    withText (iPAddress (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->IPAddress#} p)
    withText (loginTime (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->LoginTime#} p)
    withText (loginDate (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->LoginDate#} p)
    withText (userID (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->UserID#} p)
    withText (brokerID (s :: CThostFtdcLoginInfoField)) ({#set CThostFtdcLoginInfoField->BrokerID#} p)
    {#set CThostFtdcLoginInfoField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcLoginInfoField))
    {#set CThostFtdcLoginInfoField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcLoginInfoField))

instance Storable CThostFtdcQryOptionInstrCommRateField where
  sizeOf _ = {#sizeof CThostFtdcQryOptionInstrCommRateField#}
  alignment _ = {#alignof CThostFtdcQryOptionInstrCommRateField#}
  peek p =
    CThostFtdcQryOptionInstrCommRateField <$>
    (({#get CThostFtdcQryOptionInstrCommRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrCommRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrCommRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryOptionInstrCommRateField)) ({#set CThostFtdcQryOptionInstrCommRateField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryOptionInstrCommRateField)) ({#set CThostFtdcQryOptionInstrCommRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryOptionInstrCommRateField)) ({#set CThostFtdcQryOptionInstrCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryOptionInstrCommRateField)) ({#set CThostFtdcQryOptionInstrCommRateField->BrokerID#} p)

instance Storable CThostFtdcQryBrokerUserField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerUserField#}
  alignment _ = {#alignof CThostFtdcQryBrokerUserField#}
  peek p =
    CThostFtdcQryBrokerUserField <$>
    (({#get CThostFtdcQryBrokerUserField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerUserField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcQryBrokerUserField)) ({#set CThostFtdcQryBrokerUserField->UserID#} p)
    withText (brokerID (s :: CThostFtdcQryBrokerUserField)) ({#set CThostFtdcQryBrokerUserField->BrokerID#} p)

instance Storable CThostFtdcInputExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcInputExecOrderField#}
  alignment _ = {#alignof CThostFtdcInputExecOrderField#}
  peek p =
    CThostFtdcInputExecOrderField <$>
    (({#get CThostFtdcInputExecOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderField->CloseFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderField->ReservePositionFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderField->PosiDirection#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderField->ActionType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderField->OffsetFlag#} p) <*>
    (({#get CThostFtdcInputExecOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputExecOrderField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputExecOrderField->Volume#} p) <*>
    (({#get CThostFtdcInputExecOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->ExecOrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->IPAddress#} p)
    withText (clientID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->ClientID#} p)
    withText (currencyID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->InvestUnitID#} p)
    withText (exchangeID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->ExchangeID#} p)
    {#set CThostFtdcInputExecOrderField->CloseFlag#} p (castCharToCChar $ closeFlag (s :: CThostFtdcInputExecOrderField))
    {#set CThostFtdcInputExecOrderField->ReservePositionFlag#} p (castCharToCChar $ reservePositionFlag (s :: CThostFtdcInputExecOrderField))
    {#set CThostFtdcInputExecOrderField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcInputExecOrderField))
    {#set CThostFtdcInputExecOrderField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcInputExecOrderField))
    {#set CThostFtdcInputExecOrderField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInputExecOrderField))
    {#set CThostFtdcInputExecOrderField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcInputExecOrderField))
    withText (businessUnit (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->BusinessUnit#} p)
    {#set CThostFtdcInputExecOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputExecOrderField))
    {#set CThostFtdcInputExecOrderField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcInputExecOrderField))
    withText (userID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->UserID#} p)
    withText (execOrderRef (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->ExecOrderRef#} p)
    withText (instrumentID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputExecOrderField)) ({#set CThostFtdcInputExecOrderField->BrokerID#} p)

instance Storable CThostFtdcQryBrokerTradingParamsField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerTradingParamsField#}
  alignment _ = {#alignof CThostFtdcQryBrokerTradingParamsField#}
  peek p =
    CThostFtdcQryBrokerTradingParamsField <$>
    (({#get CThostFtdcQryBrokerTradingParamsField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerTradingParamsField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerTradingParamsField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcQryBrokerTradingParamsField)) ({#set CThostFtdcQryBrokerTradingParamsField->CurrencyID#} p)
    withText (investorID (s :: CThostFtdcQryBrokerTradingParamsField)) ({#set CThostFtdcQryBrokerTradingParamsField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryBrokerTradingParamsField)) ({#set CThostFtdcQryBrokerTradingParamsField->BrokerID#} p)

instance Storable CThostFtdcOptionInstrMarginAdjustField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrMarginAdjustField#}
  alignment _ = {#alignof CThostFtdcOptionInstrMarginAdjustField#}
  peek p =
    CThostFtdcOptionInstrMarginAdjustField <$>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->MShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->MShortMarginRatioByMoney#} p) <*>
    (({#get CThostFtdcOptionInstrMarginAdjustField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOptionInstrMarginAdjustField->IsRelative#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->AShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->AShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->HShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->HShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->SShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginAdjustField->SShortMarginRatioByMoney#} p) <*>
    (({#get CThostFtdcOptionInstrMarginAdjustField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrMarginAdjustField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrMarginAdjustField->InvestorRange#} p) <*>
    (({#get CThostFtdcOptionInstrMarginAdjustField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcOptionInstrMarginAdjustField->MShortMarginRatioByVolume#} p (realToFrac $ mShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->MShortMarginRatioByMoney#} p (realToFrac $ mShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginAdjustField))
    withText (exchangeID (s :: CThostFtdcOptionInstrMarginAdjustField)) ({#set CThostFtdcOptionInstrMarginAdjustField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrMarginAdjustField->IsRelative#} p (fromIntegral $ isRelative (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->AShortMarginRatioByVolume#} p (realToFrac $ aShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->AShortMarginRatioByMoney#} p (realToFrac $ aShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->HShortMarginRatioByVolume#} p (realToFrac $ hShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->HShortMarginRatioByMoney#} p (realToFrac $ hShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->SShortMarginRatioByVolume#} p (realToFrac $ sShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginAdjustField))
    {#set CThostFtdcOptionInstrMarginAdjustField->SShortMarginRatioByMoney#} p (realToFrac $ sShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginAdjustField))
    withText (investorID (s :: CThostFtdcOptionInstrMarginAdjustField)) ({#set CThostFtdcOptionInstrMarginAdjustField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrMarginAdjustField)) ({#set CThostFtdcOptionInstrMarginAdjustField->BrokerID#} p)
    {#set CThostFtdcOptionInstrMarginAdjustField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcOptionInstrMarginAdjustField))
    withText (instrumentID (s :: CThostFtdcOptionInstrMarginAdjustField)) ({#set CThostFtdcOptionInstrMarginAdjustField->InstrumentID#} p)

instance Storable CThostFtdcQryOptionInstrTradeCostField where
  sizeOf _ = {#sizeof CThostFtdcQryOptionInstrTradeCostField#}
  alignment _ = {#alignof CThostFtdcQryOptionInstrTradeCostField#}
  peek p =
    CThostFtdcQryOptionInstrTradeCostField <$>
    (({#get CThostFtdcQryOptionInstrTradeCostField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcQryOptionInstrTradeCostField->UnderlyingPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcQryOptionInstrTradeCostField->InputPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQryOptionInstrTradeCostField->HedgeFlag#} p) <*>
    (({#get CThostFtdcQryOptionInstrTradeCostField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrTradeCostField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrTradeCostField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryOptionInstrTradeCostField)) ({#set CThostFtdcQryOptionInstrTradeCostField->ExchangeID#} p)
    {#set CThostFtdcQryOptionInstrTradeCostField->UnderlyingPrice#} p (realToFrac $ underlyingPrice (s :: CThostFtdcQryOptionInstrTradeCostField))
    {#set CThostFtdcQryOptionInstrTradeCostField->InputPrice#} p (realToFrac $ inputPrice (s :: CThostFtdcQryOptionInstrTradeCostField))
    {#set CThostFtdcQryOptionInstrTradeCostField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQryOptionInstrTradeCostField))
    withText (instrumentID (s :: CThostFtdcQryOptionInstrTradeCostField)) ({#set CThostFtdcQryOptionInstrTradeCostField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryOptionInstrTradeCostField)) ({#set CThostFtdcQryOptionInstrTradeCostField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryOptionInstrTradeCostField)) ({#set CThostFtdcQryOptionInstrTradeCostField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryExchangeOrderActionField#}
  peek p =
    CThostFtdcQryExchangeOrderActionField <$>
    (({#get CThostFtdcQryExchangeOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderActionField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeOrderActionField)) ({#set CThostFtdcQryExchangeOrderActionField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeOrderActionField)) ({#set CThostFtdcQryExchangeOrderActionField->ExchangeID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeOrderActionField)) ({#set CThostFtdcQryExchangeOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeOrderActionField)) ({#set CThostFtdcQryExchangeOrderActionField->ParticipantID#} p)

instance Storable CThostFtdcTransferFutureToBankReqField where
  sizeOf _ = {#sizeof CThostFtdcTransferFutureToBankReqField#}
  alignment _ = {#alignof CThostFtdcTransferFutureToBankReqField#}
  peek p =
    CThostFtdcTransferFutureToBankReqField <$>
    (({#get CThostFtdcTransferFutureToBankReqField->CurrencyCode#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTransferFutureToBankReqField->CustFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferFutureToBankReqField->TradeAmt#} p) <*>
    (({#get CThostFtdcTransferFutureToBankReqField->FutureAccPwd#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferFutureToBankReqField->FuturePwdFlag#} p) <*>
    (({#get CThostFtdcTransferFutureToBankReqField->FutureAccount#} p) >>= peekText)
  poke p s = do
    withText (currencyCode (s :: CThostFtdcTransferFutureToBankReqField)) ({#set CThostFtdcTransferFutureToBankReqField->CurrencyCode#} p)
    {#set CThostFtdcTransferFutureToBankReqField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcTransferFutureToBankReqField))
    {#set CThostFtdcTransferFutureToBankReqField->TradeAmt#} p (realToFrac $ tradeAmt (s :: CThostFtdcTransferFutureToBankReqField))
    withText (futureAccPwd (s :: CThostFtdcTransferFutureToBankReqField)) ({#set CThostFtdcTransferFutureToBankReqField->FutureAccPwd#} p)
    {#set CThostFtdcTransferFutureToBankReqField->FuturePwdFlag#} p (castCharToCChar $ futurePwdFlag (s :: CThostFtdcTransferFutureToBankReqField))
    withText (futureAccount (s :: CThostFtdcTransferFutureToBankReqField)) ({#set CThostFtdcTransferFutureToBankReqField->FutureAccount#} p)

instance Storable CThostFtdcOptionInstrMiniMarginField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrMiniMarginField#}
  alignment _ = {#alignof CThostFtdcOptionInstrMiniMarginField#}
  peek p =
    CThostFtdcOptionInstrMiniMarginField <$>
    (({#get CThostFtdcOptionInstrMiniMarginField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOptionInstrMiniMarginField->IsRelative#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrMiniMarginField->ValueMethod#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMiniMarginField->MinMargin#} p) <*>
    (({#get CThostFtdcOptionInstrMiniMarginField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrMiniMarginField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrMiniMarginField->InvestorRange#} p) <*>
    (({#get CThostFtdcOptionInstrMiniMarginField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcOptionInstrMiniMarginField)) ({#set CThostFtdcOptionInstrMiniMarginField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrMiniMarginField->IsRelative#} p (fromIntegral $ isRelative (s :: CThostFtdcOptionInstrMiniMarginField))
    {#set CThostFtdcOptionInstrMiniMarginField->ValueMethod#} p (castCharToCChar $ valueMethod (s :: CThostFtdcOptionInstrMiniMarginField))
    {#set CThostFtdcOptionInstrMiniMarginField->MinMargin#} p (realToFrac $ minMargin (s :: CThostFtdcOptionInstrMiniMarginField))
    withText (investorID (s :: CThostFtdcOptionInstrMiniMarginField)) ({#set CThostFtdcOptionInstrMiniMarginField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrMiniMarginField)) ({#set CThostFtdcOptionInstrMiniMarginField->BrokerID#} p)
    {#set CThostFtdcOptionInstrMiniMarginField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcOptionInstrMiniMarginField))
    withText (instrumentID (s :: CThostFtdcOptionInstrMiniMarginField)) ({#set CThostFtdcOptionInstrMiniMarginField->InstrumentID#} p)

instance Storable CThostFtdcQryMMOptionInstrCommRateField where
  sizeOf _ = {#sizeof CThostFtdcQryMMOptionInstrCommRateField#}
  alignment _ = {#alignof CThostFtdcQryMMOptionInstrCommRateField#}
  peek p =
    CThostFtdcQryMMOptionInstrCommRateField <$>
    (({#get CThostFtdcQryMMOptionInstrCommRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMMOptionInstrCommRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMMOptionInstrCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMMOptionInstrCommRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryMMOptionInstrCommRateField)) ({#set CThostFtdcQryMMOptionInstrCommRateField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryMMOptionInstrCommRateField)) ({#set CThostFtdcQryMMOptionInstrCommRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryMMOptionInstrCommRateField)) ({#set CThostFtdcQryMMOptionInstrCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryMMOptionInstrCommRateField)) ({#set CThostFtdcQryMMOptionInstrCommRateField->BrokerID#} p)

instance Storable CThostFtdcExchangeExecOrderActionErrorField where
  sizeOf _ = {#sizeof CThostFtdcExchangeExecOrderActionErrorField#}
  alignment _ = {#alignof CThostFtdcExchangeExecOrderActionErrorField#}
  peek p =
    CThostFtdcExchangeExecOrderActionErrorField <$>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderActionErrorField->ErrorID#} p) <*>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->ExecOrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeExecOrderActionErrorField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->ExecOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeExecOrderActionErrorField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->BrokerID#} p)
    withText (errorMsg (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->ErrorMsg#} p)
    {#set CThostFtdcExchangeExecOrderActionErrorField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcExchangeExecOrderActionErrorField))
    withText (actionLocalID (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->ActionLocalID#} p)
    withText (execOrderLocalID (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->ExecOrderLocalID#} p)
    {#set CThostFtdcExchangeExecOrderActionErrorField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeExecOrderActionErrorField))
    withText (traderID (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->TraderID#} p)
    withText (execOrderSysID (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->ExecOrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeExecOrderActionErrorField)) ({#set CThostFtdcExchangeExecOrderActionErrorField->ExchangeID#} p)

instance Storable CThostFtdcQueryMaxOrderVolumeField where
  sizeOf _ = {#sizeof CThostFtdcQueryMaxOrderVolumeField#}
  alignment _ = {#alignof CThostFtdcQueryMaxOrderVolumeField#}
  peek p =
    CThostFtdcQueryMaxOrderVolumeField <$>
    (({#get CThostFtdcQueryMaxOrderVolumeField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQueryMaxOrderVolumeField->MaxVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQueryMaxOrderVolumeField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQueryMaxOrderVolumeField->OffsetFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQueryMaxOrderVolumeField->Direction#} p) <*>
    (({#get CThostFtdcQueryMaxOrderVolumeField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQueryMaxOrderVolumeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQueryMaxOrderVolumeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQueryMaxOrderVolumeField)) ({#set CThostFtdcQueryMaxOrderVolumeField->ExchangeID#} p)
    {#set CThostFtdcQueryMaxOrderVolumeField->MaxVolume#} p (fromIntegral $ maxVolume (s :: CThostFtdcQueryMaxOrderVolumeField))
    {#set CThostFtdcQueryMaxOrderVolumeField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQueryMaxOrderVolumeField))
    {#set CThostFtdcQueryMaxOrderVolumeField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcQueryMaxOrderVolumeField))
    {#set CThostFtdcQueryMaxOrderVolumeField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcQueryMaxOrderVolumeField))
    withText (instrumentID (s :: CThostFtdcQueryMaxOrderVolumeField)) ({#set CThostFtdcQueryMaxOrderVolumeField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQueryMaxOrderVolumeField)) ({#set CThostFtdcQueryMaxOrderVolumeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQueryMaxOrderVolumeField)) ({#set CThostFtdcQueryMaxOrderVolumeField->BrokerID#} p)

instance Storable CThostFtdcOptionInstrMarginGuardField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrMarginGuardField#}
  alignment _ = {#alignof CThostFtdcOptionInstrMarginGuardField#}
  peek p =
    CThostFtdcOptionInstrMarginGuardField <$>
    (({#get CThostFtdcOptionInstrMarginGuardField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOptionInstrMarginGuardField->IsRelative#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginGuardField->AShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginGuardField->AShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginGuardField->HShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginGuardField->HShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginGuardField->SShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrMarginGuardField->SShortMarginRatioByMoney#} p) <*>
    (({#get CThostFtdcOptionInstrMarginGuardField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrMarginGuardField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrMarginGuardField->InvestorRange#} p) <*>
    (({#get CThostFtdcOptionInstrMarginGuardField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcOptionInstrMarginGuardField)) ({#set CThostFtdcOptionInstrMarginGuardField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrMarginGuardField->IsRelative#} p (fromIntegral $ isRelative (s :: CThostFtdcOptionInstrMarginGuardField))
    {#set CThostFtdcOptionInstrMarginGuardField->AShortMarginRatioByVolume#} p (realToFrac $ aShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginGuardField))
    {#set CThostFtdcOptionInstrMarginGuardField->AShortMarginRatioByMoney#} p (realToFrac $ aShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginGuardField))
    {#set CThostFtdcOptionInstrMarginGuardField->HShortMarginRatioByVolume#} p (realToFrac $ hShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginGuardField))
    {#set CThostFtdcOptionInstrMarginGuardField->HShortMarginRatioByMoney#} p (realToFrac $ hShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginGuardField))
    {#set CThostFtdcOptionInstrMarginGuardField->SShortMarginRatioByVolume#} p (realToFrac $ sShortMarginRatioByVolume (s :: CThostFtdcOptionInstrMarginGuardField))
    {#set CThostFtdcOptionInstrMarginGuardField->SShortMarginRatioByMoney#} p (realToFrac $ sShortMarginRatioByMoney (s :: CThostFtdcOptionInstrMarginGuardField))
    withText (investorID (s :: CThostFtdcOptionInstrMarginGuardField)) ({#set CThostFtdcOptionInstrMarginGuardField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrMarginGuardField)) ({#set CThostFtdcOptionInstrMarginGuardField->BrokerID#} p)
    {#set CThostFtdcOptionInstrMarginGuardField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcOptionInstrMarginGuardField))
    withText (instrumentID (s :: CThostFtdcOptionInstrMarginGuardField)) ({#set CThostFtdcOptionInstrMarginGuardField->InstrumentID#} p)

instance Storable CThostFtdcBrokerUserRightAssignField where
  sizeOf _ = {#sizeof CThostFtdcBrokerUserRightAssignField#}
  alignment _ = {#alignof CThostFtdcBrokerUserRightAssignField#}
  peek p =
    CThostFtdcBrokerUserRightAssignField <$>
    fmap fromIntegral ({#get CThostFtdcBrokerUserRightAssignField->Tradeable#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBrokerUserRightAssignField->DRIdentityID#} p) <*>
    (({#get CThostFtdcBrokerUserRightAssignField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerUserRightAssignField->Tradeable#} p (fromIntegral $ tradeable (s :: CThostFtdcBrokerUserRightAssignField))
    {#set CThostFtdcBrokerUserRightAssignField->DRIdentityID#} p (fromIntegral $ dRIdentityID (s :: CThostFtdcBrokerUserRightAssignField))
    withText (brokerID (s :: CThostFtdcBrokerUserRightAssignField)) ({#set CThostFtdcBrokerUserRightAssignField->BrokerID#} p)

instance Storable CThostFtdcInputStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcInputStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcInputStockDisposalActionField#}
  peek p =
    CThostFtdcInputStockDisposalActionField <$>
    (({#get CThostFtdcInputStockDisposalActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputStockDisposalActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcInputStockDisposalActionField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputStockDisposalActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputStockDisposalActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputStockDisposalActionField->RequestID#} p) <*>
    (({#get CThostFtdcInputStockDisposalActionField->StockDisposalRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputStockDisposalActionField->StockDisposalActionRef#} p) <*>
    (({#get CThostFtdcInputStockDisposalActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputStockDisposalActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (instrumentID (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->UserID#} p)
    {#set CThostFtdcInputStockDisposalActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcInputStockDisposalActionField))
    withText (stockDisposalSysID (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->StockDisposalSysID#} p)
    withText (exchangeID (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->ExchangeID#} p)
    {#set CThostFtdcInputStockDisposalActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcInputStockDisposalActionField))
    {#set CThostFtdcInputStockDisposalActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcInputStockDisposalActionField))
    {#set CThostFtdcInputStockDisposalActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputStockDisposalActionField))
    withText (stockDisposalRef (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->StockDisposalRef#} p)
    {#set CThostFtdcInputStockDisposalActionField->StockDisposalActionRef#} p (fromIntegral $ stockDisposalActionRef (s :: CThostFtdcInputStockDisposalActionField))
    withText (investorID (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputStockDisposalActionField)) ({#set CThostFtdcInputStockDisposalActionField->BrokerID#} p)

instance Storable CThostFtdcQryBrokerUserEventField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerUserEventField#}
  alignment _ = {#alignof CThostFtdcQryBrokerUserEventField#}
  peek p =
    CThostFtdcQryBrokerUserEventField <$>
    fmap castCCharToChar ({#get CThostFtdcQryBrokerUserEventField->UserEventType#} p) <*>
    (({#get CThostFtdcQryBrokerUserEventField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerUserEventField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryBrokerUserEventField->UserEventType#} p (castCharToCChar $ userEventType (s :: CThostFtdcQryBrokerUserEventField))
    withText (userID (s :: CThostFtdcQryBrokerUserEventField)) ({#set CThostFtdcQryBrokerUserEventField->UserID#} p)
    withText (brokerID (s :: CThostFtdcQryBrokerUserEventField)) ({#set CThostFtdcQryBrokerUserEventField->BrokerID#} p)

instance Storable CThostFtdcExchangeBatchOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcExchangeBatchOrderActionField#}
  alignment _ = {#alignof CThostFtdcExchangeBatchOrderActionField#}
  peek p =
    CThostFtdcExchangeBatchOrderActionField <$>
    (({#get CThostFtdcExchangeBatchOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeBatchOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeBatchOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->ActionDate#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeBatchOrderActionField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->IPAddress#} p)
    withText (userID (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->UserID#} p)
    {#set CThostFtdcExchangeBatchOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcExchangeBatchOrderActionField))
    withText (businessUnit (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->ActionLocalID#} p)
    {#set CThostFtdcExchangeBatchOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeBatchOrderActionField))
    withText (traderID (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->ActionDate#} p)
    withText (exchangeID (s :: CThostFtdcExchangeBatchOrderActionField)) ({#set CThostFtdcExchangeBatchOrderActionField->ExchangeID#} p)

instance Storable CThostFtdcReqDayEndFileReadyField where
  sizeOf _ = {#sizeof CThostFtdcReqDayEndFileReadyField#}
  alignment _ = {#alignof CThostFtdcReqDayEndFileReadyField#}
  peek p =
    CThostFtdcReqDayEndFileReadyField <$>
    (({#get CThostFtdcReqDayEndFileReadyField->Digest#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqDayEndFileReadyField->FileBusinessCode#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqDayEndFileReadyField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqDayEndFileReadyField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqDayEndFileReadyField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqDayEndFileReadyField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (digest (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->Digest#} p)
    {#set CThostFtdcReqDayEndFileReadyField->FileBusinessCode#} p (castCharToCChar $ fileBusinessCode (s :: CThostFtdcReqDayEndFileReadyField))
    {#set CThostFtdcReqDayEndFileReadyField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqDayEndFileReadyField))
    {#set CThostFtdcReqDayEndFileReadyField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqDayEndFileReadyField))
    {#set CThostFtdcReqDayEndFileReadyField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqDayEndFileReadyField))
    withText (tradingDay (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqDayEndFileReadyField)) ({#set CThostFtdcReqDayEndFileReadyField->TradeCode#} p)

instance Storable CThostFtdcTradingAccountPasswordUpdateField where
  sizeOf _ = {#sizeof CThostFtdcTradingAccountPasswordUpdateField#}
  alignment _ = {#alignof CThostFtdcTradingAccountPasswordUpdateField#}
  peek p =
    CThostFtdcTradingAccountPasswordUpdateField <$>
    (({#get CThostFtdcTradingAccountPasswordUpdateField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateField->NewPassword#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateField->OldPassword#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcTradingAccountPasswordUpdateField)) ({#set CThostFtdcTradingAccountPasswordUpdateField->CurrencyID#} p)
    withText (newPassword (s :: CThostFtdcTradingAccountPasswordUpdateField)) ({#set CThostFtdcTradingAccountPasswordUpdateField->NewPassword#} p)
    withText (oldPassword (s :: CThostFtdcTradingAccountPasswordUpdateField)) ({#set CThostFtdcTradingAccountPasswordUpdateField->OldPassword#} p)
    withText (accountID (s :: CThostFtdcTradingAccountPasswordUpdateField)) ({#set CThostFtdcTradingAccountPasswordUpdateField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcTradingAccountPasswordUpdateField)) ({#set CThostFtdcTradingAccountPasswordUpdateField->BrokerID#} p)

instance Storable CThostFtdcLimitPosiParamSField where
  sizeOf _ = {#sizeof CThostFtdcLimitPosiParamSField#}
  alignment _ = {#alignof CThostFtdcLimitPosiParamSField#}
  peek p =
    CThostFtdcLimitPosiParamSField <$>
    fmap fromIntegral ({#get CThostFtdcLimitPosiParamSField->OpenVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLimitPosiParamSField->TotalVolume#} p) <*>
    (({#get CThostFtdcLimitPosiParamSField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiParamSField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLimitPosiParamSField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcLimitPosiParamSField->InvestorRange#} p) <*>
    (({#get CThostFtdcLimitPosiParamSField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcLimitPosiParamSField->OpenVolume#} p (fromIntegral $ openVolume (s :: CThostFtdcLimitPosiParamSField))
    {#set CThostFtdcLimitPosiParamSField->TotalVolume#} p (fromIntegral $ totalVolume (s :: CThostFtdcLimitPosiParamSField))
    withText (exchangeID (s :: CThostFtdcLimitPosiParamSField)) ({#set CThostFtdcLimitPosiParamSField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcLimitPosiParamSField)) ({#set CThostFtdcLimitPosiParamSField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLimitPosiParamSField)) ({#set CThostFtdcLimitPosiParamSField->BrokerID#} p)
    {#set CThostFtdcLimitPosiParamSField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcLimitPosiParamSField))
    withText (instrumentID (s :: CThostFtdcLimitPosiParamSField)) ({#set CThostFtdcLimitPosiParamSField->InstrumentID#} p)

instance Storable CThostFtdcQryInvestorPositionDetailField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorPositionDetailField#}
  alignment _ = {#alignof CThostFtdcQryInvestorPositionDetailField#}
  peek p =
    CThostFtdcQryInvestorPositionDetailField <$>
    (({#get CThostFtdcQryInvestorPositionDetailField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionDetailField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionDetailField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionDetailField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryInvestorPositionDetailField)) ({#set CThostFtdcQryInvestorPositionDetailField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryInvestorPositionDetailField)) ({#set CThostFtdcQryInvestorPositionDetailField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInvestorPositionDetailField)) ({#set CThostFtdcQryInvestorPositionDetailField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInvestorPositionDetailField)) ({#set CThostFtdcQryInvestorPositionDetailField->BrokerID#} p)

instance Storable CThostFtdcQryInvestorPositionCombineDetailField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorPositionCombineDetailField#}
  alignment _ = {#alignof CThostFtdcQryInvestorPositionCombineDetailField#}
  peek p =
    CThostFtdcQryInvestorPositionCombineDetailField <$>
    (({#get CThostFtdcQryInvestorPositionCombineDetailField->CombInstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionCombineDetailField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionCombineDetailField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (combInstrumentID (s :: CThostFtdcQryInvestorPositionCombineDetailField)) ({#set CThostFtdcQryInvestorPositionCombineDetailField->CombInstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInvestorPositionCombineDetailField)) ({#set CThostFtdcQryInvestorPositionCombineDetailField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInvestorPositionCombineDetailField)) ({#set CThostFtdcQryInvestorPositionCombineDetailField->BrokerID#} p)

instance Storable CThostFtdcQryCombinationLegField where
  sizeOf _ = {#sizeof CThostFtdcQryCombinationLegField#}
  alignment _ = {#alignof CThostFtdcQryCombinationLegField#}
  peek p =
    CThostFtdcQryCombinationLegField <$>
    (({#get CThostFtdcQryCombinationLegField->LegInstrumentID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQryCombinationLegField->LegID#} p) <*>
    (({#get CThostFtdcQryCombinationLegField->CombInstrumentID#} p) >>= peekText)
  poke p s = do
    withText (legInstrumentID (s :: CThostFtdcQryCombinationLegField)) ({#set CThostFtdcQryCombinationLegField->LegInstrumentID#} p)
    {#set CThostFtdcQryCombinationLegField->LegID#} p (fromIntegral $ legID (s :: CThostFtdcQryCombinationLegField))
    withText (combInstrumentID (s :: CThostFtdcQryCombinationLegField)) ({#set CThostFtdcQryCombinationLegField->CombInstrumentID#} p)

instance Storable CThostFtdcSyncingInstrumentMarginRateField where
  sizeOf _ = {#sizeof CThostFtdcSyncingInstrumentMarginRateField#}
  alignment _ = {#alignof CThostFtdcSyncingInstrumentMarginRateField#}
  peek p =
    CThostFtdcSyncingInstrumentMarginRateField <$>
    fmap fromIntegral ({#get CThostFtdcSyncingInstrumentMarginRateField->IsRelative#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentMarginRateField->ShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentMarginRateField->ShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentMarginRateField->LongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentMarginRateField->LongMarginRatioByMoney#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInstrumentMarginRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcSyncingInstrumentMarginRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInstrumentMarginRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInstrumentMarginRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcSyncingInstrumentMarginRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSyncingInstrumentMarginRateField->IsRelative#} p (fromIntegral $ isRelative (s :: CThostFtdcSyncingInstrumentMarginRateField))
    {#set CThostFtdcSyncingInstrumentMarginRateField->ShortMarginRatioByVolume#} p (realToFrac $ shortMarginRatioByVolume (s :: CThostFtdcSyncingInstrumentMarginRateField))
    {#set CThostFtdcSyncingInstrumentMarginRateField->ShortMarginRatioByMoney#} p (realToFrac $ shortMarginRatioByMoney (s :: CThostFtdcSyncingInstrumentMarginRateField))
    {#set CThostFtdcSyncingInstrumentMarginRateField->LongMarginRatioByVolume#} p (realToFrac $ longMarginRatioByVolume (s :: CThostFtdcSyncingInstrumentMarginRateField))
    {#set CThostFtdcSyncingInstrumentMarginRateField->LongMarginRatioByMoney#} p (realToFrac $ longMarginRatioByMoney (s :: CThostFtdcSyncingInstrumentMarginRateField))
    {#set CThostFtdcSyncingInstrumentMarginRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcSyncingInstrumentMarginRateField))
    withText (investorID (s :: CThostFtdcSyncingInstrumentMarginRateField)) ({#set CThostFtdcSyncingInstrumentMarginRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSyncingInstrumentMarginRateField)) ({#set CThostFtdcSyncingInstrumentMarginRateField->BrokerID#} p)
    {#set CThostFtdcSyncingInstrumentMarginRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcSyncingInstrumentMarginRateField))
    withText (instrumentID (s :: CThostFtdcSyncingInstrumentMarginRateField)) ({#set CThostFtdcSyncingInstrumentMarginRateField->InstrumentID#} p)

instance Storable CThostFtdcQryCombInstrumentGuardField where
  sizeOf _ = {#sizeof CThostFtdcQryCombInstrumentGuardField#}
  alignment _ = {#alignof CThostFtdcQryCombInstrumentGuardField#}
  peek p =
    CThostFtdcQryCombInstrumentGuardField <$>
    (({#get CThostFtdcQryCombInstrumentGuardField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryCombInstrumentGuardField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (instrumentID (s :: CThostFtdcQryCombInstrumentGuardField)) ({#set CThostFtdcQryCombInstrumentGuardField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcQryCombInstrumentGuardField)) ({#set CThostFtdcQryCombInstrumentGuardField->BrokerID#} p)

instance Storable CThostFtdcLockField where
  sizeOf _ = {#sizeof CThostFtdcLockField#}
  alignment _ = {#alignof CThostFtdcLockField#}
  peek p =
    CThostFtdcLockField <$>
    (({#get CThostFtdcLockField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->BrokerLockSeq#} p) <*>
    (({#get CThostFtdcLockField->ActiveUserID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->SequenceNo#} p) <*>
    (({#get CThostFtdcLockField->ClearingPartID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcLockField->LockStatus#} p) <*>
    (({#get CThostFtdcLockField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->InsertDate#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->LockSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->SettlementID#} p) <*>
    (({#get CThostFtdcLockField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcLockField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->InstallID#} p) <*>
    (({#get CThostFtdcLockField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->LockLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcLockField->LockType#} p) <*>
    (({#get CThostFtdcLockField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLockField->Volume#} p) <*>
    (({#get CThostFtdcLockField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->LockRef#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->BranchID#} p)
    {#set CThostFtdcLockField->BrokerLockSeq#} p (fromIntegral $ brokerLockSeq (s :: CThostFtdcLockField))
    withText (activeUserID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->ActiveUserID#} p)
    withText (statusMsg (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->UserProductInfo#} p)
    {#set CThostFtdcLockField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcLockField))
    {#set CThostFtdcLockField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcLockField))
    {#set CThostFtdcLockField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcLockField))
    withText (clearingPartID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->ClearingPartID#} p)
    {#set CThostFtdcLockField->LockStatus#} p (castCharToCChar $ lockStatus (s :: CThostFtdcLockField))
    withText (cancelTime (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->CancelTime#} p)
    withText (insertTime (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->InsertDate#} p)
    withText (lockSysID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->LockSysID#} p)
    {#set CThostFtdcLockField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcLockField))
    withText (tradingDay (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->TradingDay#} p)
    {#set CThostFtdcLockField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcLockField))
    {#set CThostFtdcLockField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcLockField))
    {#set CThostFtdcLockField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcLockField))
    withText (traderID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->ClientID#} p)
    withText (participantID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->ExchangeID#} p)
    withText (lockLocalID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->LockLocalID#} p)
    {#set CThostFtdcLockField->LockType#} p (castCharToCChar $ lockType (s :: CThostFtdcLockField))
    withText (businessUnit (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->BusinessUnit#} p)
    {#set CThostFtdcLockField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcLockField))
    {#set CThostFtdcLockField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcLockField))
    withText (userID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->UserID#} p)
    withText (lockRef (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->LockRef#} p)
    withText (instrumentID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLockField)) ({#set CThostFtdcLockField->BrokerID#} p)

instance Storable CThostFtdcQryTransferSerialField where
  sizeOf _ = {#sizeof CThostFtdcQryTransferSerialField#}
  alignment _ = {#alignof CThostFtdcQryTransferSerialField#}
  peek p =
    CThostFtdcQryTransferSerialField <$>
    (({#get CThostFtdcQryTransferSerialField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTransferSerialField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTransferSerialField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTransferSerialField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcQryTransferSerialField)) ({#set CThostFtdcQryTransferSerialField->CurrencyID#} p)
    withText (bankID (s :: CThostFtdcQryTransferSerialField)) ({#set CThostFtdcQryTransferSerialField->BankID#} p)
    withText (accountID (s :: CThostFtdcQryTransferSerialField)) ({#set CThostFtdcQryTransferSerialField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcQryTransferSerialField)) ({#set CThostFtdcQryTransferSerialField->BrokerID#} p)

instance Storable CThostFtdcQryTradingAccountField where
  sizeOf _ = {#sizeof CThostFtdcQryTradingAccountField#}
  alignment _ = {#alignof CThostFtdcQryTradingAccountField#}
  peek p =
    CThostFtdcQryTradingAccountField <$>
    fmap castCCharToChar ({#get CThostFtdcQryTradingAccountField->BizType#} p) <*>
    (({#get CThostFtdcQryTradingAccountField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradingAccountField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradingAccountField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryTradingAccountField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcQryTradingAccountField))
    withText (currencyID (s :: CThostFtdcQryTradingAccountField)) ({#set CThostFtdcQryTradingAccountField->CurrencyID#} p)
    withText (investorID (s :: CThostFtdcQryTradingAccountField)) ({#set CThostFtdcQryTradingAccountField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryTradingAccountField)) ({#set CThostFtdcQryTradingAccountField->BrokerID#} p)

instance Storable CThostFtdcQryInstrumentOrderCommRateField where
  sizeOf _ = {#sizeof CThostFtdcQryInstrumentOrderCommRateField#}
  alignment _ = {#alignof CThostFtdcQryInstrumentOrderCommRateField#}
  peek p =
    CThostFtdcQryInstrumentOrderCommRateField <$>
    (({#get CThostFtdcQryInstrumentOrderCommRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentOrderCommRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentOrderCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentOrderCommRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryInstrumentOrderCommRateField)) ({#set CThostFtdcQryInstrumentOrderCommRateField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryInstrumentOrderCommRateField)) ({#set CThostFtdcQryInstrumentOrderCommRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInstrumentOrderCommRateField)) ({#set CThostFtdcQryInstrumentOrderCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInstrumentOrderCommRateField)) ({#set CThostFtdcQryInstrumentOrderCommRateField->BrokerID#} p)

instance Storable CThostFtdcInputForQuoteField where
  sizeOf _ = {#sizeof CThostFtdcInputForQuoteField#}
  alignment _ = {#alignof CThostFtdcInputForQuoteField#}
  peek p =
    CThostFtdcInputForQuoteField <$>
    (({#get CThostFtdcInputForQuoteField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->ForQuoteRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputForQuoteField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->InvestUnitID#} p)
    withText (exchangeID (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->ExchangeID#} p)
    withText (userID (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->UserID#} p)
    withText (forQuoteRef (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->ForQuoteRef#} p)
    withText (instrumentID (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputForQuoteField)) ({#set CThostFtdcInputForQuoteField->BrokerID#} p)

instance Storable CThostFtdcSecAgentACIDMapField where
  sizeOf _ = {#sizeof CThostFtdcSecAgentACIDMapField#}
  alignment _ = {#alignof CThostFtdcSecAgentACIDMapField#}
  peek p =
    CThostFtdcSecAgentACIDMapField <$>
    (({#get CThostFtdcSecAgentACIDMapField->BrokerSecAgentID#} p) >>= peekText) <*>
    (({#get CThostFtdcSecAgentACIDMapField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcSecAgentACIDMapField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcSecAgentACIDMapField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcSecAgentACIDMapField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerSecAgentID (s :: CThostFtdcSecAgentACIDMapField)) ({#set CThostFtdcSecAgentACIDMapField->BrokerSecAgentID#} p)
    withText (currencyID (s :: CThostFtdcSecAgentACIDMapField)) ({#set CThostFtdcSecAgentACIDMapField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcSecAgentACIDMapField)) ({#set CThostFtdcSecAgentACIDMapField->AccountID#} p)
    withText (userID (s :: CThostFtdcSecAgentACIDMapField)) ({#set CThostFtdcSecAgentACIDMapField->UserID#} p)
    withText (brokerID (s :: CThostFtdcSecAgentACIDMapField)) ({#set CThostFtdcSecAgentACIDMapField->BrokerID#} p)

instance Storable CThostFtdcVerifyFuturePasswordAndCustInfoField where
  sizeOf _ = {#sizeof CThostFtdcVerifyFuturePasswordAndCustInfoField#}
  alignment _ = {#alignof CThostFtdcVerifyFuturePasswordAndCustInfoField#}
  peek p =
    CThostFtdcVerifyFuturePasswordAndCustInfoField <$>
    (({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->AccountID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->CustType#} p) <*>
    (({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->IdCardType#} p) <*>
    (({#get CThostFtdcVerifyFuturePasswordAndCustInfoField->CustomerName#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField)) ({#set CThostFtdcVerifyFuturePasswordAndCustInfoField->CurrencyID#} p)
    withText (password (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField)) ({#set CThostFtdcVerifyFuturePasswordAndCustInfoField->Password#} p)
    withText (accountID (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField)) ({#set CThostFtdcVerifyFuturePasswordAndCustInfoField->AccountID#} p)
    {#set CThostFtdcVerifyFuturePasswordAndCustInfoField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField))
    withText (identifiedCardNo (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField)) ({#set CThostFtdcVerifyFuturePasswordAndCustInfoField->IdentifiedCardNo#} p)
    {#set CThostFtdcVerifyFuturePasswordAndCustInfoField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField))
    withText (customerName (s :: CThostFtdcVerifyFuturePasswordAndCustInfoField)) ({#set CThostFtdcVerifyFuturePasswordAndCustInfoField->CustomerName#} p)

instance Storable CThostFtdcRemoveParkedOrderField where
  sizeOf _ = {#sizeof CThostFtdcRemoveParkedOrderField#}
  alignment _ = {#alignof CThostFtdcRemoveParkedOrderField#}
  peek p =
    CThostFtdcRemoveParkedOrderField <$>
    (({#get CThostFtdcRemoveParkedOrderField->ParkedOrderID#} p) >>= peekText) <*>
    (({#get CThostFtdcRemoveParkedOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcRemoveParkedOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (parkedOrderID (s :: CThostFtdcRemoveParkedOrderField)) ({#set CThostFtdcRemoveParkedOrderField->ParkedOrderID#} p)
    withText (investorID (s :: CThostFtdcRemoveParkedOrderField)) ({#set CThostFtdcRemoveParkedOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcRemoveParkedOrderField)) ({#set CThostFtdcRemoveParkedOrderField->BrokerID#} p)

instance Storable CThostFtdcQryEWarrantOffsetField where
  sizeOf _ = {#sizeof CThostFtdcQryEWarrantOffsetField#}
  alignment _ = {#alignof CThostFtdcQryEWarrantOffsetField#}
  peek p =
    CThostFtdcQryEWarrantOffsetField <$>
    (({#get CThostFtdcQryEWarrantOffsetField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryEWarrantOffsetField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryEWarrantOffsetField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryEWarrantOffsetField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (instrumentID (s :: CThostFtdcQryEWarrantOffsetField)) ({#set CThostFtdcQryEWarrantOffsetField->InstrumentID#} p)
    withText (exchangeID (s :: CThostFtdcQryEWarrantOffsetField)) ({#set CThostFtdcQryEWarrantOffsetField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryEWarrantOffsetField)) ({#set CThostFtdcQryEWarrantOffsetField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryEWarrantOffsetField)) ({#set CThostFtdcQryEWarrantOffsetField->BrokerID#} p)

instance Storable CThostFtdcCFMMCBrokerKeyField where
  sizeOf _ = {#sizeof CThostFtdcCFMMCBrokerKeyField#}
  alignment _ = {#alignof CThostFtdcCFMMCBrokerKeyField#}
  peek p =
    CThostFtdcCFMMCBrokerKeyField <$>
    fmap castCCharToChar ({#get CThostFtdcCFMMCBrokerKeyField->KeyKind#} p) <*>
    (({#get CThostFtdcCFMMCBrokerKeyField->CurrentKey#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCFMMCBrokerKeyField->KeyID#} p) <*>
    (({#get CThostFtdcCFMMCBrokerKeyField->CreateTime#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCBrokerKeyField->CreateDate#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCBrokerKeyField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCBrokerKeyField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcCFMMCBrokerKeyField->KeyKind#} p (castCharToCChar $ keyKind (s :: CThostFtdcCFMMCBrokerKeyField))
    withText (currentKey (s :: CThostFtdcCFMMCBrokerKeyField)) ({#set CThostFtdcCFMMCBrokerKeyField->CurrentKey#} p)
    {#set CThostFtdcCFMMCBrokerKeyField->KeyID#} p (fromIntegral $ keyID (s :: CThostFtdcCFMMCBrokerKeyField))
    withText (createTime (s :: CThostFtdcCFMMCBrokerKeyField)) ({#set CThostFtdcCFMMCBrokerKeyField->CreateTime#} p)
    withText (createDate (s :: CThostFtdcCFMMCBrokerKeyField)) ({#set CThostFtdcCFMMCBrokerKeyField->CreateDate#} p)
    withText (participantID (s :: CThostFtdcCFMMCBrokerKeyField)) ({#set CThostFtdcCFMMCBrokerKeyField->ParticipantID#} p)
    withText (brokerID (s :: CThostFtdcCFMMCBrokerKeyField)) ({#set CThostFtdcCFMMCBrokerKeyField->BrokerID#} p)

instance Storable CThostFtdcStockDisposalField where
  sizeOf _ = {#sizeof CThostFtdcStockDisposalField#}
  alignment _ = {#alignof CThostFtdcStockDisposalField#}
  peek p =
    CThostFtdcStockDisposalField <$>
    (({#get CThostFtdcStockDisposalField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalField->FrontID#} p) <*>
    (({#get CThostFtdcStockDisposalField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalField->SettlementID#} p) <*>
    (({#get CThostFtdcStockDisposalField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcStockDisposalField->StockDisposalStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalField->InstallID#} p) <*>
    (({#get CThostFtdcStockDisposalField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->StockDisposalLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcStockDisposalField->StockDisposalType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalField->Volume#} p) <*>
    (({#get CThostFtdcStockDisposalField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->StockDisposalRef#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (businessUnit (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->BusinessUnit#} p)
    withText (stockDisposalSysID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->StockDisposalSysID#} p)
    withText (branchID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->BranchID#} p)
    withText (statusMsg (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->UserProductInfo#} p)
    {#set CThostFtdcStockDisposalField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcStockDisposalField))
    {#set CThostFtdcStockDisposalField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcStockDisposalField))
    withText (insertTime (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->InsertDate#} p)
    {#set CThostFtdcStockDisposalField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcStockDisposalField))
    withText (tradingDay (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->TradingDay#} p)
    {#set CThostFtdcStockDisposalField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcStockDisposalField))
    {#set CThostFtdcStockDisposalField->StockDisposalStatus#} p (castCharToCChar $ stockDisposalStatus (s :: CThostFtdcStockDisposalField))
    {#set CThostFtdcStockDisposalField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcStockDisposalField))
    withText (traderID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->TraderID#} p)
    withText (clientID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->ClientID#} p)
    withText (participantID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->ParticipantID#} p)
    withText (exchangeInstID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->ExchangeID#} p)
    withText (stockDisposalLocalID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->StockDisposalLocalID#} p)
    {#set CThostFtdcStockDisposalField->StockDisposalType#} p (castCharToCChar $ stockDisposalType (s :: CThostFtdcStockDisposalField))
    {#set CThostFtdcStockDisposalField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcStockDisposalField))
    withText (instrumentID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->UserID#} p)
    withText (stockDisposalRef (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->StockDisposalRef#} p)
    withText (investorID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcStockDisposalField)) ({#set CThostFtdcStockDisposalField->BrokerID#} p)

instance Storable CThostFtdcBulletinField where
  sizeOf _ = {#sizeof CThostFtdcBulletinField#}
  alignment _ = {#alignof CThostFtdcBulletinField#}
  peek p =
    CThostFtdcBulletinField <$>
    (({#get CThostFtdcBulletinField->MarketID#} p) >>= peekText) <*>
    (({#get CThostFtdcBulletinField->URLLink#} p) >>= peekText) <*>
    (({#get CThostFtdcBulletinField->Content#} p) >>= peekText) <*>
    (({#get CThostFtdcBulletinField->ComeFrom#} p) >>= peekText) <*>
    (({#get CThostFtdcBulletinField->Abstract#} p) >>= peekText) <*>
    (({#get CThostFtdcBulletinField->SendTime#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcBulletinField->NewsUrgency#} p) <*>
    (({#get CThostFtdcBulletinField->NewsType#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcBulletinField->SequenceNo#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBulletinField->BulletinID#} p) <*>
    (({#get CThostFtdcBulletinField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcBulletinField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (marketID (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->MarketID#} p)
    withText (uRLLink (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->URLLink#} p)
    withText (content (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->Content#} p)
    withText (comeFrom (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->ComeFrom#} p)
    withText (abstract (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->Abstract#} p)
    withText (sendTime (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->SendTime#} p)
    {#set CThostFtdcBulletinField->NewsUrgency#} p (castCharToCChar $ newsUrgency (s :: CThostFtdcBulletinField))
    withText (newsType (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->NewsType#} p)
    {#set CThostFtdcBulletinField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcBulletinField))
    {#set CThostFtdcBulletinField->BulletinID#} p (fromIntegral $ bulletinID (s :: CThostFtdcBulletinField))
    withText (tradingDay (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->TradingDay#} p)
    withText (exchangeID (s :: CThostFtdcBulletinField)) ({#set CThostFtdcBulletinField->ExchangeID#} p)

instance Storable CThostFtdcQryETFOptionInstrCommRateField where
  sizeOf _ = {#sizeof CThostFtdcQryETFOptionInstrCommRateField#}
  alignment _ = {#alignof CThostFtdcQryETFOptionInstrCommRateField#}
  peek p =
    CThostFtdcQryETFOptionInstrCommRateField <$>
    (({#get CThostFtdcQryETFOptionInstrCommRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryETFOptionInstrCommRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryETFOptionInstrCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryETFOptionInstrCommRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryETFOptionInstrCommRateField)) ({#set CThostFtdcQryETFOptionInstrCommRateField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryETFOptionInstrCommRateField)) ({#set CThostFtdcQryETFOptionInstrCommRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryETFOptionInstrCommRateField)) ({#set CThostFtdcQryETFOptionInstrCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryETFOptionInstrCommRateField)) ({#set CThostFtdcQryETFOptionInstrCommRateField->BrokerID#} p)

instance Storable CThostFtdcMarketDataAsk45Field where
  sizeOf _ = {#sizeof CThostFtdcMarketDataAsk45Field#}
  alignment _ = {#alignof CThostFtdcMarketDataAsk45Field#}
  peek p =
    CThostFtdcMarketDataAsk45Field <$>
    fmap fromIntegral ({#get CThostFtdcMarketDataAsk45Field->AskVolume5#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataAsk45Field->AskPrice5#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataAsk45Field->AskVolume4#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataAsk45Field->AskPrice4#} p)
  poke p s = do
    {#set CThostFtdcMarketDataAsk45Field->AskVolume5#} p (fromIntegral $ askVolume5 (s :: CThostFtdcMarketDataAsk45Field))
    {#set CThostFtdcMarketDataAsk45Field->AskPrice5#} p (realToFrac $ askPrice5 (s :: CThostFtdcMarketDataAsk45Field))
    {#set CThostFtdcMarketDataAsk45Field->AskVolume4#} p (fromIntegral $ askVolume4 (s :: CThostFtdcMarketDataAsk45Field))
    {#set CThostFtdcMarketDataAsk45Field->AskPrice4#} p (realToFrac $ askPrice4 (s :: CThostFtdcMarketDataAsk45Field))

instance Storable CThostFtdcMarketDataBid45Field where
  sizeOf _ = {#sizeof CThostFtdcMarketDataBid45Field#}
  alignment _ = {#alignof CThostFtdcMarketDataBid45Field#}
  peek p =
    CThostFtdcMarketDataBid45Field <$>
    fmap fromIntegral ({#get CThostFtdcMarketDataBid45Field->BidVolume5#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBid45Field->BidPrice5#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataBid45Field->BidVolume4#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBid45Field->BidPrice4#} p)
  poke p s = do
    {#set CThostFtdcMarketDataBid45Field->BidVolume5#} p (fromIntegral $ bidVolume5 (s :: CThostFtdcMarketDataBid45Field))
    {#set CThostFtdcMarketDataBid45Field->BidPrice5#} p (realToFrac $ bidPrice5 (s :: CThostFtdcMarketDataBid45Field))
    {#set CThostFtdcMarketDataBid45Field->BidVolume4#} p (fromIntegral $ bidVolume4 (s :: CThostFtdcMarketDataBid45Field))
    {#set CThostFtdcMarketDataBid45Field->BidPrice4#} p (realToFrac $ bidPrice4 (s :: CThostFtdcMarketDataBid45Field))

instance Storable CThostFtdcQryInvestorProductGroupMarginField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorProductGroupMarginField#}
  alignment _ = {#alignof CThostFtdcQryInvestorProductGroupMarginField#}
  peek p =
    CThostFtdcQryInvestorProductGroupMarginField <$>
    fmap castCCharToChar ({#get CThostFtdcQryInvestorProductGroupMarginField->HedgeFlag#} p) <*>
    (({#get CThostFtdcQryInvestorProductGroupMarginField->ProductGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorProductGroupMarginField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorProductGroupMarginField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryInvestorProductGroupMarginField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQryInvestorProductGroupMarginField))
    withText (productGroupID (s :: CThostFtdcQryInvestorProductGroupMarginField)) ({#set CThostFtdcQryInvestorProductGroupMarginField->ProductGroupID#} p)
    withText (investorID (s :: CThostFtdcQryInvestorProductGroupMarginField)) ({#set CThostFtdcQryInvestorProductGroupMarginField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInvestorProductGroupMarginField)) ({#set CThostFtdcQryInvestorProductGroupMarginField->BrokerID#} p)

instance Storable CThostFtdcTraderField where
  sizeOf _ = {#sizeof CThostFtdcTraderField#}
  alignment _ = {#alignof CThostFtdcTraderField#}
  peek p =
    CThostFtdcTraderField <$>
    (({#get CThostFtdcTraderField->BrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTraderField->InstallCount#} p) <*>
    (({#get CThostFtdcTraderField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcTraderField)) ({#set CThostFtdcTraderField->BrokerID#} p)
    {#set CThostFtdcTraderField->InstallCount#} p (fromIntegral $ installCount (s :: CThostFtdcTraderField))
    withText (password (s :: CThostFtdcTraderField)) ({#set CThostFtdcTraderField->Password#} p)
    withText (participantID (s :: CThostFtdcTraderField)) ({#set CThostFtdcTraderField->ParticipantID#} p)
    withText (traderID (s :: CThostFtdcTraderField)) ({#set CThostFtdcTraderField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcTraderField)) ({#set CThostFtdcTraderField->ExchangeID#} p)

instance Storable CThostFtdcBrokerField where
  sizeOf _ = {#sizeof CThostFtdcBrokerField#}
  alignment _ = {#alignof CThostFtdcBrokerField#}
  peek p =
    CThostFtdcBrokerField <$>
    fmap fromIntegral ({#get CThostFtdcBrokerField->IsActive#} p) <*>
    (({#get CThostFtdcBrokerField->BrokerName#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerField->BrokerAbbr#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcBrokerField))
    withText (brokerName (s :: CThostFtdcBrokerField)) ({#set CThostFtdcBrokerField->BrokerName#} p)
    withText (brokerAbbr (s :: CThostFtdcBrokerField)) ({#set CThostFtdcBrokerField->BrokerAbbr#} p)
    withText (brokerID (s :: CThostFtdcBrokerField)) ({#set CThostFtdcBrokerField->BrokerID#} p)

instance Storable CThostFtdcDBFRecordField where
  sizeOf _ = {#sizeof CThostFtdcDBFRecordField#}
  alignment _ = {#alignof CThostFtdcDBFRecordField#}
  peek p =
    CThostFtdcDBFRecordField <$>
    (({#get CThostFtdcDBFRecordField->DBFFdContent4#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdName4#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdContent3#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdName3#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdContent2#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdName2#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdContent1#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFFdName1#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFComNo#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFOComNo#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFComTime#} p) >>= peekText) <*>
    (({#get CThostFtdcDBFRecordField->DBFComdType#} p) >>= peekText)
  poke p s = do
    withText (dBFFdContent4 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdContent4#} p)
    withText (dBFFdName4 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdName4#} p)
    withText (dBFFdContent3 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdContent3#} p)
    withText (dBFFdName3 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdName3#} p)
    withText (dBFFdContent2 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdContent2#} p)
    withText (dBFFdName2 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdName2#} p)
    withText (dBFFdContent1 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdContent1#} p)
    withText (dBFFdName1 (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFFdName1#} p)
    withText (dBFComNo (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFComNo#} p)
    withText (dBFOComNo (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFOComNo#} p)
    withText (dBFComTime (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFComTime#} p)
    withText (dBFComdType (s :: CThostFtdcDBFRecordField)) ({#set CThostFtdcDBFRecordField->DBFComdType#} p)

instance Storable CThostFtdcExchangeField where
  sizeOf _ = {#sizeof CThostFtdcExchangeField#}
  alignment _ = {#alignof CThostFtdcExchangeField#}
  peek p =
    CThostFtdcExchangeField <$>
    fmap castCCharToChar ({#get CThostFtdcExchangeField->ExchangeProperty#} p) <*>
    (({#get CThostFtdcExchangeField->ExchangeName#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExchangeField->ExchangeProperty#} p (castCharToCChar $ exchangeProperty (s :: CThostFtdcExchangeField))
    withText (exchangeName (s :: CThostFtdcExchangeField)) ({#set CThostFtdcExchangeField->ExchangeName#} p)
    withText (exchangeID (s :: CThostFtdcExchangeField)) ({#set CThostFtdcExchangeField->ExchangeID#} p)

instance Storable CThostFtdcQryCFMMCBrokerKeyField where
  sizeOf _ = {#sizeof CThostFtdcQryCFMMCBrokerKeyField#}
  alignment _ = {#alignof CThostFtdcQryCFMMCBrokerKeyField#}
  peek p =
    CThostFtdcQryCFMMCBrokerKeyField <$>
    (({#get CThostFtdcQryCFMMCBrokerKeyField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcQryCFMMCBrokerKeyField)) ({#set CThostFtdcQryCFMMCBrokerKeyField->BrokerID#} p)

instance Storable CThostFtdcMarketDataAsk23Field where
  sizeOf _ = {#sizeof CThostFtdcMarketDataAsk23Field#}
  alignment _ = {#alignof CThostFtdcMarketDataAsk23Field#}
  peek p =
    CThostFtdcMarketDataAsk23Field <$>
    fmap fromIntegral ({#get CThostFtdcMarketDataAsk23Field->AskVolume3#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataAsk23Field->AskPrice3#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataAsk23Field->AskVolume2#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataAsk23Field->AskPrice2#} p)
  poke p s = do
    {#set CThostFtdcMarketDataAsk23Field->AskVolume3#} p (fromIntegral $ askVolume3 (s :: CThostFtdcMarketDataAsk23Field))
    {#set CThostFtdcMarketDataAsk23Field->AskPrice3#} p (realToFrac $ askPrice3 (s :: CThostFtdcMarketDataAsk23Field))
    {#set CThostFtdcMarketDataAsk23Field->AskVolume2#} p (fromIntegral $ askVolume2 (s :: CThostFtdcMarketDataAsk23Field))
    {#set CThostFtdcMarketDataAsk23Field->AskPrice2#} p (realToFrac $ askPrice2 (s :: CThostFtdcMarketDataAsk23Field))

instance Storable CThostFtdcMarketDataBid23Field where
  sizeOf _ = {#sizeof CThostFtdcMarketDataBid23Field#}
  alignment _ = {#alignof CThostFtdcMarketDataBid23Field#}
  peek p =
    CThostFtdcMarketDataBid23Field <$>
    fmap fromIntegral ({#get CThostFtdcMarketDataBid23Field->BidVolume3#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBid23Field->BidPrice3#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataBid23Field->BidVolume2#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataBid23Field->BidPrice2#} p)
  poke p s = do
    {#set CThostFtdcMarketDataBid23Field->BidVolume3#} p (fromIntegral $ bidVolume3 (s :: CThostFtdcMarketDataBid23Field))
    {#set CThostFtdcMarketDataBid23Field->BidPrice3#} p (realToFrac $ bidPrice3 (s :: CThostFtdcMarketDataBid23Field))
    {#set CThostFtdcMarketDataBid23Field->BidVolume2#} p (fromIntegral $ bidVolume2 (s :: CThostFtdcMarketDataBid23Field))
    {#set CThostFtdcMarketDataBid23Field->BidPrice2#} p (realToFrac $ bidPrice2 (s :: CThostFtdcMarketDataBid23Field))

instance Storable CThostFtdcQryErrExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryErrExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryErrExecOrderActionField#}
  peek p =
    CThostFtdcQryErrExecOrderActionField <$>
    (({#get CThostFtdcQryErrExecOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryErrExecOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryErrExecOrderActionField)) ({#set CThostFtdcQryErrExecOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryErrExecOrderActionField)) ({#set CThostFtdcQryErrExecOrderActionField->BrokerID#} p)

instance Storable CThostFtdcSyncStatusField where
  sizeOf _ = {#sizeof CThostFtdcSyncStatusField#}
  alignment _ = {#alignof CThostFtdcSyncStatusField#}
  peek p =
    CThostFtdcSyncStatusField <$>
    fmap castCCharToChar ({#get CThostFtdcSyncStatusField->DataSyncStatus#} p) <*>
    (({#get CThostFtdcSyncStatusField->TradingDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSyncStatusField->DataSyncStatus#} p (castCharToCChar $ dataSyncStatus (s :: CThostFtdcSyncStatusField))
    withText (tradingDay (s :: CThostFtdcSyncStatusField)) ({#set CThostFtdcSyncStatusField->TradingDay#} p)

instance Storable CThostFtdcMarketDataAveragePriceField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataAveragePriceField#}
  alignment _ = {#alignof CThostFtdcMarketDataAveragePriceField#}
  peek p =
    CThostFtdcMarketDataAveragePriceField <$>
    fmap realToFrac ({#get CThostFtdcMarketDataAveragePriceField->AveragePrice#} p)
  poke p s = do
    {#set CThostFtdcMarketDataAveragePriceField->AveragePrice#} p (realToFrac $ averagePrice (s :: CThostFtdcMarketDataAveragePriceField))

instance Storable CThostFtdcInvestorField where
  sizeOf _ = {#sizeof CThostFtdcInvestorField#}
  alignment _ = {#alignof CThostFtdcInvestorField#}
  peek p =
    CThostFtdcInvestorField <$>
    (({#get CThostFtdcInvestorField->MarginModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->CommModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->Mobile#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->OpenDate#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->Address#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->Telephone#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorField->IsActive#} p) <*>
    (({#get CThostFtdcInvestorField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorField->IdentifiedCardType#} p) <*>
    (({#get CThostFtdcInvestorField->InvestorName#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->InvestorGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorField->InvestorID#} p) >>= peekText)
  poke p s = do
    withText (marginModelID (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->MarginModelID#} p)
    withText (commModelID (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->CommModelID#} p)
    withText (mobile (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->Mobile#} p)
    withText (openDate (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->OpenDate#} p)
    withText (address (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->Address#} p)
    withText (telephone (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->Telephone#} p)
    {#set CThostFtdcInvestorField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcInvestorField))
    withText (identifiedCardNo (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->IdentifiedCardNo#} p)
    {#set CThostFtdcInvestorField->IdentifiedCardType#} p (castCharToCChar $ identifiedCardType (s :: CThostFtdcInvestorField))
    withText (investorName (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->InvestorName#} p)
    withText (investorGroupID (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->InvestorGroupID#} p)
    withText (brokerID (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->BrokerID#} p)
    withText (investorID (s :: CThostFtdcInvestorField)) ({#set CThostFtdcInvestorField->InvestorID#} p)

instance Storable CThostFtdcSyncingTradingAccountField where
  sizeOf _ = {#sizeof CThostFtdcSyncingTradingAccountField#}
  alignment _ = {#alignof CThostFtdcSyncingTradingAccountField#}
  peek p =
    CThostFtdcSyncingTradingAccountField <$>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductExchangeMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductPositionProfitByAlg#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductCloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductPositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductFrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductFrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->SpecProductMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->MortgageableFund#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->FundMortgageAvailable#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->FundMortgageOut#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->FundMortgageIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreFundMortgageOut#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreFundMortgageIn#} p) <*>
    (({#get CThostFtdcSyncingTradingAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->ReserveBalance#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->ExchangeDeliveryMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->DeliveryMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->ExchangeMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Mortgage#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Credit#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingTradingAccountField->SettlementID#} p) <*>
    (({#get CThostFtdcSyncingTradingAccountField->TradingDay#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Reserve#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->WithdrawQuota#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Available#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Balance#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->CloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Commission#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->CashIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->CurrMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->FrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->FrozenCash#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->FrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Withdraw#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Deposit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->Interest#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->InterestBase#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreBalance#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreDeposit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreCredit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingTradingAccountField->PreMortgage#} p) <*>
    (({#get CThostFtdcSyncingTradingAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingTradingAccountField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSyncingTradingAccountField->SpecProductExchangeMargin#} p (realToFrac $ specProductExchangeMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductPositionProfitByAlg#} p (realToFrac $ specProductPositionProfitByAlg (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductCloseProfit#} p (realToFrac $ specProductCloseProfit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductPositionProfit#} p (realToFrac $ specProductPositionProfit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductFrozenCommission#} p (realToFrac $ specProductFrozenCommission (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductCommission#} p (realToFrac $ specProductCommission (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductFrozenMargin#} p (realToFrac $ specProductFrozenMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SpecProductMargin#} p (realToFrac $ specProductMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->MortgageableFund#} p (realToFrac $ mortgageableFund (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->FundMortgageAvailable#} p (realToFrac $ fundMortgageAvailable (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->FundMortgageOut#} p (realToFrac $ fundMortgageOut (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->FundMortgageIn#} p (realToFrac $ fundMortgageIn (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreFundMortgageOut#} p (realToFrac $ preFundMortgageOut (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreFundMortgageIn#} p (realToFrac $ preFundMortgageIn (s :: CThostFtdcSyncingTradingAccountField))
    withText (currencyID (s :: CThostFtdcSyncingTradingAccountField)) ({#set CThostFtdcSyncingTradingAccountField->CurrencyID#} p)
    {#set CThostFtdcSyncingTradingAccountField->ReserveBalance#} p (realToFrac $ reserveBalance (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->ExchangeDeliveryMargin#} p (realToFrac $ exchangeDeliveryMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->DeliveryMargin#} p (realToFrac $ deliveryMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->ExchangeMargin#} p (realToFrac $ exchangeMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Mortgage#} p (realToFrac $ mortgage (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Credit#} p (realToFrac $ credit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcSyncingTradingAccountField))
    withText (tradingDay (s :: CThostFtdcSyncingTradingAccountField)) ({#set CThostFtdcSyncingTradingAccountField->TradingDay#} p)
    {#set CThostFtdcSyncingTradingAccountField->Reserve#} p (realToFrac $ reserve (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->WithdrawQuota#} p (realToFrac $ withdrawQuota (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Available#} p (realToFrac $ available (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Balance#} p (realToFrac $ balance (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PositionProfit#} p (realToFrac $ positionProfit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->CloseProfit#} p (realToFrac $ closeProfit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Commission#} p (realToFrac $ commission (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->CashIn#} p (realToFrac $ cashIn (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->CurrMargin#} p (realToFrac $ currMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->FrozenCommission#} p (realToFrac $ frozenCommission (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->FrozenCash#} p (realToFrac $ frozenCash (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->FrozenMargin#} p (realToFrac $ frozenMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Withdraw#} p (realToFrac $ withdraw (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Deposit#} p (realToFrac $ deposit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->Interest#} p (realToFrac $ interest (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->InterestBase#} p (realToFrac $ interestBase (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreMargin#} p (realToFrac $ preMargin (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreBalance#} p (realToFrac $ preBalance (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreDeposit#} p (realToFrac $ preDeposit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreCredit#} p (realToFrac $ preCredit (s :: CThostFtdcSyncingTradingAccountField))
    {#set CThostFtdcSyncingTradingAccountField->PreMortgage#} p (realToFrac $ preMortgage (s :: CThostFtdcSyncingTradingAccountField))
    withText (accountID (s :: CThostFtdcSyncingTradingAccountField)) ({#set CThostFtdcSyncingTradingAccountField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcSyncingTradingAccountField)) ({#set CThostFtdcSyncingTradingAccountField->BrokerID#} p)

instance Storable CThostFtdcMMInstrumentCommissionRateField where
  sizeOf _ = {#sizeof CThostFtdcMMInstrumentCommissionRateField#}
  alignment _ = {#alignof CThostFtdcMMInstrumentCommissionRateField#}
  peek p =
    CThostFtdcMMInstrumentCommissionRateField <$>
    (({#get CThostFtdcMMInstrumentCommissionRateField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcMMInstrumentCommissionRateField->CloseTodayRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMInstrumentCommissionRateField->CloseTodayRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMInstrumentCommissionRateField->CloseRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMInstrumentCommissionRateField->CloseRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMInstrumentCommissionRateField->OpenRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMMInstrumentCommissionRateField->OpenRatioByMoney#} p) <*>
    (({#get CThostFtdcMMInstrumentCommissionRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcMMInstrumentCommissionRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcMMInstrumentCommissionRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcMMInstrumentCommissionRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcMMInstrumentCommissionRateField)) ({#set CThostFtdcMMInstrumentCommissionRateField->ExchangeID#} p)
    {#set CThostFtdcMMInstrumentCommissionRateField->CloseTodayRatioByVolume#} p (realToFrac $ closeTodayRatioByVolume (s :: CThostFtdcMMInstrumentCommissionRateField))
    {#set CThostFtdcMMInstrumentCommissionRateField->CloseTodayRatioByMoney#} p (realToFrac $ closeTodayRatioByMoney (s :: CThostFtdcMMInstrumentCommissionRateField))
    {#set CThostFtdcMMInstrumentCommissionRateField->CloseRatioByVolume#} p (realToFrac $ closeRatioByVolume (s :: CThostFtdcMMInstrumentCommissionRateField))
    {#set CThostFtdcMMInstrumentCommissionRateField->CloseRatioByMoney#} p (realToFrac $ closeRatioByMoney (s :: CThostFtdcMMInstrumentCommissionRateField))
    {#set CThostFtdcMMInstrumentCommissionRateField->OpenRatioByVolume#} p (realToFrac $ openRatioByVolume (s :: CThostFtdcMMInstrumentCommissionRateField))
    {#set CThostFtdcMMInstrumentCommissionRateField->OpenRatioByMoney#} p (realToFrac $ openRatioByMoney (s :: CThostFtdcMMInstrumentCommissionRateField))
    withText (investorID (s :: CThostFtdcMMInstrumentCommissionRateField)) ({#set CThostFtdcMMInstrumentCommissionRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcMMInstrumentCommissionRateField)) ({#set CThostFtdcMMInstrumentCommissionRateField->BrokerID#} p)
    {#set CThostFtdcMMInstrumentCommissionRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcMMInstrumentCommissionRateField))
    withText (instrumentID (s :: CThostFtdcMMInstrumentCommissionRateField)) ({#set CThostFtdcMMInstrumentCommissionRateField->InstrumentID#} p)

instance Storable CThostFtdcQryQuoteField where
  sizeOf _ = {#sizeof CThostFtdcQryQuoteField#}
  alignment _ = {#alignof CThostFtdcQryQuoteField#}
  peek p =
    CThostFtdcQryQuoteField <$>
    (({#get CThostFtdcQryQuoteField->InsertTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteField->InsertTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteField->QuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (insertTimeEnd (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->InsertTimeEnd#} p)
    withText (insertTimeStart (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->InsertTimeStart#} p)
    withText (quoteSysID (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->QuoteSysID#} p)
    withText (exchangeID (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryQuoteField)) ({#set CThostFtdcQryQuoteField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeCombActionField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeCombActionField#}
  alignment _ = {#alignof CThostFtdcQryExchangeCombActionField#}
  peek p =
    CThostFtdcQryExchangeCombActionField <$>
    (({#get CThostFtdcQryExchangeCombActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeCombActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeCombActionField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeCombActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeCombActionField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeCombActionField)) ({#set CThostFtdcQryExchangeCombActionField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeCombActionField)) ({#set CThostFtdcQryExchangeCombActionField->ExchangeID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryExchangeCombActionField)) ({#set CThostFtdcQryExchangeCombActionField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeCombActionField)) ({#set CThostFtdcQryExchangeCombActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeCombActionField)) ({#set CThostFtdcQryExchangeCombActionField->ParticipantID#} p)

instance Storable CThostFtdcParkedOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcParkedOrderActionField#}
  alignment _ = {#alignof CThostFtdcParkedOrderActionField#}
  peek p =
    CThostFtdcParkedOrderActionField <$>
    (({#get CThostFtdcParkedOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderActionField->ErrorID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderActionField->Status#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderActionField->UserType#} p) <*>
    (({#get CThostFtdcParkedOrderActionField->ParkedOrderActionID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderActionField->VolumeChange#} p) <*>
    fmap realToFrac ({#get CThostFtdcParkedOrderActionField->LimitPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcParkedOrderActionField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcParkedOrderActionField->OrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderActionField->OrderActionRef#} p) <*>
    (({#get CThostFtdcParkedOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->InvestUnitID#} p)
    withText (errorMsg (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->ErrorMsg#} p)
    {#set CThostFtdcParkedOrderActionField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcParkedOrderActionField))
    {#set CThostFtdcParkedOrderActionField->Status#} p (castCharToCChar $ status (s :: CThostFtdcParkedOrderActionField))
    {#set CThostFtdcParkedOrderActionField->UserType#} p (castCharToCChar $ userType (s :: CThostFtdcParkedOrderActionField))
    withText (parkedOrderActionID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->ParkedOrderActionID#} p)
    withText (instrumentID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->UserID#} p)
    {#set CThostFtdcParkedOrderActionField->VolumeChange#} p (fromIntegral $ volumeChange (s :: CThostFtdcParkedOrderActionField))
    {#set CThostFtdcParkedOrderActionField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcParkedOrderActionField))
    {#set CThostFtdcParkedOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcParkedOrderActionField))
    withText (orderSysID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->ExchangeID#} p)
    {#set CThostFtdcParkedOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcParkedOrderActionField))
    {#set CThostFtdcParkedOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcParkedOrderActionField))
    {#set CThostFtdcParkedOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcParkedOrderActionField))
    withText (orderRef (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->OrderRef#} p)
    {#set CThostFtdcParkedOrderActionField->OrderActionRef#} p (fromIntegral $ orderActionRef (s :: CThostFtdcParkedOrderActionField))
    withText (investorID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcParkedOrderActionField)) ({#set CThostFtdcParkedOrderActionField->BrokerID#} p)

instance Storable CThostFtdcQryInstrumentCommissionRateField where
  sizeOf _ = {#sizeof CThostFtdcQryInstrumentCommissionRateField#}
  alignment _ = {#alignof CThostFtdcQryInstrumentCommissionRateField#}
  peek p =
    CThostFtdcQryInstrumentCommissionRateField <$>
    (({#get CThostFtdcQryInstrumentCommissionRateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentCommissionRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentCommissionRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentCommissionRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryInstrumentCommissionRateField)) ({#set CThostFtdcQryInstrumentCommissionRateField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryInstrumentCommissionRateField)) ({#set CThostFtdcQryInstrumentCommissionRateField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInstrumentCommissionRateField)) ({#set CThostFtdcQryInstrumentCommissionRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInstrumentCommissionRateField)) ({#set CThostFtdcQryInstrumentCommissionRateField->BrokerID#} p)

instance Storable CThostFtdcManualSyncBrokerUserOTPField where
  sizeOf _ = {#sizeof CThostFtdcManualSyncBrokerUserOTPField#}
  alignment _ = {#alignof CThostFtdcManualSyncBrokerUserOTPField#}
  peek p =
    CThostFtdcManualSyncBrokerUserOTPField <$>
    (({#get CThostFtdcManualSyncBrokerUserOTPField->SecondOTP#} p) >>= peekText) <*>
    (({#get CThostFtdcManualSyncBrokerUserOTPField->FirstOTP#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcManualSyncBrokerUserOTPField->OTPType#} p) <*>
    (({#get CThostFtdcManualSyncBrokerUserOTPField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcManualSyncBrokerUserOTPField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (secondOTP (s :: CThostFtdcManualSyncBrokerUserOTPField)) ({#set CThostFtdcManualSyncBrokerUserOTPField->SecondOTP#} p)
    withText (firstOTP (s :: CThostFtdcManualSyncBrokerUserOTPField)) ({#set CThostFtdcManualSyncBrokerUserOTPField->FirstOTP#} p)
    {#set CThostFtdcManualSyncBrokerUserOTPField->OTPType#} p (castCharToCChar $ oTPType (s :: CThostFtdcManualSyncBrokerUserOTPField))
    withText (userID (s :: CThostFtdcManualSyncBrokerUserOTPField)) ({#set CThostFtdcManualSyncBrokerUserOTPField->UserID#} p)
    withText (brokerID (s :: CThostFtdcManualSyncBrokerUserOTPField)) ({#set CThostFtdcManualSyncBrokerUserOTPField->BrokerID#} p)

instance Storable CThostFtdcTradingNoticeInfoField where
  sizeOf _ = {#sizeof CThostFtdcTradingNoticeInfoField#}
  alignment _ = {#alignof CThostFtdcTradingNoticeInfoField#}
  peek p =
    CThostFtdcTradingNoticeInfoField <$>
    fmap fromIntegral ({#get CThostFtdcTradingNoticeInfoField->SequenceNo#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTradingNoticeInfoField->SequenceSeries#} p) <*>
    (({#get CThostFtdcTradingNoticeInfoField->FieldContent#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingNoticeInfoField->SendTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingNoticeInfoField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingNoticeInfoField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTradingNoticeInfoField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcTradingNoticeInfoField))
    {#set CThostFtdcTradingNoticeInfoField->SequenceSeries#} p (fromIntegral $ sequenceSeries (s :: CThostFtdcTradingNoticeInfoField))
    withText (fieldContent (s :: CThostFtdcTradingNoticeInfoField)) ({#set CThostFtdcTradingNoticeInfoField->FieldContent#} p)
    withText (sendTime (s :: CThostFtdcTradingNoticeInfoField)) ({#set CThostFtdcTradingNoticeInfoField->SendTime#} p)
    withText (investorID (s :: CThostFtdcTradingNoticeInfoField)) ({#set CThostFtdcTradingNoticeInfoField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcTradingNoticeInfoField)) ({#set CThostFtdcTradingNoticeInfoField->BrokerID#} p)

instance Storable CThostFtdcTradingAccountReserveField where
  sizeOf _ = {#sizeof CThostFtdcTradingAccountReserveField#}
  alignment _ = {#alignof CThostFtdcTradingAccountReserveField#}
  peek p =
    CThostFtdcTradingAccountReserveField <$>
    (({#get CThostFtdcTradingAccountReserveField->CurrencyID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountReserveField->Reserve#} p) <*>
    (({#get CThostFtdcTradingAccountReserveField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountReserveField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcTradingAccountReserveField)) ({#set CThostFtdcTradingAccountReserveField->CurrencyID#} p)
    {#set CThostFtdcTradingAccountReserveField->Reserve#} p (realToFrac $ reserve (s :: CThostFtdcTradingAccountReserveField))
    withText (accountID (s :: CThostFtdcTradingAccountReserveField)) ({#set CThostFtdcTradingAccountReserveField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcTradingAccountReserveField)) ({#set CThostFtdcTradingAccountReserveField->BrokerID#} p)

instance Storable CThostFtdcInputExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcInputExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcInputExecOrderActionField#}
  peek p =
    CThostFtdcInputExecOrderActionField <$>
    (({#get CThostFtdcInputExecOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputExecOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcInputExecOrderActionField->ExecOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputExecOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputExecOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputExecOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcInputExecOrderActionField->ExecOrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputExecOrderActionField->ExecOrderActionRef#} p) <*>
    (({#get CThostFtdcInputExecOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputExecOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->InvestUnitID#} p)
    withText (instrumentID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->InstrumentID#} p)
    withText (userID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->UserID#} p)
    {#set CThostFtdcInputExecOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcInputExecOrderActionField))
    withText (execOrderSysID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->ExecOrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->ExchangeID#} p)
    {#set CThostFtdcInputExecOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcInputExecOrderActionField))
    {#set CThostFtdcInputExecOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcInputExecOrderActionField))
    {#set CThostFtdcInputExecOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputExecOrderActionField))
    withText (execOrderRef (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->ExecOrderRef#} p)
    {#set CThostFtdcInputExecOrderActionField->ExecOrderActionRef#} p (fromIntegral $ execOrderActionRef (s :: CThostFtdcInputExecOrderActionField))
    withText (investorID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputExecOrderActionField)) ({#set CThostFtdcInputExecOrderActionField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcQryExchangeStockDisposalActionField#}
  peek p =
    CThostFtdcQryExchangeStockDisposalActionField <$>
    (({#get CThostFtdcQryExchangeStockDisposalActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeStockDisposalActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeStockDisposalActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeStockDisposalActionField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeStockDisposalActionField)) ({#set CThostFtdcQryExchangeStockDisposalActionField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeStockDisposalActionField)) ({#set CThostFtdcQryExchangeStockDisposalActionField->ExchangeID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeStockDisposalActionField)) ({#set CThostFtdcQryExchangeStockDisposalActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeStockDisposalActionField)) ({#set CThostFtdcQryExchangeStockDisposalActionField->ParticipantID#} p)

instance Storable CThostFtdcQrySettlementInfoField where
  sizeOf _ = {#sizeof CThostFtdcQrySettlementInfoField#}
  alignment _ = {#alignof CThostFtdcQrySettlementInfoField#}
  peek p =
    CThostFtdcQrySettlementInfoField <$>
    (({#get CThostFtdcQrySettlementInfoField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySettlementInfoField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySettlementInfoField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (tradingDay (s :: CThostFtdcQrySettlementInfoField)) ({#set CThostFtdcQrySettlementInfoField->TradingDay#} p)
    withText (investorID (s :: CThostFtdcQrySettlementInfoField)) ({#set CThostFtdcQrySettlementInfoField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQrySettlementInfoField)) ({#set CThostFtdcQrySettlementInfoField->BrokerID#} p)

instance Storable CThostFtdcInputCombActionField where
  sizeOf _ = {#sizeof CThostFtdcInputCombActionField#}
  alignment _ = {#alignof CThostFtdcInputCombActionField#}
  peek p =
    CThostFtdcInputCombActionField <$>
    (({#get CThostFtdcInputCombActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputCombActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputCombActionField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputCombActionField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputCombActionField->CombDirection#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputCombActionField->Volume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputCombActionField->Direction#} p) <*>
    (({#get CThostFtdcInputCombActionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputCombActionField->CombActionRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputCombActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputCombActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputCombActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->IPAddress#} p)
    withText (exchangeID (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->ExchangeID#} p)
    {#set CThostFtdcInputCombActionField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInputCombActionField))
    {#set CThostFtdcInputCombActionField->CombDirection#} p (castCharToCChar $ combDirection (s :: CThostFtdcInputCombActionField))
    {#set CThostFtdcInputCombActionField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcInputCombActionField))
    {#set CThostFtdcInputCombActionField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcInputCombActionField))
    withText (userID (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->UserID#} p)
    withText (combActionRef (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->CombActionRef#} p)
    withText (instrumentID (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputCombActionField)) ({#set CThostFtdcInputCombActionField->BrokerID#} p)

instance Storable CThostFtdcForQuoteField where
  sizeOf _ = {#sizeof CThostFtdcForQuoteField#}
  alignment _ = {#alignof CThostFtdcForQuoteField#}
  peek p =
    CThostFtdcForQuoteField <$>
    (({#get CThostFtdcForQuoteField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->InvestUnitID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcForQuoteField->BrokerForQutoSeq#} p) <*>
    (({#get CThostFtdcForQuoteField->ActiveUserID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->StatusMsg#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcForQuoteField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcForQuoteField->FrontID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcForQuoteField->ForQuoteStatus#} p) <*>
    (({#get CThostFtdcForQuoteField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcForQuoteField->InstallID#} p) <*>
    (({#get CThostFtdcForQuoteField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->ForQuoteLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->ForQuoteRef#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->BranchID#} p)
    withText (macAddress (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->InvestUnitID#} p)
    {#set CThostFtdcForQuoteField->BrokerForQutoSeq#} p (fromIntegral $ brokerForQutoSeq (s :: CThostFtdcForQuoteField))
    withText (activeUserID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ActiveUserID#} p)
    withText (statusMsg (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->StatusMsg#} p)
    {#set CThostFtdcForQuoteField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcForQuoteField))
    {#set CThostFtdcForQuoteField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcForQuoteField))
    {#set CThostFtdcForQuoteField->ForQuoteStatus#} p (castCharToCChar $ forQuoteStatus (s :: CThostFtdcForQuoteField))
    withText (insertTime (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->InsertDate#} p)
    {#set CThostFtdcForQuoteField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcForQuoteField))
    withText (traderID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ClientID#} p)
    withText (participantID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ExchangeID#} p)
    withText (forQuoteLocalID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ForQuoteLocalID#} p)
    withText (userID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->UserID#} p)
    withText (forQuoteRef (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->ForQuoteRef#} p)
    withText (instrumentID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcForQuoteField)) ({#set CThostFtdcForQuoteField->BrokerID#} p)

instance Storable CThostFtdcDiscountField where
  sizeOf _ = {#sizeof CThostFtdcDiscountField#}
  alignment _ = {#alignof CThostFtdcDiscountField#}
  peek p =
    CThostFtdcDiscountField <$>
    fmap realToFrac ({#get CThostFtdcDiscountField->Discount#} p) <*>
    (({#get CThostFtdcDiscountField->InvestorID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcDiscountField->InvestorRange#} p) <*>
    (({#get CThostFtdcDiscountField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcDiscountField->Discount#} p (realToFrac $ discount (s :: CThostFtdcDiscountField))
    withText (investorID (s :: CThostFtdcDiscountField)) ({#set CThostFtdcDiscountField->InvestorID#} p)
    {#set CThostFtdcDiscountField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcDiscountField))
    withText (brokerID (s :: CThostFtdcDiscountField)) ({#set CThostFtdcDiscountField->BrokerID#} p)

instance Storable CThostFtdcRspSyncKeyField where
  sizeOf _ = {#sizeof CThostFtdcRspSyncKeyField#}
  alignment _ = {#alignof CThostFtdcRspSyncKeyField#}
  peek p =
    CThostFtdcRspSyncKeyField <$>
    (({#get CThostFtdcRspSyncKeyField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspSyncKeyField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspSyncKeyField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspSyncKeyField->RequestID#} p) <*>
    (({#get CThostFtdcRspSyncKeyField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->Message#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspSyncKeyField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspSyncKeyField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspSyncKeyField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspSyncKeyField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspSyncKeyField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspSyncKeyField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->ErrorMsg#} p)
    {#set CThostFtdcRspSyncKeyField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspSyncKeyField))
    {#set CThostFtdcRspSyncKeyField->TID#} p (fromIntegral $ tID (s :: CThostFtdcRspSyncKeyField))
    {#set CThostFtdcRspSyncKeyField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcRspSyncKeyField))
    withText (operNo (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->DeviceID#} p)
    withText (message (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->Message#} p)
    withText (userID (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->UserID#} p)
    {#set CThostFtdcRspSyncKeyField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcRspSyncKeyField))
    {#set CThostFtdcRspSyncKeyField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspSyncKeyField))
    {#set CThostFtdcRspSyncKeyField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspSyncKeyField))
    {#set CThostFtdcRspSyncKeyField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspSyncKeyField))
    withText (tradingDay (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspSyncKeyField)) ({#set CThostFtdcRspSyncKeyField->TradeCode#} p)

instance Storable CThostFtdcQryExchangeExecOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeExecOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryExchangeExecOrderActionField#}
  peek p =
    CThostFtdcQryExchangeExecOrderActionField <$>
    (({#get CThostFtdcQryExchangeExecOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeExecOrderActionField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeExecOrderActionField)) ({#set CThostFtdcQryExchangeExecOrderActionField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeExecOrderActionField)) ({#set CThostFtdcQryExchangeExecOrderActionField->ExchangeID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeExecOrderActionField)) ({#set CThostFtdcQryExchangeExecOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeExecOrderActionField)) ({#set CThostFtdcQryExchangeExecOrderActionField->ParticipantID#} p)

instance Storable CThostFtdcETFOptionInstrCommRateField where
  sizeOf _ = {#sizeof CThostFtdcETFOptionInstrCommRateField#}
  alignment _ = {#alignof CThostFtdcETFOptionInstrCommRateField#}
  peek p =
    CThostFtdcETFOptionInstrCommRateField <$>
    fmap castCCharToChar ({#get CThostFtdcETFOptionInstrCommRateField->PosiDirection#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcETFOptionInstrCommRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcETFOptionInstrCommRateField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->StrikeRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->StrikeRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->CloseTodayRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->CloseTodayRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->CloseRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->CloseRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->OpenRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcETFOptionInstrCommRateField->OpenRatioByMoney#} p) <*>
    (({#get CThostFtdcETFOptionInstrCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcETFOptionInstrCommRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcETFOptionInstrCommRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcETFOptionInstrCommRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcETFOptionInstrCommRateField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcETFOptionInstrCommRateField))
    withText (exchangeID (s :: CThostFtdcETFOptionInstrCommRateField)) ({#set CThostFtdcETFOptionInstrCommRateField->ExchangeID#} p)
    {#set CThostFtdcETFOptionInstrCommRateField->StrikeRatioByVolume#} p (realToFrac $ strikeRatioByVolume (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->StrikeRatioByMoney#} p (realToFrac $ strikeRatioByMoney (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->CloseTodayRatioByVolume#} p (realToFrac $ closeTodayRatioByVolume (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->CloseTodayRatioByMoney#} p (realToFrac $ closeTodayRatioByMoney (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->CloseRatioByVolume#} p (realToFrac $ closeRatioByVolume (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->CloseRatioByMoney#} p (realToFrac $ closeRatioByMoney (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->OpenRatioByVolume#} p (realToFrac $ openRatioByVolume (s :: CThostFtdcETFOptionInstrCommRateField))
    {#set CThostFtdcETFOptionInstrCommRateField->OpenRatioByMoney#} p (realToFrac $ openRatioByMoney (s :: CThostFtdcETFOptionInstrCommRateField))
    withText (investorID (s :: CThostFtdcETFOptionInstrCommRateField)) ({#set CThostFtdcETFOptionInstrCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcETFOptionInstrCommRateField)) ({#set CThostFtdcETFOptionInstrCommRateField->BrokerID#} p)
    {#set CThostFtdcETFOptionInstrCommRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcETFOptionInstrCommRateField))
    withText (instrumentID (s :: CThostFtdcETFOptionInstrCommRateField)) ({#set CThostFtdcETFOptionInstrCommRateField->InstrumentID#} p)

instance Storable CThostFtdcInstrumentField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentField#}
  alignment _ = {#alignof CThostFtdcInstrumentField#}
  peek p =
    CThostFtdcInstrumentField <$>
    (({#get CThostFtdcInstrumentField->InstrumentCode#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->MinSellVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->MinBuyVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->CombinationType#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentField->UnderlyingMultiple#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->OptionsType#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentField->StrikePrice#} p) <*>
    (({#get CThostFtdcInstrumentField->UnderlyingInstrID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->MaxMarginSideAlgorithm#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentField->ShortMarginRatio#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentField->LongMarginRatio#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->PositionDateType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->PositionType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->IsTrading#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->InstLifePhase#} p) <*>
    (({#get CThostFtdcInstrumentField->EndDelivDate#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->StartDelivDate#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->ExpireDate#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->OpenDate#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->CreateDate#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentField->PriceTick#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->VolumeMultiple#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->MinLimitOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->MaxLimitOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->MinMarketOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->MaxMarketOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->DeliveryMonth#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentField->DeliveryYear#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentField->ProductClass#} p) <*>
    (({#get CThostFtdcInstrumentField->ProductID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->InstrumentName#} p) >>= peekGbkText) <*>
    (({#get CThostFtdcInstrumentField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (instrumentCode (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->InstrumentCode#} p)
    {#set CThostFtdcInstrumentField->MinSellVolume#} p (fromIntegral $ minSellVolume (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->MinBuyVolume#} p (fromIntegral $ minBuyVolume (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->CombinationType#} p (castCharToCChar $ combinationType (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->UnderlyingMultiple#} p (realToFrac $ underlyingMultiple (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->OptionsType#} p (castCharToCChar $ optionsType (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->StrikePrice#} p (realToFrac $ strikePrice (s :: CThostFtdcInstrumentField))
    withText (underlyingInstrID (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->UnderlyingInstrID#} p)
    {#set CThostFtdcInstrumentField->MaxMarginSideAlgorithm#} p (castCharToCChar $ maxMarginSideAlgorithm (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->ShortMarginRatio#} p (realToFrac $ shortMarginRatio (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->LongMarginRatio#} p (realToFrac $ longMarginRatio (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->PositionDateType#} p (castCharToCChar $ positionDateType (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->PositionType#} p (castCharToCChar $ positionType (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->IsTrading#} p (fromIntegral $ isTrading (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->InstLifePhase#} p (castCharToCChar $ instLifePhase (s :: CThostFtdcInstrumentField))
    withText (endDelivDate (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->EndDelivDate#} p)
    withText (startDelivDate (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->StartDelivDate#} p)
    withText (expireDate (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->ExpireDate#} p)
    withText (openDate (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->OpenDate#} p)
    withText (createDate (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->CreateDate#} p)
    {#set CThostFtdcInstrumentField->PriceTick#} p (realToFrac $ priceTick (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->VolumeMultiple#} p (fromIntegral $ volumeMultiple (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->MinLimitOrderVolume#} p (fromIntegral $ minLimitOrderVolume (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->MaxLimitOrderVolume#} p (fromIntegral $ maxLimitOrderVolume (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->MinMarketOrderVolume#} p (fromIntegral $ minMarketOrderVolume (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->MaxMarketOrderVolume#} p (fromIntegral $ maxMarketOrderVolume (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->DeliveryMonth#} p (fromIntegral $ deliveryMonth (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->DeliveryYear#} p (fromIntegral $ deliveryYear (s :: CThostFtdcInstrumentField))
    {#set CThostFtdcInstrumentField->ProductClass#} p (castCharToCChar $ productClass (s :: CThostFtdcInstrumentField))
    withText (productID (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->ProductID#} p)
    withText (exchangeInstID (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->ExchangeInstID#} p)
    withText (instrumentName (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->InstrumentName#} p)
    withText (exchangeID (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcInstrumentField)) ({#set CThostFtdcInstrumentField->InstrumentID#} p)

instance Storable CThostFtdcUserLogoutField where
  sizeOf _ = {#sizeof CThostFtdcUserLogoutField#}
  alignment _ = {#alignof CThostFtdcUserLogoutField#}
  peek p =
    CThostFtdcUserLogoutField <$>
    (({#get CThostFtdcUserLogoutField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcUserLogoutField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcUserLogoutField)) ({#set CThostFtdcUserLogoutField->UserID#} p)
    withText (brokerID (s :: CThostFtdcUserLogoutField)) ({#set CThostFtdcUserLogoutField->BrokerID#} p)

instance Storable CThostFtdcBrokerUserField where
  sizeOf _ = {#sizeof CThostFtdcBrokerUserField#}
  alignment _ = {#alignof CThostFtdcBrokerUserField#}
  peek p =
    CThostFtdcBrokerUserField <$>
    fmap fromIntegral ({#get CThostFtdcBrokerUserField->IsUsingOTP#} p) <*>
    fmap fromIntegral ({#get CThostFtdcBrokerUserField->IsActive#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerUserField->UserType#} p) <*>
    (({#get CThostFtdcBrokerUserField->UserName#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerUserField->IsUsingOTP#} p (fromIntegral $ isUsingOTP (s :: CThostFtdcBrokerUserField))
    {#set CThostFtdcBrokerUserField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcBrokerUserField))
    {#set CThostFtdcBrokerUserField->UserType#} p (castCharToCChar $ userType (s :: CThostFtdcBrokerUserField))
    withText (userName (s :: CThostFtdcBrokerUserField)) ({#set CThostFtdcBrokerUserField->UserName#} p)
    withText (userID (s :: CThostFtdcBrokerUserField)) ({#set CThostFtdcBrokerUserField->UserID#} p)
    withText (brokerID (s :: CThostFtdcBrokerUserField)) ({#set CThostFtdcBrokerUserField->BrokerID#} p)

instance Storable CThostFtdcQryProductField where
  sizeOf _ = {#sizeof CThostFtdcQryProductField#}
  alignment _ = {#alignof CThostFtdcQryProductField#}
  peek p =
    CThostFtdcQryProductField <$>
    (({#get CThostFtdcQryProductField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQryProductField->ProductClass#} p) <*>
    (({#get CThostFtdcQryProductField->ProductID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryProductField)) ({#set CThostFtdcQryProductField->ExchangeID#} p)
    {#set CThostFtdcQryProductField->ProductClass#} p (castCharToCChar $ productClass (s :: CThostFtdcQryProductField))
    withText (productID (s :: CThostFtdcQryProductField)) ({#set CThostFtdcQryProductField->ProductID#} p)

instance Storable CThostFtdcQueryMaxOrderVolumeWithPriceField where
  sizeOf _ = {#sizeof CThostFtdcQueryMaxOrderVolumeWithPriceField#}
  alignment _ = {#alignof CThostFtdcQueryMaxOrderVolumeWithPriceField#}
  peek p =
    CThostFtdcQueryMaxOrderVolumeWithPriceField <$>
    (({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->Price#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->MaxVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->OffsetFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->Direction#} p) <*>
    (({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQueryMaxOrderVolumeWithPriceField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField)) ({#set CThostFtdcQueryMaxOrderVolumeWithPriceField->ExchangeID#} p)
    {#set CThostFtdcQueryMaxOrderVolumeWithPriceField->Price#} p (realToFrac $ price (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField))
    {#set CThostFtdcQueryMaxOrderVolumeWithPriceField->MaxVolume#} p (fromIntegral $ maxVolume (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField))
    {#set CThostFtdcQueryMaxOrderVolumeWithPriceField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField))
    {#set CThostFtdcQueryMaxOrderVolumeWithPriceField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField))
    {#set CThostFtdcQueryMaxOrderVolumeWithPriceField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField))
    withText (instrumentID (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField)) ({#set CThostFtdcQueryMaxOrderVolumeWithPriceField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField)) ({#set CThostFtdcQueryMaxOrderVolumeWithPriceField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQueryMaxOrderVolumeWithPriceField)) ({#set CThostFtdcQueryMaxOrderVolumeWithPriceField->BrokerID#} p)

instance Storable CThostFtdcSettlementInfoConfirmField where
  sizeOf _ = {#sizeof CThostFtdcSettlementInfoConfirmField#}
  alignment _ = {#alignof CThostFtdcSettlementInfoConfirmField#}
  peek p =
    CThostFtdcSettlementInfoConfirmField <$>
    (({#get CThostFtdcSettlementInfoConfirmField->ConfirmTime#} p) >>= peekText) <*>
    (({#get CThostFtdcSettlementInfoConfirmField->ConfirmDate#} p) >>= peekText) <*>
    (({#get CThostFtdcSettlementInfoConfirmField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSettlementInfoConfirmField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (confirmTime (s :: CThostFtdcSettlementInfoConfirmField)) ({#set CThostFtdcSettlementInfoConfirmField->ConfirmTime#} p)
    withText (confirmDate (s :: CThostFtdcSettlementInfoConfirmField)) ({#set CThostFtdcSettlementInfoConfirmField->ConfirmDate#} p)
    withText (investorID (s :: CThostFtdcSettlementInfoConfirmField)) ({#set CThostFtdcSettlementInfoConfirmField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSettlementInfoConfirmField)) ({#set CThostFtdcSettlementInfoConfirmField->BrokerID#} p)

instance Storable CThostFtdcSyncingInstrumentCommissionRateField where
  sizeOf _ = {#sizeof CThostFtdcSyncingInstrumentCommissionRateField#}
  alignment _ = {#alignof CThostFtdcSyncingInstrumentCommissionRateField#}
  peek p =
    CThostFtdcSyncingInstrumentCommissionRateField <$>
    (({#get CThostFtdcSyncingInstrumentCommissionRateField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentCommissionRateField->CloseTodayRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentCommissionRateField->CloseTodayRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentCommissionRateField->CloseRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentCommissionRateField->CloseRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentCommissionRateField->OpenRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInstrumentCommissionRateField->OpenRatioByMoney#} p) <*>
    (({#get CThostFtdcSyncingInstrumentCommissionRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInstrumentCommissionRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInstrumentCommissionRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcSyncingInstrumentCommissionRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcSyncingInstrumentCommissionRateField)) ({#set CThostFtdcSyncingInstrumentCommissionRateField->ExchangeID#} p)
    {#set CThostFtdcSyncingInstrumentCommissionRateField->CloseTodayRatioByVolume#} p (realToFrac $ closeTodayRatioByVolume (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    {#set CThostFtdcSyncingInstrumentCommissionRateField->CloseTodayRatioByMoney#} p (realToFrac $ closeTodayRatioByMoney (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    {#set CThostFtdcSyncingInstrumentCommissionRateField->CloseRatioByVolume#} p (realToFrac $ closeRatioByVolume (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    {#set CThostFtdcSyncingInstrumentCommissionRateField->CloseRatioByMoney#} p (realToFrac $ closeRatioByMoney (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    {#set CThostFtdcSyncingInstrumentCommissionRateField->OpenRatioByVolume#} p (realToFrac $ openRatioByVolume (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    {#set CThostFtdcSyncingInstrumentCommissionRateField->OpenRatioByMoney#} p (realToFrac $ openRatioByMoney (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    withText (investorID (s :: CThostFtdcSyncingInstrumentCommissionRateField)) ({#set CThostFtdcSyncingInstrumentCommissionRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSyncingInstrumentCommissionRateField)) ({#set CThostFtdcSyncingInstrumentCommissionRateField->BrokerID#} p)
    {#set CThostFtdcSyncingInstrumentCommissionRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcSyncingInstrumentCommissionRateField))
    withText (instrumentID (s :: CThostFtdcSyncingInstrumentCommissionRateField)) ({#set CThostFtdcSyncingInstrumentCommissionRateField->InstrumentID#} p)

instance Storable CThostFtdcNoticeField where
  sizeOf _ = {#sizeof CThostFtdcNoticeField#}
  alignment _ = {#alignof CThostFtdcNoticeField#}
  peek p =
    CThostFtdcNoticeField <$>
    (({#get CThostFtdcNoticeField->SequenceLabel#} p) >>= peekText) <*>
    (({#get CThostFtdcNoticeField->Content#} p) >>= peekText) <*>
    (({#get CThostFtdcNoticeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (sequenceLabel (s :: CThostFtdcNoticeField)) ({#set CThostFtdcNoticeField->SequenceLabel#} p)
    withText (content (s :: CThostFtdcNoticeField)) ({#set CThostFtdcNoticeField->Content#} p)
    withText (brokerID (s :: CThostFtdcNoticeField)) ({#set CThostFtdcNoticeField->BrokerID#} p)

instance Storable CThostFtdcInvestorWithdrawAlgorithmField where
  sizeOf _ = {#sizeof CThostFtdcInvestorWithdrawAlgorithmField#}
  alignment _ = {#alignof CThostFtdcInvestorWithdrawAlgorithmField#}
  peek p =
    CThostFtdcInvestorWithdrawAlgorithmField <$>
    fmap realToFrac ({#get CThostFtdcInvestorWithdrawAlgorithmField->FundMortgageRatio#} p) <*>
    (({#get CThostFtdcInvestorWithdrawAlgorithmField->CurrencyID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcInvestorWithdrawAlgorithmField->UsingRatio#} p) <*>
    (({#get CThostFtdcInvestorWithdrawAlgorithmField->InvestorID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorWithdrawAlgorithmField->InvestorRange#} p) <*>
    (({#get CThostFtdcInvestorWithdrawAlgorithmField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorWithdrawAlgorithmField->FundMortgageRatio#} p (realToFrac $ fundMortgageRatio (s :: CThostFtdcInvestorWithdrawAlgorithmField))
    withText (currencyID (s :: CThostFtdcInvestorWithdrawAlgorithmField)) ({#set CThostFtdcInvestorWithdrawAlgorithmField->CurrencyID#} p)
    {#set CThostFtdcInvestorWithdrawAlgorithmField->UsingRatio#} p (realToFrac $ usingRatio (s :: CThostFtdcInvestorWithdrawAlgorithmField))
    withText (investorID (s :: CThostFtdcInvestorWithdrawAlgorithmField)) ({#set CThostFtdcInvestorWithdrawAlgorithmField->InvestorID#} p)
    {#set CThostFtdcInvestorWithdrawAlgorithmField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcInvestorWithdrawAlgorithmField))
    withText (brokerID (s :: CThostFtdcInvestorWithdrawAlgorithmField)) ({#set CThostFtdcInvestorWithdrawAlgorithmField->BrokerID#} p)

instance Storable CThostFtdcQryOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryOrderField#}
  alignment _ = {#alignof CThostFtdcQryOrderField#}
  peek p =
    CThostFtdcQryOrderField <$>
    (({#get CThostFtdcQryOrderField->InsertTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderField->InsertTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (insertTimeEnd (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->InsertTimeEnd#} p)
    withText (insertTimeStart (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->InsertTimeStart#} p)
    withText (orderSysID (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryOrderField)) ({#set CThostFtdcQryOrderField->BrokerID#} p)

instance Storable CThostFtdcErrOrderField where
  sizeOf _ = {#sizeof CThostFtdcErrOrderField#}
  alignment _ = {#alignof CThostFtdcErrOrderField#}
  peek p =
    CThostFtdcErrOrderField <$>
    (({#get CThostFtdcErrOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->IsSwapOrder#} p) <*>
    (({#get CThostFtdcErrOrderField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->UserForceClose#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->RequestID#} p) <*>
    (({#get CThostFtdcErrOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->IsAutoSuspend#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderField->ForceCloseReason#} p) <*>
    fmap realToFrac ({#get CThostFtdcErrOrderField->StopPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderField->ContingentCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->MinVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderField->VolumeCondition#} p) <*>
    (({#get CThostFtdcErrOrderField->GTDDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderField->TimeCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderField->VolumeTotalOriginal#} p) <*>
    fmap realToFrac ({#get CThostFtdcErrOrderField->LimitPrice#} p) <*>
    (({#get CThostFtdcErrOrderField->CombHedgeFlag#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->CombOffsetFlag#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderField->OrderPriceType#} p) <*>
    (({#get CThostFtdcErrOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->OrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->IPAddress#} p)
    withText (clientID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->ClientID#} p)
    withText (currencyID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->InvestUnitID#} p)
    withText (exchangeID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->ExchangeID#} p)
    {#set CThostFtdcErrOrderField->IsSwapOrder#} p (fromIntegral $ isSwapOrder (s :: CThostFtdcErrOrderField))
    withText (errorMsg (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->ErrorMsg#} p)
    {#set CThostFtdcErrOrderField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->UserForceClose#} p (fromIntegral $ userForceClose (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcErrOrderField))
    withText (businessUnit (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->BusinessUnit#} p)
    {#set CThostFtdcErrOrderField->IsAutoSuspend#} p (fromIntegral $ isAutoSuspend (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->ForceCloseReason#} p (castCharToCChar $ forceCloseReason (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->StopPrice#} p (realToFrac $ stopPrice (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->ContingentCondition#} p (castCharToCChar $ contingentCondition (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->MinVolume#} p (fromIntegral $ minVolume (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->VolumeCondition#} p (castCharToCChar $ volumeCondition (s :: CThostFtdcErrOrderField))
    withText (gTDDate (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->GTDDate#} p)
    {#set CThostFtdcErrOrderField->TimeCondition#} p (castCharToCChar $ timeCondition (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->VolumeTotalOriginal#} p (fromIntegral $ volumeTotalOriginal (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcErrOrderField))
    withText (combHedgeFlag (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->CombHedgeFlag#} p)
    withText (combOffsetFlag (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->CombOffsetFlag#} p)
    {#set CThostFtdcErrOrderField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcErrOrderField))
    {#set CThostFtdcErrOrderField->OrderPriceType#} p (castCharToCChar $ orderPriceType (s :: CThostFtdcErrOrderField))
    withText (userID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->UserID#} p)
    withText (orderRef (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->OrderRef#} p)
    withText (instrumentID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcErrOrderField)) ({#set CThostFtdcErrOrderField->BrokerID#} p)

instance Storable CThostFtdcRemoveParkedOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcRemoveParkedOrderActionField#}
  alignment _ = {#alignof CThostFtdcRemoveParkedOrderActionField#}
  peek p =
    CThostFtdcRemoveParkedOrderActionField <$>
    (({#get CThostFtdcRemoveParkedOrderActionField->ParkedOrderActionID#} p) >>= peekText) <*>
    (({#get CThostFtdcRemoveParkedOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcRemoveParkedOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (parkedOrderActionID (s :: CThostFtdcRemoveParkedOrderActionField)) ({#set CThostFtdcRemoveParkedOrderActionField->ParkedOrderActionID#} p)
    withText (investorID (s :: CThostFtdcRemoveParkedOrderActionField)) ({#set CThostFtdcRemoveParkedOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcRemoveParkedOrderActionField)) ({#set CThostFtdcRemoveParkedOrderActionField->BrokerID#} p)

instance Storable CThostFtdcQrySuperUserField where
  sizeOf _ = {#sizeof CThostFtdcQrySuperUserField#}
  alignment _ = {#alignof CThostFtdcQrySuperUserField#}
  peek p =
    CThostFtdcQrySuperUserField <$>
    (({#get CThostFtdcQrySuperUserField->UserID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcQrySuperUserField)) ({#set CThostFtdcQrySuperUserField->UserID#} p)

instance Storable CThostFtdcExchangeLockField where
  sizeOf _ = {#sizeof CThostFtdcExchangeLockField#}
  alignment _ = {#alignof CThostFtdcExchangeLockField#}
  peek p =
    CThostFtdcExchangeLockField <$>
    (({#get CThostFtdcExchangeLockField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeLockField->SequenceNo#} p) <*>
    (({#get CThostFtdcExchangeLockField->ClearingPartID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeLockField->LockStatus#} p) <*>
    (({#get CThostFtdcExchangeLockField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->InsertDate#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->LockSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeLockField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeLockField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeLockField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeLockField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeLockField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeLockField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeLockField->LockLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeLockField->LockType#} p) <*>
    (({#get CThostFtdcExchangeLockField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeLockField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeLockField->Volume#} p)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->IPAddress#} p)
    withText (branchID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->BranchID#} p)
    {#set CThostFtdcExchangeLockField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeLockField))
    withText (clearingPartID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->ClearingPartID#} p)
    {#set CThostFtdcExchangeLockField->LockStatus#} p (castCharToCChar $ lockStatus (s :: CThostFtdcExchangeLockField))
    withText (cancelTime (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->CancelTime#} p)
    withText (insertTime (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->InsertDate#} p)
    withText (lockSysID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->LockSysID#} p)
    {#set CThostFtdcExchangeLockField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeLockField))
    withText (tradingDay (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->TradingDay#} p)
    {#set CThostFtdcExchangeLockField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeLockField))
    {#set CThostFtdcExchangeLockField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcExchangeLockField))
    {#set CThostFtdcExchangeLockField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeLockField))
    withText (traderID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->ExchangeID#} p)
    withText (lockLocalID (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->LockLocalID#} p)
    {#set CThostFtdcExchangeLockField->LockType#} p (castCharToCChar $ lockType (s :: CThostFtdcExchangeLockField))
    withText (businessUnit (s :: CThostFtdcExchangeLockField)) ({#set CThostFtdcExchangeLockField->BusinessUnit#} p)
    {#set CThostFtdcExchangeLockField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcExchangeLockField))
    {#set CThostFtdcExchangeLockField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExchangeLockField))

instance Storable CThostFtdcStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcStockDisposalActionField#}
  peek p =
    CThostFtdcStockDisposalActionField <$>
    (({#get CThostFtdcStockDisposalActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->StatusMsg#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcStockDisposalActionField->ActionType#} p) <*>
    (({#get CThostFtdcStockDisposalActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcStockDisposalActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcStockDisposalActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->StockDisposalLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalActionField->InstallID#} p) <*>
    (({#get CThostFtdcStockDisposalActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->ActionDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcStockDisposalActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcStockDisposalActionField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalActionField->RequestID#} p) <*>
    (({#get CThostFtdcStockDisposalActionField->StockDisposalRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcStockDisposalActionField->StockDisposalActionRef#} p) <*>
    (({#get CThostFtdcStockDisposalActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcStockDisposalActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->BranchID#} p)
    withText (instrumentID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->InstrumentID#} p)
    withText (statusMsg (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->StatusMsg#} p)
    {#set CThostFtdcStockDisposalActionField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcStockDisposalActionField))
    withText (userID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->UserID#} p)
    {#set CThostFtdcStockDisposalActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcStockDisposalActionField))
    withText (businessUnit (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->ActionLocalID#} p)
    withText (stockDisposalLocalID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->StockDisposalLocalID#} p)
    {#set CThostFtdcStockDisposalActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcStockDisposalActionField))
    withText (traderID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->ActionDate#} p)
    {#set CThostFtdcStockDisposalActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcStockDisposalActionField))
    withText (stockDisposalSysID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->StockDisposalSysID#} p)
    withText (exchangeID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->ExchangeID#} p)
    {#set CThostFtdcStockDisposalActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcStockDisposalActionField))
    {#set CThostFtdcStockDisposalActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcStockDisposalActionField))
    {#set CThostFtdcStockDisposalActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcStockDisposalActionField))
    withText (stockDisposalRef (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->StockDisposalRef#} p)
    {#set CThostFtdcStockDisposalActionField->StockDisposalActionRef#} p (fromIntegral $ stockDisposalActionRef (s :: CThostFtdcStockDisposalActionField))
    withText (investorID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcStockDisposalActionField)) ({#set CThostFtdcStockDisposalActionField->BrokerID#} p)

instance Storable CThostFtdcRspInfoField where
  sizeOf _ = {#sizeof CThostFtdcRspInfoField#}
  alignment _ = {#alignof CThostFtdcRspInfoField#}
  peek p =
    CThostFtdcRspInfoField <$>
    (({#get CThostFtdcRspInfoField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspInfoField->ErrorID#} p)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcRspInfoField)) ({#set CThostFtdcRspInfoField->ErrorMsg#} p)
    {#set CThostFtdcRspInfoField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspInfoField))

instance Storable CThostFtdcQryForQuoteField where
  sizeOf _ = {#sizeof CThostFtdcQryForQuoteField#}
  alignment _ = {#alignof CThostFtdcQryForQuoteField#}
  peek p =
    CThostFtdcQryForQuoteField <$>
    (({#get CThostFtdcQryForQuoteField->InsertTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteField->InsertTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (insertTimeEnd (s :: CThostFtdcQryForQuoteField)) ({#set CThostFtdcQryForQuoteField->InsertTimeEnd#} p)
    withText (insertTimeStart (s :: CThostFtdcQryForQuoteField)) ({#set CThostFtdcQryForQuoteField->InsertTimeStart#} p)
    withText (exchangeID (s :: CThostFtdcQryForQuoteField)) ({#set CThostFtdcQryForQuoteField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryForQuoteField)) ({#set CThostFtdcQryForQuoteField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryForQuoteField)) ({#set CThostFtdcQryForQuoteField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryForQuoteField)) ({#set CThostFtdcQryForQuoteField->BrokerID#} p)

instance Storable CThostFtdcQryErrStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcQryErrStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcQryErrStockDisposalActionField#}
  peek p =
    CThostFtdcQryErrStockDisposalActionField <$>
    (({#get CThostFtdcQryErrStockDisposalActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryErrStockDisposalActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryErrStockDisposalActionField)) ({#set CThostFtdcQryErrStockDisposalActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryErrStockDisposalActionField)) ({#set CThostFtdcQryErrStockDisposalActionField->BrokerID#} p)

instance Storable CThostFtdcQryInvestorField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorField#}
  alignment _ = {#alignof CThostFtdcQryInvestorField#}
  peek p =
    CThostFtdcQryInvestorField <$>
    (({#get CThostFtdcQryInvestorField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryInvestorField)) ({#set CThostFtdcQryInvestorField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInvestorField)) ({#set CThostFtdcQryInvestorField->BrokerID#} p)

instance Storable CThostFtdcQryTradeField where
  sizeOf _ = {#sizeof CThostFtdcQryTradeField#}
  alignment _ = {#alignof CThostFtdcQryTradeField#}
  peek p =
    CThostFtdcQryTradeField <$>
    (({#get CThostFtdcQryTradeField->TradeTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradeField->TradeTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradeField->TradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradeField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (tradeTimeEnd (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->TradeTimeEnd#} p)
    withText (tradeTimeStart (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->TradeTimeStart#} p)
    withText (tradeID (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->TradeID#} p)
    withText (exchangeID (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryTradeField)) ({#set CThostFtdcQryTradeField->BrokerID#} p)

instance Storable CThostFtdcCFMMCTradingAccountKeyField where
  sizeOf _ = {#sizeof CThostFtdcCFMMCTradingAccountKeyField#}
  alignment _ = {#alignof CThostFtdcCFMMCTradingAccountKeyField#}
  peek p =
    CThostFtdcCFMMCTradingAccountKeyField <$>
    (({#get CThostFtdcCFMMCTradingAccountKeyField->CurrentKey#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCFMMCTradingAccountKeyField->KeyID#} p) <*>
    (({#get CThostFtdcCFMMCTradingAccountKeyField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCTradingAccountKeyField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCTradingAccountKeyField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currentKey (s :: CThostFtdcCFMMCTradingAccountKeyField)) ({#set CThostFtdcCFMMCTradingAccountKeyField->CurrentKey#} p)
    {#set CThostFtdcCFMMCTradingAccountKeyField->KeyID#} p (fromIntegral $ keyID (s :: CThostFtdcCFMMCTradingAccountKeyField))
    withText (accountID (s :: CThostFtdcCFMMCTradingAccountKeyField)) ({#set CThostFtdcCFMMCTradingAccountKeyField->AccountID#} p)
    withText (participantID (s :: CThostFtdcCFMMCTradingAccountKeyField)) ({#set CThostFtdcCFMMCTradingAccountKeyField->ParticipantID#} p)
    withText (brokerID (s :: CThostFtdcCFMMCTradingAccountKeyField)) ({#set CThostFtdcCFMMCTradingAccountKeyField->BrokerID#} p)

instance Storable CThostFtdcExecFreezeField where
  sizeOf _ = {#sizeof CThostFtdcExecFreezeField#}
  alignment _ = {#alignof CThostFtdcExecFreezeField#}
  peek p =
    CThostFtdcExecFreezeField <$>
    fmap realToFrac ({#get CThostFtdcExecFreezeField->FrozenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecFreezeField->Volume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecFreezeField->OptionsType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecFreezeField->PosiDirection#} p) <*>
    (({#get CThostFtdcExecFreezeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecFreezeField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecFreezeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecFreezeField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExecFreezeField->FrozenAmount#} p (realToFrac $ frozenAmount (s :: CThostFtdcExecFreezeField))
    {#set CThostFtdcExecFreezeField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExecFreezeField))
    {#set CThostFtdcExecFreezeField->OptionsType#} p (castCharToCChar $ optionsType (s :: CThostFtdcExecFreezeField))
    {#set CThostFtdcExecFreezeField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcExecFreezeField))
    withText (investorID (s :: CThostFtdcExecFreezeField)) ({#set CThostFtdcExecFreezeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcExecFreezeField)) ({#set CThostFtdcExecFreezeField->BrokerID#} p)
    withText (exchangeID (s :: CThostFtdcExecFreezeField)) ({#set CThostFtdcExecFreezeField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcExecFreezeField)) ({#set CThostFtdcExecFreezeField->InstrumentID#} p)

instance Storable CThostFtdcQryOptionInstrTradingRightField where
  sizeOf _ = {#sizeof CThostFtdcQryOptionInstrTradingRightField#}
  alignment _ = {#alignof CThostFtdcQryOptionInstrTradingRightField#}
  peek p =
    CThostFtdcQryOptionInstrTradingRightField <$>
    (({#get CThostFtdcQryOptionInstrTradingRightField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQryOptionInstrTradingRightField->Direction#} p) <*>
    (({#get CThostFtdcQryOptionInstrTradingRightField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrTradingRightField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOptionInstrTradingRightField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryOptionInstrTradingRightField)) ({#set CThostFtdcQryOptionInstrTradingRightField->ExchangeID#} p)
    {#set CThostFtdcQryOptionInstrTradingRightField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcQryOptionInstrTradingRightField))
    withText (instrumentID (s :: CThostFtdcQryOptionInstrTradingRightField)) ({#set CThostFtdcQryOptionInstrTradingRightField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryOptionInstrTradingRightField)) ({#set CThostFtdcQryOptionInstrTradingRightField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryOptionInstrTradingRightField)) ({#set CThostFtdcQryOptionInstrTradingRightField->BrokerID#} p)

instance Storable CThostFtdcQryLinkManField where
  sizeOf _ = {#sizeof CThostFtdcQryLinkManField#}
  alignment _ = {#alignof CThostFtdcQryLinkManField#}
  peek p =
    CThostFtdcQryLinkManField <$>
    (({#get CThostFtdcQryLinkManField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLinkManField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryLinkManField)) ({#set CThostFtdcQryLinkManField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryLinkManField)) ({#set CThostFtdcQryLinkManField->BrokerID#} p)

instance Storable CThostFtdcExchangeStockDisposalField where
  sizeOf _ = {#sizeof CThostFtdcExchangeStockDisposalField#}
  alignment _ = {#alignof CThostFtdcExchangeStockDisposalField#}
  peek p =
    CThostFtdcExchangeStockDisposalField <$>
    (({#get CThostFtdcExchangeStockDisposalField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeStockDisposalField->StockDisposalStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalField->StockDisposalLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeStockDisposalField->StockDisposalType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalField->Volume#} p)
  poke p s = do
    withText (businessUnit (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->BusinessUnit#} p)
    withText (stockDisposalSysID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->StockDisposalSysID#} p)
    withText (branchID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->BranchID#} p)
    withText (insertTime (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->InsertDate#} p)
    {#set CThostFtdcExchangeStockDisposalField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeStockDisposalField))
    withText (tradingDay (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->TradingDay#} p)
    {#set CThostFtdcExchangeStockDisposalField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeStockDisposalField))
    {#set CThostFtdcExchangeStockDisposalField->StockDisposalStatus#} p (castCharToCChar $ stockDisposalStatus (s :: CThostFtdcExchangeStockDisposalField))
    {#set CThostFtdcExchangeStockDisposalField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeStockDisposalField))
    withText (traderID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->TraderID#} p)
    withText (clientID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->ParticipantID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->ExchangeID#} p)
    withText (stockDisposalLocalID (s :: CThostFtdcExchangeStockDisposalField)) ({#set CThostFtdcExchangeStockDisposalField->StockDisposalLocalID#} p)
    {#set CThostFtdcExchangeStockDisposalField->StockDisposalType#} p (castCharToCChar $ stockDisposalType (s :: CThostFtdcExchangeStockDisposalField))
    {#set CThostFtdcExchangeStockDisposalField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExchangeStockDisposalField))

instance Storable CThostFtdcProductField where
  sizeOf _ = {#sizeof CThostFtdcProductField#}
  alignment _ = {#alignof CThostFtdcProductField#}
  peek p =
    CThostFtdcProductField <$>
    fmap realToFrac ({#get CThostFtdcProductField->UnderlyingMultiple#} p) <*>
    (({#get CThostFtdcProductField->ExchangeProductID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcProductField->MortgageFundUseRange#} p) <*>
    (({#get CThostFtdcProductField->TradeCurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcProductField->CloseDealType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcProductField->PositionDateType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcProductField->PositionType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcProductField->MinLimitOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcProductField->MaxLimitOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcProductField->MinMarketOrderVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcProductField->MaxMarketOrderVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcProductField->PriceTick#} p) <*>
    fmap fromIntegral ({#get CThostFtdcProductField->VolumeMultiple#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcProductField->ProductClass#} p) <*>
    (({#get CThostFtdcProductField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcProductField->ProductName#} p) >>= peekText) <*>
    (({#get CThostFtdcProductField->ProductID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcProductField->UnderlyingMultiple#} p (realToFrac $ underlyingMultiple (s :: CThostFtdcProductField))
    withText (exchangeProductID (s :: CThostFtdcProductField)) ({#set CThostFtdcProductField->ExchangeProductID#} p)
    {#set CThostFtdcProductField->MortgageFundUseRange#} p (castCharToCChar $ mortgageFundUseRange (s :: CThostFtdcProductField))
    withText (tradeCurrencyID (s :: CThostFtdcProductField)) ({#set CThostFtdcProductField->TradeCurrencyID#} p)
    {#set CThostFtdcProductField->CloseDealType#} p (castCharToCChar $ closeDealType (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->PositionDateType#} p (castCharToCChar $ positionDateType (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->PositionType#} p (castCharToCChar $ positionType (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->MinLimitOrderVolume#} p (fromIntegral $ minLimitOrderVolume (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->MaxLimitOrderVolume#} p (fromIntegral $ maxLimitOrderVolume (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->MinMarketOrderVolume#} p (fromIntegral $ minMarketOrderVolume (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->MaxMarketOrderVolume#} p (fromIntegral $ maxMarketOrderVolume (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->PriceTick#} p (realToFrac $ priceTick (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->VolumeMultiple#} p (fromIntegral $ volumeMultiple (s :: CThostFtdcProductField))
    {#set CThostFtdcProductField->ProductClass#} p (castCharToCChar $ productClass (s :: CThostFtdcProductField))
    withText (exchangeID (s :: CThostFtdcProductField)) ({#set CThostFtdcProductField->ExchangeID#} p)
    withText (productName (s :: CThostFtdcProductField)) ({#set CThostFtdcProductField->ProductName#} p)
    withText (productID (s :: CThostFtdcProductField)) ({#set CThostFtdcProductField->ProductID#} p)

instance Storable CThostFtdcQryLockField where
  sizeOf _ = {#sizeof CThostFtdcQryLockField#}
  alignment _ = {#alignof CThostFtdcQryLockField#}
  peek p =
    CThostFtdcQryLockField <$>
    (({#get CThostFtdcQryLockField->InsertTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockField->InsertTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockField->LockSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (insertTimeEnd (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->InsertTimeEnd#} p)
    withText (insertTimeStart (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->InsertTimeStart#} p)
    withText (lockSysID (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->LockSysID#} p)
    withText (exchangeID (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryLockField)) ({#set CThostFtdcQryLockField->BrokerID#} p)

instance Storable CThostFtdcInvestorPositionCombineDetailField where
  sizeOf _ = {#sizeof CThostFtdcInvestorPositionCombineDetailField#}
  alignment _ = {#alignof CThostFtdcInvestorPositionCombineDetailField#}
  peek p =
    CThostFtdcInvestorPositionCombineDetailField <$>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionCombineDetailField->TradeGroupID#} p) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->CombInstrumentID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionCombineDetailField->LegMultiple#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionCombineDetailField->LegID#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionCombineDetailField->MarginRateByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionCombineDetailField->MarginRateByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionCombineDetailField->ExchMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionCombineDetailField->Margin#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionCombineDetailField->TotalAmt#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionCombineDetailField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionCombineDetailField->HedgeFlag#} p) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->TradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->ComTradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->BrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionCombineDetailField->SettlementID#} p) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->OpenDate#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionCombineDetailField->TradingDay#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorPositionCombineDetailField->TradeGroupID#} p (fromIntegral $ tradeGroupID (s :: CThostFtdcInvestorPositionCombineDetailField))
    withText (combInstrumentID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->CombInstrumentID#} p)
    {#set CThostFtdcInvestorPositionCombineDetailField->LegMultiple#} p (fromIntegral $ legMultiple (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->LegID#} p (fromIntegral $ legID (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->MarginRateByVolume#} p (realToFrac $ marginRateByVolume (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->MarginRateByMoney#} p (realToFrac $ marginRateByMoney (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->ExchMargin#} p (realToFrac $ exchMargin (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->Margin#} p (realToFrac $ margin (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->TotalAmt#} p (fromIntegral $ totalAmt (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcInvestorPositionCombineDetailField))
    {#set CThostFtdcInvestorPositionCombineDetailField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInvestorPositionCombineDetailField))
    withText (instrumentID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->InstrumentID#} p)
    withText (tradeID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->TradeID#} p)
    withText (comTradeID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->ComTradeID#} p)
    withText (investorID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->BrokerID#} p)
    {#set CThostFtdcInvestorPositionCombineDetailField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcInvestorPositionCombineDetailField))
    withText (exchangeID (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->ExchangeID#} p)
    withText (openDate (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->OpenDate#} p)
    withText (tradingDay (s :: CThostFtdcInvestorPositionCombineDetailField)) ({#set CThostFtdcInvestorPositionCombineDetailField->TradingDay#} p)

instance Storable CThostFtdcMDTraderOfferField where
  sizeOf _ = {#sizeof CThostFtdcMDTraderOfferField#}
  alignment _ = {#alignof CThostFtdcMDTraderOfferField#}
  peek p =
    CThostFtdcMDTraderOfferField <$>
    fmap castCCharToChar ({#get CThostFtdcMDTraderOfferField->BizType#} p) <*>
    (({#get CThostFtdcMDTraderOfferField->MaxOrderMessageReference#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->MaxTradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->StartTime#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->StartDate#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->ConnectTime#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->ConnectDate#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->LastReportTime#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->LastReportDate#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->ConnectRequestTime#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->ConnectRequestDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcMDTraderOfferField->TraderConnectStatus#} p) <*>
    (({#get CThostFtdcMDTraderOfferField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcMDTraderOfferField->InstallID#} p) <*>
    (({#get CThostFtdcMDTraderOfferField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcMDTraderOfferField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcMDTraderOfferField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcMDTraderOfferField))
    withText (maxOrderMessageReference (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->MaxOrderMessageReference#} p)
    withText (maxTradeID (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->MaxTradeID#} p)
    withText (brokerID (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->BrokerID#} p)
    withText (tradingDay (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->TradingDay#} p)
    withText (startTime (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->StartTime#} p)
    withText (startDate (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->StartDate#} p)
    withText (connectTime (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->ConnectTime#} p)
    withText (connectDate (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->ConnectDate#} p)
    withText (lastReportTime (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->LastReportTime#} p)
    withText (lastReportDate (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->LastReportDate#} p)
    withText (connectRequestTime (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->ConnectRequestTime#} p)
    withText (connectRequestDate (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->ConnectRequestDate#} p)
    {#set CThostFtdcMDTraderOfferField->TraderConnectStatus#} p (castCharToCChar $ traderConnectStatus (s :: CThostFtdcMDTraderOfferField))
    withText (orderLocalID (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->OrderLocalID#} p)
    {#set CThostFtdcMDTraderOfferField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcMDTraderOfferField))
    withText (password (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->Password#} p)
    withText (participantID (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->ParticipantID#} p)
    withText (traderID (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcMDTraderOfferField)) ({#set CThostFtdcMDTraderOfferField->ExchangeID#} p)

instance Storable CThostFtdcReqSyncKeyField where
  sizeOf _ = {#sizeof CThostFtdcReqSyncKeyField#}
  alignment _ = {#alignof CThostFtdcReqSyncKeyField#}
  peek p =
    CThostFtdcReqSyncKeyField <$>
    fmap fromIntegral ({#get CThostFtdcReqSyncKeyField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqSyncKeyField->RequestID#} p) <*>
    (({#get CThostFtdcReqSyncKeyField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->Message#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqSyncKeyField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqSyncKeyField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqSyncKeyField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqSyncKeyField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqSyncKeyField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqSyncKeyField->TradeCode#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcReqSyncKeyField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqSyncKeyField))
    {#set CThostFtdcReqSyncKeyField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcReqSyncKeyField))
    withText (operNo (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->DeviceID#} p)
    withText (message (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->Message#} p)
    withText (userID (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->UserID#} p)
    {#set CThostFtdcReqSyncKeyField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqSyncKeyField))
    {#set CThostFtdcReqSyncKeyField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqSyncKeyField))
    {#set CThostFtdcReqSyncKeyField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqSyncKeyField))
    {#set CThostFtdcReqSyncKeyField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqSyncKeyField))
    withText (tradingDay (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqSyncKeyField)) ({#set CThostFtdcReqSyncKeyField->TradeCode#} p)

instance Storable CThostFtdcQryInvestorLevelField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorLevelField#}
  alignment _ = {#alignof CThostFtdcQryInvestorLevelField#}
  peek p =
    CThostFtdcQryInvestorLevelField <$>
    (({#get CThostFtdcQryInvestorLevelField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorLevelField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorLevelField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryInvestorLevelField)) ({#set CThostFtdcQryInvestorLevelField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryInvestorLevelField)) ({#set CThostFtdcQryInvestorLevelField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInvestorLevelField)) ({#set CThostFtdcQryInvestorLevelField->BrokerID#} p)

instance Storable CThostFtdcQryLimitPosiField where
  sizeOf _ = {#sizeof CThostFtdcQryLimitPosiField#}
  alignment _ = {#alignof CThostFtdcQryLimitPosiField#}
  peek p =
    CThostFtdcQryLimitPosiField <$>
    (({#get CThostFtdcQryLimitPosiField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitPosiField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitPosiField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitPosiField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryLimitPosiField)) ({#set CThostFtdcQryLimitPosiField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryLimitPosiField)) ({#set CThostFtdcQryLimitPosiField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryLimitPosiField)) ({#set CThostFtdcQryLimitPosiField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryLimitPosiField)) ({#set CThostFtdcQryLimitPosiField->BrokerID#} p)

instance Storable CThostFtdcQryBrokerTradingAlgosField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerTradingAlgosField#}
  alignment _ = {#alignof CThostFtdcQryBrokerTradingAlgosField#}
  peek p =
    CThostFtdcQryBrokerTradingAlgosField <$>
    (({#get CThostFtdcQryBrokerTradingAlgosField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerTradingAlgosField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerTradingAlgosField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (instrumentID (s :: CThostFtdcQryBrokerTradingAlgosField)) ({#set CThostFtdcQryBrokerTradingAlgosField->InstrumentID#} p)
    withText (exchangeID (s :: CThostFtdcQryBrokerTradingAlgosField)) ({#set CThostFtdcQryBrokerTradingAlgosField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcQryBrokerTradingAlgosField)) ({#set CThostFtdcQryBrokerTradingAlgosField->BrokerID#} p)

instance Storable CThostFtdcForQuoteRspField where
  sizeOf _ = {#sizeof CThostFtdcForQuoteRspField#}
  alignment _ = {#alignof CThostFtdcForQuoteRspField#}
  peek p =
    CThostFtdcForQuoteRspField <$>
    (({#get CThostFtdcForQuoteRspField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteRspField->ActionDay#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteRspField->ForQuoteTime#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteRspField->ForQuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteRspField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcForQuoteRspField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcForQuoteRspField)) ({#set CThostFtdcForQuoteRspField->ExchangeID#} p)
    withText (actionDay (s :: CThostFtdcForQuoteRspField)) ({#set CThostFtdcForQuoteRspField->ActionDay#} p)
    withText (forQuoteTime (s :: CThostFtdcForQuoteRspField)) ({#set CThostFtdcForQuoteRspField->ForQuoteTime#} p)
    withText (forQuoteSysID (s :: CThostFtdcForQuoteRspField)) ({#set CThostFtdcForQuoteRspField->ForQuoteSysID#} p)
    withText (instrumentID (s :: CThostFtdcForQuoteRspField)) ({#set CThostFtdcForQuoteRspField->InstrumentID#} p)
    withText (tradingDay (s :: CThostFtdcForQuoteRspField)) ({#set CThostFtdcForQuoteRspField->TradingDay#} p)

instance Storable CThostFtdcStrikeOffsetField where
  sizeOf _ = {#sizeof CThostFtdcStrikeOffsetField#}
  alignment _ = {#alignof CThostFtdcStrikeOffsetField#}
  peek p =
    CThostFtdcStrikeOffsetField <$>
    (({#get CThostFtdcStrikeOffsetField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcStrikeOffsetField->OffsetType#} p) <*>
    fmap realToFrac ({#get CThostFtdcStrikeOffsetField->Offset#} p) <*>
    (({#get CThostFtdcStrikeOffsetField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcStrikeOffsetField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcStrikeOffsetField->InvestorRange#} p) <*>
    (({#get CThostFtdcStrikeOffsetField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcStrikeOffsetField)) ({#set CThostFtdcStrikeOffsetField->ExchangeID#} p)
    {#set CThostFtdcStrikeOffsetField->OffsetType#} p (castCharToCChar $ offsetType (s :: CThostFtdcStrikeOffsetField))
    {#set CThostFtdcStrikeOffsetField->Offset#} p (realToFrac $ offset (s :: CThostFtdcStrikeOffsetField))
    withText (investorID (s :: CThostFtdcStrikeOffsetField)) ({#set CThostFtdcStrikeOffsetField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcStrikeOffsetField)) ({#set CThostFtdcStrikeOffsetField->BrokerID#} p)
    {#set CThostFtdcStrikeOffsetField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcStrikeOffsetField))
    withText (instrumentID (s :: CThostFtdcStrikeOffsetField)) ({#set CThostFtdcStrikeOffsetField->InstrumentID#} p)

instance Storable CThostFtdcInstrumentStatusField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentStatusField#}
  alignment _ = {#alignof CThostFtdcInstrumentStatusField#}
  peek p =
    CThostFtdcInstrumentStatusField <$>
    fmap castCCharToChar ({#get CThostFtdcInstrumentStatusField->EnterReason#} p) <*>
    (({#get CThostFtdcInstrumentStatusField->EnterTime#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInstrumentStatusField->TradingSegmentSN#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentStatusField->InstrumentStatus#} p) <*>
    (({#get CThostFtdcInstrumentStatusField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentStatusField->SettlementGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentStatusField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentStatusField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstrumentStatusField->EnterReason#} p (castCharToCChar $ enterReason (s :: CThostFtdcInstrumentStatusField))
    withText (enterTime (s :: CThostFtdcInstrumentStatusField)) ({#set CThostFtdcInstrumentStatusField->EnterTime#} p)
    {#set CThostFtdcInstrumentStatusField->TradingSegmentSN#} p (fromIntegral $ tradingSegmentSN (s :: CThostFtdcInstrumentStatusField))
    {#set CThostFtdcInstrumentStatusField->InstrumentStatus#} p (castCharToCChar $ instrumentStatus (s :: CThostFtdcInstrumentStatusField))
    withText (instrumentID (s :: CThostFtdcInstrumentStatusField)) ({#set CThostFtdcInstrumentStatusField->InstrumentID#} p)
    withText (settlementGroupID (s :: CThostFtdcInstrumentStatusField)) ({#set CThostFtdcInstrumentStatusField->SettlementGroupID#} p)
    withText (exchangeInstID (s :: CThostFtdcInstrumentStatusField)) ({#set CThostFtdcInstrumentStatusField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcInstrumentStatusField)) ({#set CThostFtdcInstrumentStatusField->ExchangeID#} p)

instance Storable CThostFtdcRspAuthenticateField where
  sizeOf _ = {#sizeof CThostFtdcRspAuthenticateField#}
  alignment _ = {#alignof CThostFtdcRspAuthenticateField#}
  peek p =
    CThostFtdcRspAuthenticateField <$>
    (({#get CThostFtdcRspAuthenticateField->UserProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcRspAuthenticateField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspAuthenticateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (userProductInfo (s :: CThostFtdcRspAuthenticateField)) ({#set CThostFtdcRspAuthenticateField->UserProductInfo#} p)
    withText (userID (s :: CThostFtdcRspAuthenticateField)) ({#set CThostFtdcRspAuthenticateField->UserID#} p)
    withText (brokerID (s :: CThostFtdcRspAuthenticateField)) ({#set CThostFtdcRspAuthenticateField->BrokerID#} p)

instance Storable CThostFtdcCurrentTimeField where
  sizeOf _ = {#sizeof CThostFtdcCurrentTimeField#}
  alignment _ = {#alignof CThostFtdcCurrentTimeField#}
  peek p =
    CThostFtdcCurrentTimeField <$>
    (({#get CThostFtdcCurrentTimeField->ActionDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCurrentTimeField->CurrMillisec#} p) <*>
    (({#get CThostFtdcCurrentTimeField->CurrTime#} p) >>= peekText) <*>
    (({#get CThostFtdcCurrentTimeField->CurrDate#} p) >>= peekText)
  poke p s = do
    withText (actionDay (s :: CThostFtdcCurrentTimeField)) ({#set CThostFtdcCurrentTimeField->ActionDay#} p)
    {#set CThostFtdcCurrentTimeField->CurrMillisec#} p (fromIntegral $ currMillisec (s :: CThostFtdcCurrentTimeField))
    withText (currTime (s :: CThostFtdcCurrentTimeField)) ({#set CThostFtdcCurrentTimeField->CurrTime#} p)
    withText (currDate (s :: CThostFtdcCurrentTimeField)) ({#set CThostFtdcCurrentTimeField->CurrDate#} p)

instance Storable CThostFtdcQryFrontStatusField where
  sizeOf _ = {#sizeof CThostFtdcQryFrontStatusField#}
  alignment _ = {#alignof CThostFtdcQryFrontStatusField#}
  peek p =
    CThostFtdcQryFrontStatusField <$>
    fmap fromIntegral ({#get CThostFtdcQryFrontStatusField->FrontID#} p)
  poke p s = do
    {#set CThostFtdcQryFrontStatusField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcQryFrontStatusField))

instance Storable CThostFtdcQryForQuoteParamField where
  sizeOf _ = {#sizeof CThostFtdcQryForQuoteParamField#}
  alignment _ = {#alignof CThostFtdcQryForQuoteParamField#}
  peek p =
    CThostFtdcQryForQuoteParamField <$>
    (({#get CThostFtdcQryForQuoteParamField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteParamField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryForQuoteParamField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryForQuoteParamField)) ({#set CThostFtdcQryForQuoteParamField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryForQuoteParamField)) ({#set CThostFtdcQryForQuoteParamField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcQryForQuoteParamField)) ({#set CThostFtdcQryForQuoteParamField->BrokerID#} p)

instance Storable CThostFtdcQrySettlementInfoConfirmField where
  sizeOf _ = {#sizeof CThostFtdcQrySettlementInfoConfirmField#}
  alignment _ = {#alignof CThostFtdcQrySettlementInfoConfirmField#}
  peek p =
    CThostFtdcQrySettlementInfoConfirmField <$>
    (({#get CThostFtdcQrySettlementInfoConfirmField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySettlementInfoConfirmField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQrySettlementInfoConfirmField)) ({#set CThostFtdcQrySettlementInfoConfirmField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQrySettlementInfoConfirmField)) ({#set CThostFtdcQrySettlementInfoConfirmField->BrokerID#} p)

instance Storable CThostFtdcBrokerSyncField where
  sizeOf _ = {#sizeof CThostFtdcBrokerSyncField#}
  alignment _ = {#alignof CThostFtdcBrokerSyncField#}
  peek p =
    CThostFtdcBrokerSyncField <$>
    (({#get CThostFtdcBrokerSyncField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcBrokerSyncField)) ({#set CThostFtdcBrokerSyncField->BrokerID#} p)

instance Storable CThostFtdcSyncingInvestorField where
  sizeOf _ = {#sizeof CThostFtdcSyncingInvestorField#}
  alignment _ = {#alignof CThostFtdcSyncingInvestorField#}
  peek p =
    CThostFtdcSyncingInvestorField <$>
    (({#get CThostFtdcSyncingInvestorField->MarginModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->CommModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->Mobile#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->OpenDate#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->Address#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->Telephone#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorField->IsActive#} p) <*>
    (({#get CThostFtdcSyncingInvestorField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInvestorField->IdentifiedCardType#} p) <*>
    (({#get CThostFtdcSyncingInvestorField->InvestorName#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->InvestorGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorField->InvestorID#} p) >>= peekText)
  poke p s = do
    withText (marginModelID (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->MarginModelID#} p)
    withText (commModelID (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->CommModelID#} p)
    withText (mobile (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->Mobile#} p)
    withText (openDate (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->OpenDate#} p)
    withText (address (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->Address#} p)
    withText (telephone (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->Telephone#} p)
    {#set CThostFtdcSyncingInvestorField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcSyncingInvestorField))
    withText (identifiedCardNo (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->IdentifiedCardNo#} p)
    {#set CThostFtdcSyncingInvestorField->IdentifiedCardType#} p (castCharToCChar $ identifiedCardType (s :: CThostFtdcSyncingInvestorField))
    withText (investorName (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->InvestorName#} p)
    withText (investorGroupID (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->InvestorGroupID#} p)
    withText (brokerID (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->BrokerID#} p)
    withText (investorID (s :: CThostFtdcSyncingInvestorField)) ({#set CThostFtdcSyncingInvestorField->InvestorID#} p)

instance Storable CThostFtdcQueryCFMMCTradingAccountTokenField where
  sizeOf _ = {#sizeof CThostFtdcQueryCFMMCTradingAccountTokenField#}
  alignment _ = {#alignof CThostFtdcQueryCFMMCTradingAccountTokenField#}
  peek p =
    CThostFtdcQueryCFMMCTradingAccountTokenField <$>
    (({#get CThostFtdcQueryCFMMCTradingAccountTokenField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQueryCFMMCTradingAccountTokenField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQueryCFMMCTradingAccountTokenField)) ({#set CThostFtdcQueryCFMMCTradingAccountTokenField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQueryCFMMCTradingAccountTokenField)) ({#set CThostFtdcQueryCFMMCTradingAccountTokenField->BrokerID#} p)

instance Storable CThostFtdcPosiFreezeField where
  sizeOf _ = {#sizeof CThostFtdcPosiFreezeField#}
  alignment _ = {#alignof CThostFtdcPosiFreezeField#}
  peek p =
    CThostFtdcPosiFreezeField <$>
    fmap castCCharToChar ({#get CThostFtdcPosiFreezeField->FreezeType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcPosiFreezeField->FreezeReasonType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcPosiFreezeField->Volume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcPosiFreezeField->InstallID#} p) <*>
    (({#get CThostFtdcPosiFreezeField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcPosiFreezeField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcPosiFreezeField->OrderLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcPosiFreezeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcPosiFreezeField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcPosiFreezeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcPosiFreezeField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcPosiFreezeField->FreezeType#} p (castCharToCChar $ freezeType (s :: CThostFtdcPosiFreezeField))
    {#set CThostFtdcPosiFreezeField->FreezeReasonType#} p (castCharToCChar $ freezeReasonType (s :: CThostFtdcPosiFreezeField))
    {#set CThostFtdcPosiFreezeField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcPosiFreezeField))
    {#set CThostFtdcPosiFreezeField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcPosiFreezeField))
    withText (participantID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->ParticipantID#} p)
    withText (traderID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->TraderID#} p)
    withText (orderLocalID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->OrderLocalID#} p)
    withText (exchangeID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcPosiFreezeField)) ({#set CThostFtdcPosiFreezeField->BrokerID#} p)

instance Storable CThostFtdcReturnResultField where
  sizeOf _ = {#sizeof CThostFtdcReturnResultField#}
  alignment _ = {#alignof CThostFtdcReturnResultField#}
  peek p =
    CThostFtdcReturnResultField <$>
    (({#get CThostFtdcReturnResultField->DescrInfoForReturnCode#} p) >>= peekText) <*>
    (({#get CThostFtdcReturnResultField->ReturnCode#} p) >>= peekText)
  poke p s = do
    withText (descrInfoForReturnCode (s :: CThostFtdcReturnResultField)) ({#set CThostFtdcReturnResultField->DescrInfoForReturnCode#} p)
    withText (returnCode (s :: CThostFtdcReturnResultField)) ({#set CThostFtdcReturnResultField->ReturnCode#} p)

instance Storable CThostFtdcFutureSignIOField where
  sizeOf _ = {#sizeof CThostFtdcFutureSignIOField#}
  alignment _ = {#alignof CThostFtdcFutureSignIOField#}
  peek p =
    CThostFtdcFutureSignIOField <$>
    fmap fromIntegral ({#get CThostFtdcFutureSignIOField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcFutureSignIOField->RequestID#} p) <*>
    (({#get CThostFtdcFutureSignIOField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcFutureSignIOField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcFutureSignIOField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcFutureSignIOField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcFutureSignIOField->PlateSerial#} p) <*>
    (({#get CThostFtdcFutureSignIOField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcFutureSignIOField->TradeCode#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcFutureSignIOField->TID#} p (fromIntegral $ tID (s :: CThostFtdcFutureSignIOField))
    {#set CThostFtdcFutureSignIOField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcFutureSignIOField))
    withText (operNo (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->DeviceID#} p)
    withText (currencyID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->CurrencyID#} p)
    withText (digest (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->Digest#} p)
    withText (userID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->UserID#} p)
    {#set CThostFtdcFutureSignIOField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcFutureSignIOField))
    {#set CThostFtdcFutureSignIOField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcFutureSignIOField))
    {#set CThostFtdcFutureSignIOField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcFutureSignIOField))
    {#set CThostFtdcFutureSignIOField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcFutureSignIOField))
    withText (tradingDay (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcFutureSignIOField)) ({#set CThostFtdcFutureSignIOField->TradeCode#} p)

instance Storable CThostFtdcQrySyncDepositField where
  sizeOf _ = {#sizeof CThostFtdcQrySyncDepositField#}
  alignment _ = {#alignof CThostFtdcQrySyncDepositField#}
  peek p =
    CThostFtdcQrySyncDepositField <$>
    (({#get CThostFtdcQrySyncDepositField->DepositSeqNo#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySyncDepositField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (depositSeqNo (s :: CThostFtdcQrySyncDepositField)) ({#set CThostFtdcQrySyncDepositField->DepositSeqNo#} p)
    withText (brokerID (s :: CThostFtdcQrySyncDepositField)) ({#set CThostFtdcQrySyncDepositField->BrokerID#} p)

instance Storable CThostFtdcPartBrokerField where
  sizeOf _ = {#sizeof CThostFtdcPartBrokerField#}
  alignment _ = {#alignof CThostFtdcPartBrokerField#}
  peek p =
    CThostFtdcPartBrokerField <$>
    fmap fromIntegral ({#get CThostFtdcPartBrokerField->IsActive#} p) <*>
    (({#get CThostFtdcPartBrokerField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcPartBrokerField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcPartBrokerField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcPartBrokerField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcPartBrokerField))
    withText (participantID (s :: CThostFtdcPartBrokerField)) ({#set CThostFtdcPartBrokerField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcPartBrokerField)) ({#set CThostFtdcPartBrokerField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcPartBrokerField)) ({#set CThostFtdcPartBrokerField->BrokerID#} p)

instance Storable CThostFtdcQryInvestorGroupField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorGroupField#}
  alignment _ = {#alignof CThostFtdcQryInvestorGroupField#}
  peek p =
    CThostFtdcQryInvestorGroupField <$>
    (({#get CThostFtdcQryInvestorGroupField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcQryInvestorGroupField)) ({#set CThostFtdcQryInvestorGroupField->BrokerID#} p)

instance Storable CThostFtdcLockPositionField where
  sizeOf _ = {#sizeof CThostFtdcLockPositionField#}
  alignment _ = {#alignof CThostFtdcLockPositionField#}
  peek p =
    CThostFtdcLockPositionField <$>
    fmap fromIntegral ({#get CThostFtdcLockPositionField->FrozenVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLockPositionField->Volume#} p) <*>
    (({#get CThostFtdcLockPositionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockPositionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockPositionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLockPositionField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcLockPositionField->FrozenVolume#} p (fromIntegral $ frozenVolume (s :: CThostFtdcLockPositionField))
    {#set CThostFtdcLockPositionField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcLockPositionField))
    withText (exchangeID (s :: CThostFtdcLockPositionField)) ({#set CThostFtdcLockPositionField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcLockPositionField)) ({#set CThostFtdcLockPositionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcLockPositionField)) ({#set CThostFtdcLockPositionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLockPositionField)) ({#set CThostFtdcLockPositionField->BrokerID#} p)

instance Storable CThostFtdcExchangeRateField where
  sizeOf _ = {#sizeof CThostFtdcExchangeRateField#}
  alignment _ = {#alignof CThostFtdcExchangeRateField#}
  peek p =
    CThostFtdcExchangeRateField <$>
    fmap realToFrac ({#get CThostFtdcExchangeRateField->ExchangeRate#} p) <*>
    (({#get CThostFtdcExchangeRateField->ToCurrencyID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcExchangeRateField->FromCurrencyUnit#} p) <*>
    (({#get CThostFtdcExchangeRateField->FromCurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExchangeRateField->ExchangeRate#} p (realToFrac $ exchangeRate (s :: CThostFtdcExchangeRateField))
    withText (toCurrencyID (s :: CThostFtdcExchangeRateField)) ({#set CThostFtdcExchangeRateField->ToCurrencyID#} p)
    {#set CThostFtdcExchangeRateField->FromCurrencyUnit#} p (realToFrac $ fromCurrencyUnit (s :: CThostFtdcExchangeRateField))
    withText (fromCurrencyID (s :: CThostFtdcExchangeRateField)) ({#set CThostFtdcExchangeRateField->FromCurrencyID#} p)
    withText (brokerID (s :: CThostFtdcExchangeRateField)) ({#set CThostFtdcExchangeRateField->BrokerID#} p)

instance Storable CThostFtdcQryProductGroupField where
  sizeOf _ = {#sizeof CThostFtdcQryProductGroupField#}
  alignment _ = {#alignof CThostFtdcQryProductGroupField#}
  peek p =
    CThostFtdcQryProductGroupField <$>
    (({#get CThostFtdcQryProductGroupField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryProductGroupField->ProductID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryProductGroupField)) ({#set CThostFtdcQryProductGroupField->ExchangeID#} p)
    withText (productID (s :: CThostFtdcQryProductGroupField)) ({#set CThostFtdcQryProductGroupField->ProductID#} p)

instance Storable CThostFtdcSuperUserFunctionField where
  sizeOf _ = {#sizeof CThostFtdcSuperUserFunctionField#}
  alignment _ = {#alignof CThostFtdcSuperUserFunctionField#}
  peek p =
    CThostFtdcSuperUserFunctionField <$>
    fmap castCCharToChar ({#get CThostFtdcSuperUserFunctionField->FunctionCode#} p) <*>
    (({#get CThostFtdcSuperUserFunctionField->UserID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSuperUserFunctionField->FunctionCode#} p (castCharToCChar $ functionCode (s :: CThostFtdcSuperUserFunctionField))
    withText (userID (s :: CThostFtdcSuperUserFunctionField)) ({#set CThostFtdcSuperUserFunctionField->UserID#} p)

instance Storable CThostFtdcQryDesignateField where
  sizeOf _ = {#sizeof CThostFtdcQryDesignateField#}
  alignment _ = {#alignof CThostFtdcQryDesignateField#}
  peek p =
    CThostFtdcQryDesignateField <$>
    (({#get CThostFtdcQryDesignateField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryDesignateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryDesignateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryDesignateField)) ({#set CThostFtdcQryDesignateField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryDesignateField)) ({#set CThostFtdcQryDesignateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryDesignateField)) ({#set CThostFtdcQryDesignateField->BrokerID#} p)

instance Storable CThostFtdcFensUserInfoField where
  sizeOf _ = {#sizeof CThostFtdcFensUserInfoField#}
  alignment _ = {#alignof CThostFtdcFensUserInfoField#}
  peek p =
    CThostFtdcFensUserInfoField <$>
    fmap castCCharToChar ({#get CThostFtdcFensUserInfoField->LoginMode#} p) <*>
    (({#get CThostFtdcFensUserInfoField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcFensUserInfoField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcFensUserInfoField->LoginMode#} p (castCharToCChar $ loginMode (s :: CThostFtdcFensUserInfoField))
    withText (userID (s :: CThostFtdcFensUserInfoField)) ({#set CThostFtdcFensUserInfoField->UserID#} p)
    withText (brokerID (s :: CThostFtdcFensUserInfoField)) ({#set CThostFtdcFensUserInfoField->BrokerID#} p)

instance Storable CThostFtdcQryHisOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryHisOrderField#}
  alignment _ = {#alignof CThostFtdcQryHisOrderField#}
  peek p =
    CThostFtdcQryHisOrderField <$>
    fmap fromIntegral ({#get CThostFtdcQryHisOrderField->SettlementID#} p) <*>
    (({#get CThostFtdcQryHisOrderField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->InsertTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->InsertTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryHisOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryHisOrderField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcQryHisOrderField))
    withText (tradingDay (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->TradingDay#} p)
    withText (insertTimeEnd (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->InsertTimeEnd#} p)
    withText (insertTimeStart (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->InsertTimeStart#} p)
    withText (orderSysID (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryHisOrderField)) ({#set CThostFtdcQryHisOrderField->BrokerID#} p)

instance Storable CThostFtdcQryErrOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryErrOrderField#}
  alignment _ = {#alignof CThostFtdcQryErrOrderField#}
  peek p =
    CThostFtdcQryErrOrderField <$>
    (({#get CThostFtdcQryErrOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryErrOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryErrOrderField)) ({#set CThostFtdcQryErrOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryErrOrderField)) ({#set CThostFtdcQryErrOrderField->BrokerID#} p)

instance Storable CThostFtdcExchangeForQuoteField where
  sizeOf _ = {#sizeof CThostFtdcExchangeForQuoteField#}
  alignment _ = {#alignof CThostFtdcExchangeForQuoteField#}
  peek p =
    CThostFtdcExchangeForQuoteField <$>
    (({#get CThostFtdcExchangeForQuoteField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->IPAddress#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeForQuoteField->ForQuoteStatus#} p) <*>
    (({#get CThostFtdcExchangeForQuoteField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeForQuoteField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeForQuoteField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeForQuoteField->ForQuoteLocalID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->BranchID#} p)
    withText (macAddress (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->IPAddress#} p)
    {#set CThostFtdcExchangeForQuoteField->ForQuoteStatus#} p (castCharToCChar $ forQuoteStatus (s :: CThostFtdcExchangeForQuoteField))
    withText (insertTime (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->InsertDate#} p)
    {#set CThostFtdcExchangeForQuoteField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeForQuoteField))
    withText (traderID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->ExchangeID#} p)
    withText (forQuoteLocalID (s :: CThostFtdcExchangeForQuoteField)) ({#set CThostFtdcExchangeForQuoteField->ForQuoteLocalID#} p)

instance Storable CThostFtdcTraderOfferField where
  sizeOf _ = {#sizeof CThostFtdcTraderOfferField#}
  alignment _ = {#alignof CThostFtdcTraderOfferField#}
  peek p =
    CThostFtdcTraderOfferField <$>
    fmap castCCharToChar ({#get CThostFtdcTraderOfferField->BizType#} p) <*>
    (({#get CThostFtdcTraderOfferField->MaxOrderMessageReference#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->MaxTradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->StartTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->StartDate#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->ConnectTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->ConnectDate#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->LastReportTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->LastReportDate#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->ConnectRequestTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->ConnectRequestDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTraderOfferField->TraderConnectStatus#} p) <*>
    (({#get CThostFtdcTraderOfferField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTraderOfferField->InstallID#} p) <*>
    (({#get CThostFtdcTraderOfferField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcTraderOfferField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTraderOfferField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcTraderOfferField))
    withText (maxOrderMessageReference (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->MaxOrderMessageReference#} p)
    withText (maxTradeID (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->MaxTradeID#} p)
    withText (brokerID (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->BrokerID#} p)
    withText (tradingDay (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->TradingDay#} p)
    withText (startTime (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->StartTime#} p)
    withText (startDate (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->StartDate#} p)
    withText (connectTime (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->ConnectTime#} p)
    withText (connectDate (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->ConnectDate#} p)
    withText (lastReportTime (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->LastReportTime#} p)
    withText (lastReportDate (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->LastReportDate#} p)
    withText (connectRequestTime (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->ConnectRequestTime#} p)
    withText (connectRequestDate (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->ConnectRequestDate#} p)
    {#set CThostFtdcTraderOfferField->TraderConnectStatus#} p (castCharToCChar $ traderConnectStatus (s :: CThostFtdcTraderOfferField))
    withText (orderLocalID (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->OrderLocalID#} p)
    {#set CThostFtdcTraderOfferField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcTraderOfferField))
    withText (password (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->Password#} p)
    withText (participantID (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->ParticipantID#} p)
    withText (traderID (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcTraderOfferField)) ({#set CThostFtdcTraderOfferField->ExchangeID#} p)

instance Storable CThostFtdcUserIPField where
  sizeOf _ = {#sizeof CThostFtdcUserIPField#}
  alignment _ = {#alignof CThostFtdcUserIPField#}
  peek p =
    CThostFtdcUserIPField <$>
    (({#get CThostFtdcUserIPField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcUserIPField->IPMask#} p) >>= peekText) <*>
    (({#get CThostFtdcUserIPField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcUserIPField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcUserIPField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcUserIPField)) ({#set CThostFtdcUserIPField->MacAddress#} p)
    withText (iPMask (s :: CThostFtdcUserIPField)) ({#set CThostFtdcUserIPField->IPMask#} p)
    withText (iPAddress (s :: CThostFtdcUserIPField)) ({#set CThostFtdcUserIPField->IPAddress#} p)
    withText (userID (s :: CThostFtdcUserIPField)) ({#set CThostFtdcUserIPField->UserID#} p)
    withText (brokerID (s :: CThostFtdcUserIPField)) ({#set CThostFtdcUserIPField->BrokerID#} p)

instance Storable CThostFtdcLinkManField where
  sizeOf _ = {#sizeof CThostFtdcLinkManField#}
  alignment _ = {#alignof CThostFtdcLinkManField#}
  peek p =
    CThostFtdcLinkManField <$>
    (({#get CThostFtdcLinkManField->PersonFullName#} p) >>= peekText) <*>
    (({#get CThostFtdcLinkManField->UOAZipCode#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLinkManField->Priority#} p) <*>
    (({#get CThostFtdcLinkManField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcLinkManField->Address#} p) >>= peekText) <*>
    (({#get CThostFtdcLinkManField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcLinkManField->PersonName#} p) >>= peekText) <*>
    (({#get CThostFtdcLinkManField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcLinkManField->IdentifiedCardType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcLinkManField->PersonType#} p) <*>
    (({#get CThostFtdcLinkManField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcLinkManField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (personFullName (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->PersonFullName#} p)
    withText (uOAZipCode (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->UOAZipCode#} p)
    {#set CThostFtdcLinkManField->Priority#} p (fromIntegral $ priority (s :: CThostFtdcLinkManField))
    withText (zipCode (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->ZipCode#} p)
    withText (address (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->Address#} p)
    withText (telephone (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->Telephone#} p)
    withText (personName (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->PersonName#} p)
    withText (identifiedCardNo (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->IdentifiedCardNo#} p)
    {#set CThostFtdcLinkManField->IdentifiedCardType#} p (castCharToCChar $ identifiedCardType (s :: CThostFtdcLinkManField))
    {#set CThostFtdcLinkManField->PersonType#} p (castCharToCChar $ personType (s :: CThostFtdcLinkManField))
    withText (investorID (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcLinkManField)) ({#set CThostFtdcLinkManField->BrokerID#} p)

instance Storable CThostFtdcVerifyCustInfoField where
  sizeOf _ = {#sizeof CThostFtdcVerifyCustInfoField#}
  alignment _ = {#alignof CThostFtdcVerifyCustInfoField#}
  peek p =
    CThostFtdcVerifyCustInfoField <$>
    fmap castCCharToChar ({#get CThostFtdcVerifyCustInfoField->CustType#} p) <*>
    (({#get CThostFtdcVerifyCustInfoField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcVerifyCustInfoField->IdCardType#} p) <*>
    (({#get CThostFtdcVerifyCustInfoField->CustomerName#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcVerifyCustInfoField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcVerifyCustInfoField))
    withText (identifiedCardNo (s :: CThostFtdcVerifyCustInfoField)) ({#set CThostFtdcVerifyCustInfoField->IdentifiedCardNo#} p)
    {#set CThostFtdcVerifyCustInfoField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcVerifyCustInfoField))
    withText (customerName (s :: CThostFtdcVerifyCustInfoField)) ({#set CThostFtdcVerifyCustInfoField->CustomerName#} p)

instance Storable CThostFtdcProductGroupField where
  sizeOf _ = {#sizeof CThostFtdcProductGroupField#}
  alignment _ = {#alignof CThostFtdcProductGroupField#}
  peek p =
    CThostFtdcProductGroupField <$>
    (({#get CThostFtdcProductGroupField->ProductGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcProductGroupField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcProductGroupField->ProductID#} p) >>= peekText)
  poke p s = do
    withText (productGroupID (s :: CThostFtdcProductGroupField)) ({#set CThostFtdcProductGroupField->ProductGroupID#} p)
    withText (exchangeID (s :: CThostFtdcProductGroupField)) ({#set CThostFtdcProductGroupField->ExchangeID#} p)
    withText (productID (s :: CThostFtdcProductGroupField)) ({#set CThostFtdcProductGroupField->ProductID#} p)

instance Storable CThostFtdcQryLoginForbiddenUserField where
  sizeOf _ = {#sizeof CThostFtdcQryLoginForbiddenUserField#}
  alignment _ = {#alignof CThostFtdcQryLoginForbiddenUserField#}
  peek p =
    CThostFtdcQryLoginForbiddenUserField <$>
    (({#get CThostFtdcQryLoginForbiddenUserField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLoginForbiddenUserField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcQryLoginForbiddenUserField)) ({#set CThostFtdcQryLoginForbiddenUserField->UserID#} p)
    withText (brokerID (s :: CThostFtdcQryLoginForbiddenUserField)) ({#set CThostFtdcQryLoginForbiddenUserField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeMarginRateField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeMarginRateField#}
  alignment _ = {#alignof CThostFtdcQryExchangeMarginRateField#}
  peek p =
    CThostFtdcQryExchangeMarginRateField <$>
    fmap castCCharToChar ({#get CThostFtdcQryExchangeMarginRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcQryExchangeMarginRateField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeMarginRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryExchangeMarginRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQryExchangeMarginRateField))
    withText (instrumentID (s :: CThostFtdcQryExchangeMarginRateField)) ({#set CThostFtdcQryExchangeMarginRateField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcQryExchangeMarginRateField)) ({#set CThostFtdcQryExchangeMarginRateField->BrokerID#} p)

instance Storable CThostFtdcQryLimitAmountField where
  sizeOf _ = {#sizeof CThostFtdcQryLimitAmountField#}
  alignment _ = {#alignof CThostFtdcQryLimitAmountField#}
  peek p =
    CThostFtdcQryLimitAmountField <$>
    (({#get CThostFtdcQryLimitAmountField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitAmountField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLimitAmountField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryLimitAmountField)) ({#set CThostFtdcQryLimitAmountField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryLimitAmountField)) ({#set CThostFtdcQryLimitAmountField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryLimitAmountField)) ({#set CThostFtdcQryLimitAmountField->BrokerID#} p)

instance Storable CThostFtdcQryBulletinField where
  sizeOf _ = {#sizeof CThostFtdcQryBulletinField#}
  alignment _ = {#alignof CThostFtdcQryBulletinField#}
  peek p =
    CThostFtdcQryBulletinField <$>
    fmap castCCharToChar ({#get CThostFtdcQryBulletinField->NewsUrgency#} p) <*>
    (({#get CThostFtdcQryBulletinField->NewsType#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQryBulletinField->SequenceNo#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQryBulletinField->BulletinID#} p) <*>
    (({#get CThostFtdcQryBulletinField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryBulletinField->NewsUrgency#} p (castCharToCChar $ newsUrgency (s :: CThostFtdcQryBulletinField))
    withText (newsType (s :: CThostFtdcQryBulletinField)) ({#set CThostFtdcQryBulletinField->NewsType#} p)
    {#set CThostFtdcQryBulletinField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcQryBulletinField))
    {#set CThostFtdcQryBulletinField->BulletinID#} p (fromIntegral $ bulletinID (s :: CThostFtdcQryBulletinField))
    withText (exchangeID (s :: CThostFtdcQryBulletinField)) ({#set CThostFtdcQryBulletinField->ExchangeID#} p)

instance Storable CThostFtdcUserSessionField where
  sizeOf _ = {#sizeof CThostFtdcUserSessionField#}
  alignment _ = {#alignof CThostFtdcUserSessionField#}
  peek p =
    CThostFtdcUserSessionField <$>
    (({#get CThostFtdcUserSessionField->LoginRemark#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->ProtocolInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->InterfaceProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->UserProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->LoginTime#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->LoginDate#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcUserSessionField->BrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcUserSessionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcUserSessionField->FrontID#} p)
  poke p s = do
    withText (loginRemark (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->LoginRemark#} p)
    withText (macAddress (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->MacAddress#} p)
    withText (protocolInfo (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->ProtocolInfo#} p)
    withText (interfaceProductInfo (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->InterfaceProductInfo#} p)
    withText (userProductInfo (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->UserProductInfo#} p)
    withText (iPAddress (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->IPAddress#} p)
    withText (loginTime (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->LoginTime#} p)
    withText (loginDate (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->LoginDate#} p)
    withText (userID (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->UserID#} p)
    withText (brokerID (s :: CThostFtdcUserSessionField)) ({#set CThostFtdcUserSessionField->BrokerID#} p)
    {#set CThostFtdcUserSessionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcUserSessionField))
    {#set CThostFtdcUserSessionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcUserSessionField))

instance Storable CThostFtdcSyncDepositField where
  sizeOf _ = {#sizeof CThostFtdcSyncDepositField#}
  alignment _ = {#alignof CThostFtdcSyncDepositField#}
  peek p =
    CThostFtdcSyncDepositField <$>
    fmap castCCharToChar ({#get CThostFtdcSyncDepositField->BizType#} p) <*>
    (({#get CThostFtdcSyncDepositField->CurrencyID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcSyncDepositField->IsForce#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncDepositField->Deposit#} p) <*>
    (({#get CThostFtdcSyncDepositField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncDepositField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncDepositField->DepositSeqNo#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSyncDepositField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcSyncDepositField))
    withText (currencyID (s :: CThostFtdcSyncDepositField)) ({#set CThostFtdcSyncDepositField->CurrencyID#} p)
    {#set CThostFtdcSyncDepositField->IsForce#} p (fromIntegral $ isForce (s :: CThostFtdcSyncDepositField))
    {#set CThostFtdcSyncDepositField->Deposit#} p (realToFrac $ deposit (s :: CThostFtdcSyncDepositField))
    withText (investorID (s :: CThostFtdcSyncDepositField)) ({#set CThostFtdcSyncDepositField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSyncDepositField)) ({#set CThostFtdcSyncDepositField->BrokerID#} p)
    withText (depositSeqNo (s :: CThostFtdcSyncDepositField)) ({#set CThostFtdcSyncDepositField->DepositSeqNo#} p)

instance Storable CThostFtdcCombActionField where
  sizeOf _ = {#sizeof CThostFtdcCombActionField#}
  alignment _ = {#alignof CThostFtdcCombActionField#}
  peek p =
    CThostFtdcCombActionField <$>
    (({#get CThostFtdcCombActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->ComTradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->SequenceNo#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->SettlementID#} p) <*>
    (({#get CThostFtdcCombActionField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcCombActionField->ActionStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->InstallID#} p) <*>
    (({#get CThostFtdcCombActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->ActionLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcCombActionField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcCombActionField->CombDirection#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCombActionField->Volume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcCombActionField->Direction#} p) <*>
    (({#get CThostFtdcCombActionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->CombActionRef#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->BranchID#} p)
    withText (comTradeID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->ComTradeID#} p)
    withText (macAddress (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->IPAddress#} p)
    withText (statusMsg (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->UserProductInfo#} p)
    {#set CThostFtdcCombActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcCombActionField))
    withText (tradingDay (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->TradingDay#} p)
    {#set CThostFtdcCombActionField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->ActionStatus#} p (castCharToCChar $ actionStatus (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcCombActionField))
    withText (traderID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->ExchangeID#} p)
    withText (actionLocalID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->ActionLocalID#} p)
    {#set CThostFtdcCombActionField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->CombDirection#} p (castCharToCChar $ combDirection (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcCombActionField))
    {#set CThostFtdcCombActionField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcCombActionField))
    withText (userID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->UserID#} p)
    withText (combActionRef (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->CombActionRef#} p)
    withText (instrumentID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcCombActionField)) ({#set CThostFtdcCombActionField->BrokerID#} p)

instance Storable CThostFtdcCFMMCTradingAccountTokenField where
  sizeOf _ = {#sizeof CThostFtdcCFMMCTradingAccountTokenField#}
  alignment _ = {#alignof CThostFtdcCFMMCTradingAccountTokenField#}
  peek p =
    CThostFtdcCFMMCTradingAccountTokenField <$>
    (({#get CThostFtdcCFMMCTradingAccountTokenField->Token#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCFMMCTradingAccountTokenField->KeyID#} p) <*>
    (({#get CThostFtdcCFMMCTradingAccountTokenField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCTradingAccountTokenField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcCFMMCTradingAccountTokenField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (token (s :: CThostFtdcCFMMCTradingAccountTokenField)) ({#set CThostFtdcCFMMCTradingAccountTokenField->Token#} p)
    {#set CThostFtdcCFMMCTradingAccountTokenField->KeyID#} p (fromIntegral $ keyID (s :: CThostFtdcCFMMCTradingAccountTokenField))
    withText (accountID (s :: CThostFtdcCFMMCTradingAccountTokenField)) ({#set CThostFtdcCFMMCTradingAccountTokenField->AccountID#} p)
    withText (participantID (s :: CThostFtdcCFMMCTradingAccountTokenField)) ({#set CThostFtdcCFMMCTradingAccountTokenField->ParticipantID#} p)
    withText (brokerID (s :: CThostFtdcCFMMCTradingAccountTokenField)) ({#set CThostFtdcCFMMCTradingAccountTokenField->BrokerID#} p)

instance Storable CThostFtdcErrorConditionalOrderField where
  sizeOf _ = {#sizeof CThostFtdcErrorConditionalOrderField#}
  alignment _ = {#alignof CThostFtdcErrorConditionalOrderField#}
  peek p =
    CThostFtdcErrorConditionalOrderField <$>
    (({#get CThostFtdcErrorConditionalOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->IsSwapOrder#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->ZCETotalTradedVolume#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->RelativeOrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->BrokerOrderSeq#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ActiveUserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->UserForceClose#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->SequenceNo#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ClearingPartID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ActiveTraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->UpdateTime#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->SuspendTime#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ActiveTime#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->VolumeTotal#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->VolumeTraded#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->OrderType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->OrderStatus#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->OrderSource#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->OrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->SettlementID#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->InstallID#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->RequestID#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->IsAutoSuspend#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->ForceCloseReason#} p) <*>
    fmap realToFrac ({#get CThostFtdcErrorConditionalOrderField->StopPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->ContingentCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->MinVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->VolumeCondition#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->GTDDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->TimeCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrorConditionalOrderField->VolumeTotalOriginal#} p) <*>
    fmap realToFrac ({#get CThostFtdcErrorConditionalOrderField->LimitPrice#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->CombHedgeFlag#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->CombOffsetFlag#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrorConditionalOrderField->OrderPriceType#} p) <*>
    (({#get CThostFtdcErrorConditionalOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->OrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrorConditionalOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->IPAddress#} p)
    withText (currencyID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->BranchID#} p)
    {#set CThostFtdcErrorConditionalOrderField->IsSwapOrder#} p (fromIntegral $ isSwapOrder (s :: CThostFtdcErrorConditionalOrderField))
    withText (errorMsg (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ErrorMsg#} p)
    {#set CThostFtdcErrorConditionalOrderField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->ZCETotalTradedVolume#} p (fromIntegral $ zCETotalTradedVolume (s :: CThostFtdcErrorConditionalOrderField))
    withText (relativeOrderSysID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->RelativeOrderSysID#} p)
    {#set CThostFtdcErrorConditionalOrderField->BrokerOrderSeq#} p (fromIntegral $ brokerOrderSeq (s :: CThostFtdcErrorConditionalOrderField))
    withText (activeUserID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ActiveUserID#} p)
    {#set CThostFtdcErrorConditionalOrderField->UserForceClose#} p (fromIntegral $ userForceClose (s :: CThostFtdcErrorConditionalOrderField))
    withText (statusMsg (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->UserProductInfo#} p)
    {#set CThostFtdcErrorConditionalOrderField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcErrorConditionalOrderField))
    withText (clearingPartID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ClearingPartID#} p)
    withText (activeTraderID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ActiveTraderID#} p)
    withText (cancelTime (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->CancelTime#} p)
    withText (updateTime (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->UpdateTime#} p)
    withText (suspendTime (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->SuspendTime#} p)
    withText (activeTime (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ActiveTime#} p)
    withText (insertTime (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->InsertDate#} p)
    {#set CThostFtdcErrorConditionalOrderField->VolumeTotal#} p (fromIntegral $ volumeTotal (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->VolumeTraded#} p (fromIntegral $ volumeTraded (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->OrderType#} p (castCharToCChar $ orderType (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->OrderStatus#} p (castCharToCChar $ orderStatus (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->OrderSource#} p (castCharToCChar $ orderSource (s :: CThostFtdcErrorConditionalOrderField))
    withText (orderSysID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->OrderSysID#} p)
    {#set CThostFtdcErrorConditionalOrderField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcErrorConditionalOrderField))
    withText (tradingDay (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->TradingDay#} p)
    {#set CThostFtdcErrorConditionalOrderField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcErrorConditionalOrderField))
    withText (traderID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->ExchangeID#} p)
    withText (orderLocalID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->OrderLocalID#} p)
    {#set CThostFtdcErrorConditionalOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcErrorConditionalOrderField))
    withText (businessUnit (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->BusinessUnit#} p)
    {#set CThostFtdcErrorConditionalOrderField->IsAutoSuspend#} p (fromIntegral $ isAutoSuspend (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->ForceCloseReason#} p (castCharToCChar $ forceCloseReason (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->StopPrice#} p (realToFrac $ stopPrice (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->ContingentCondition#} p (castCharToCChar $ contingentCondition (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->MinVolume#} p (fromIntegral $ minVolume (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->VolumeCondition#} p (castCharToCChar $ volumeCondition (s :: CThostFtdcErrorConditionalOrderField))
    withText (gTDDate (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->GTDDate#} p)
    {#set CThostFtdcErrorConditionalOrderField->TimeCondition#} p (castCharToCChar $ timeCondition (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->VolumeTotalOriginal#} p (fromIntegral $ volumeTotalOriginal (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcErrorConditionalOrderField))
    withText (combHedgeFlag (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->CombHedgeFlag#} p)
    withText (combOffsetFlag (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->CombOffsetFlag#} p)
    {#set CThostFtdcErrorConditionalOrderField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcErrorConditionalOrderField))
    {#set CThostFtdcErrorConditionalOrderField->OrderPriceType#} p (castCharToCChar $ orderPriceType (s :: CThostFtdcErrorConditionalOrderField))
    withText (userID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->UserID#} p)
    withText (orderRef (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->OrderRef#} p)
    withText (instrumentID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcErrorConditionalOrderField)) ({#set CThostFtdcErrorConditionalOrderField->BrokerID#} p)

instance Storable CThostFtdcBrokerUserEventField where
  sizeOf _ = {#sizeof CThostFtdcBrokerUserEventField#}
  alignment _ = {#alignof CThostFtdcBrokerUserEventField#}
  peek p =
    CThostFtdcBrokerUserEventField <$>
    (({#get CThostFtdcBrokerUserEventField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserEventField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserEventField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserEventField->UserEventInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserEventField->EventTime#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserEventField->EventDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcBrokerUserEventField->EventSequenceNo#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcBrokerUserEventField->UserEventType#} p) <*>
    (({#get CThostFtdcBrokerUserEventField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserEventField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->InvestorID#} p)
    withText (userEventInfo (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->UserEventInfo#} p)
    withText (eventTime (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->EventTime#} p)
    withText (eventDate (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->EventDate#} p)
    {#set CThostFtdcBrokerUserEventField->EventSequenceNo#} p (fromIntegral $ eventSequenceNo (s :: CThostFtdcBrokerUserEventField))
    {#set CThostFtdcBrokerUserEventField->UserEventType#} p (castCharToCChar $ userEventType (s :: CThostFtdcBrokerUserEventField))
    withText (userID (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->UserID#} p)
    withText (brokerID (s :: CThostFtdcBrokerUserEventField)) ({#set CThostFtdcBrokerUserEventField->BrokerID#} p)

instance Storable CThostFtdcTradingCodeField where
  sizeOf _ = {#sizeof CThostFtdcTradingCodeField#}
  alignment _ = {#alignof CThostFtdcTradingCodeField#}
  peek p =
    CThostFtdcTradingCodeField <$>
    fmap castCCharToChar ({#get CThostFtdcTradingCodeField->BizType#} p) <*>
    (({#get CThostFtdcTradingCodeField->BranchID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTradingCodeField->ClientIDType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTradingCodeField->IsActive#} p) <*>
    (({#get CThostFtdcTradingCodeField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingCodeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingCodeField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingCodeField->InvestorID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTradingCodeField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcTradingCodeField))
    withText (branchID (s :: CThostFtdcTradingCodeField)) ({#set CThostFtdcTradingCodeField->BranchID#} p)
    {#set CThostFtdcTradingCodeField->ClientIDType#} p (castCharToCChar $ clientIDType (s :: CThostFtdcTradingCodeField))
    {#set CThostFtdcTradingCodeField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcTradingCodeField))
    withText (clientID (s :: CThostFtdcTradingCodeField)) ({#set CThostFtdcTradingCodeField->ClientID#} p)
    withText (exchangeID (s :: CThostFtdcTradingCodeField)) ({#set CThostFtdcTradingCodeField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcTradingCodeField)) ({#set CThostFtdcTradingCodeField->BrokerID#} p)
    withText (investorID (s :: CThostFtdcTradingCodeField)) ({#set CThostFtdcTradingCodeField->InvestorID#} p)

instance Storable CThostFtdcRspUserLoginField where
  sizeOf _ = {#sizeof CThostFtdcRspUserLoginField#}
  alignment _ = {#alignof CThostFtdcRspUserLoginField#}
  peek p =
    CThostFtdcRspUserLoginField <$>
    (({#get CThostFtdcRspUserLoginField->INETime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->FFEXTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->CZCETime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->DCETime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->SHFETime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->MaxOrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspUserLoginField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspUserLoginField->FrontID#} p) <*>
    (({#get CThostFtdcRspUserLoginField->SystemName#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->LoginTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspUserLoginField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (iNETime (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->INETime#} p)
    withText (fFEXTime (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->FFEXTime#} p)
    withText (cZCETime (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->CZCETime#} p)
    withText (dCETime (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->DCETime#} p)
    withText (sHFETime (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->SHFETime#} p)
    withText (maxOrderRef (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->MaxOrderRef#} p)
    {#set CThostFtdcRspUserLoginField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspUserLoginField))
    {#set CThostFtdcRspUserLoginField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcRspUserLoginField))
    withText (systemName (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->SystemName#} p)
    withText (userID (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->UserID#} p)
    withText (brokerID (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->BrokerID#} p)
    withText (loginTime (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->LoginTime#} p)
    withText (tradingDay (s :: CThostFtdcRspUserLoginField)) ({#set CThostFtdcRspUserLoginField->TradingDay#} p)

instance Storable CThostFtdcOptionInstrDeltaField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrDeltaField#}
  alignment _ = {#alignof CThostFtdcOptionInstrDeltaField#}
  peek p =
    CThostFtdcOptionInstrDeltaField <$>
    (({#get CThostFtdcOptionInstrDeltaField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrDeltaField->Delta#} p) <*>
    (({#get CThostFtdcOptionInstrDeltaField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrDeltaField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrDeltaField->InvestorRange#} p) <*>
    (({#get CThostFtdcOptionInstrDeltaField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcOptionInstrDeltaField)) ({#set CThostFtdcOptionInstrDeltaField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrDeltaField->Delta#} p (realToFrac $ delta (s :: CThostFtdcOptionInstrDeltaField))
    withText (investorID (s :: CThostFtdcOptionInstrDeltaField)) ({#set CThostFtdcOptionInstrDeltaField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrDeltaField)) ({#set CThostFtdcOptionInstrDeltaField->BrokerID#} p)
    {#set CThostFtdcOptionInstrDeltaField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcOptionInstrDeltaField))
    withText (instrumentID (s :: CThostFtdcOptionInstrDeltaField)) ({#set CThostFtdcOptionInstrDeltaField->InstrumentID#} p)

instance Storable CThostFtdcSyncFundMortgageField where
  sizeOf _ = {#sizeof CThostFtdcSyncFundMortgageField#}
  alignment _ = {#alignof CThostFtdcSyncFundMortgageField#}
  peek p =
    CThostFtdcSyncFundMortgageField <$>
    (({#get CThostFtdcSyncFundMortgageField->ToCurrencyID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcSyncFundMortgageField->MortgageAmount#} p) <*>
    (({#get CThostFtdcSyncFundMortgageField->FromCurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncFundMortgageField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncFundMortgageField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncFundMortgageField->MortgageSeqNo#} p) >>= peekText)
  poke p s = do
    withText (toCurrencyID (s :: CThostFtdcSyncFundMortgageField)) ({#set CThostFtdcSyncFundMortgageField->ToCurrencyID#} p)
    {#set CThostFtdcSyncFundMortgageField->MortgageAmount#} p (realToFrac $ mortgageAmount (s :: CThostFtdcSyncFundMortgageField))
    withText (fromCurrencyID (s :: CThostFtdcSyncFundMortgageField)) ({#set CThostFtdcSyncFundMortgageField->FromCurrencyID#} p)
    withText (investorID (s :: CThostFtdcSyncFundMortgageField)) ({#set CThostFtdcSyncFundMortgageField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSyncFundMortgageField)) ({#set CThostFtdcSyncFundMortgageField->BrokerID#} p)
    withText (mortgageSeqNo (s :: CThostFtdcSyncFundMortgageField)) ({#set CThostFtdcSyncFundMortgageField->MortgageSeqNo#} p)

instance Storable CThostFtdcQryStockDisposalField where
  sizeOf _ = {#sizeof CThostFtdcQryStockDisposalField#}
  alignment _ = {#alignof CThostFtdcQryStockDisposalField#}
  peek p =
    CThostFtdcQryStockDisposalField <$>
    (({#get CThostFtdcQryStockDisposalField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryStockDisposalField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryStockDisposalField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryStockDisposalField)) ({#set CThostFtdcQryStockDisposalField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryStockDisposalField)) ({#set CThostFtdcQryStockDisposalField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryStockDisposalField)) ({#set CThostFtdcQryStockDisposalField->BrokerID#} p)

instance Storable CThostFtdcReqAuthenticateField where
  sizeOf _ = {#sizeof CThostFtdcReqAuthenticateField#}
  alignment _ = {#alignof CThostFtdcReqAuthenticateField#}
  peek p =
    CThostFtdcReqAuthenticateField <$>
    (({#get CThostFtdcReqAuthenticateField->AuthCode#} p) >>= peekText) <*>
    (({#get CThostFtdcReqAuthenticateField->UserProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcReqAuthenticateField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqAuthenticateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (authCode (s :: CThostFtdcReqAuthenticateField)) ({#set CThostFtdcReqAuthenticateField->AuthCode#} p)
    withText (userProductInfo (s :: CThostFtdcReqAuthenticateField)) ({#set CThostFtdcReqAuthenticateField->UserProductInfo#} p)
    withText (userID (s :: CThostFtdcReqAuthenticateField)) ({#set CThostFtdcReqAuthenticateField->UserID#} p)
    withText (brokerID (s :: CThostFtdcReqAuthenticateField)) ({#set CThostFtdcReqAuthenticateField->BrokerID#} p)

instance Storable CThostFtdcSyncingInvestorGroupField where
  sizeOf _ = {#sizeof CThostFtdcSyncingInvestorGroupField#}
  alignment _ = {#alignof CThostFtdcSyncingInvestorGroupField#}
  peek p =
    CThostFtdcSyncingInvestorGroupField <$>
    (({#get CThostFtdcSyncingInvestorGroupField->InvestorGroupName#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorGroupField->InvestorGroupID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorGroupField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorGroupName (s :: CThostFtdcSyncingInvestorGroupField)) ({#set CThostFtdcSyncingInvestorGroupField->InvestorGroupName#} p)
    withText (investorGroupID (s :: CThostFtdcSyncingInvestorGroupField)) ({#set CThostFtdcSyncingInvestorGroupField->InvestorGroupID#} p)
    withText (brokerID (s :: CThostFtdcSyncingInvestorGroupField)) ({#set CThostFtdcSyncingInvestorGroupField->BrokerID#} p)

instance Storable CThostFtdcOpenAccountField where
  sizeOf _ = {#sizeof CThostFtdcOpenAccountField#}
  alignment _ = {#alignof CThostFtdcOpenAccountField#}
  peek p =
    CThostFtdcOpenAccountField <$>
    (({#get CThostFtdcOpenAccountField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcOpenAccountField->ErrorID#} p) <*>
    (({#get CThostFtdcOpenAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOpenAccountField->TID#} p) <*>
    (({#get CThostFtdcOpenAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcOpenAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcOpenAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcOpenAccountField->Digest#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->CashExchangeCode#} p) <*>
    (({#get CThostFtdcOpenAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->VerifyCertNoFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOpenAccountField->InstallID#} p) <*>
    (({#get CThostFtdcOpenAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->MoneyAccountStatus#} p) <*>
    (({#get CThostFtdcOpenAccountField->EMail#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->Fax#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->MobilePhone#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->Address#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->CustType#} p) <*>
    (({#get CThostFtdcOpenAccountField->CountryCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->Gender#} p) <*>
    (({#get CThostFtdcOpenAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcOpenAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOpenAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOpenAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOpenAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcOpenAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcOpenAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->ErrorMsg#} p)
    {#set CThostFtdcOpenAccountField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcOpenAccountField))
    withText (userID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->UserID#} p)
    {#set CThostFtdcOpenAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcOpenAccountField))
    withText (operNo (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->OperNo#} p)
    {#set CThostFtdcOpenAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcOpenAccountField))
    {#set CThostFtdcOpenAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcOpenAccountField))
    withText (bankSecuAcc (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcOpenAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcOpenAccountField))
    withText (deviceID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->DeviceID#} p)
    {#set CThostFtdcOpenAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcOpenAccountField))
    withText (digest (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->Digest#} p)
    {#set CThostFtdcOpenAccountField->CashExchangeCode#} p (castCharToCChar $ cashExchangeCode (s :: CThostFtdcOpenAccountField))
    withText (currencyID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->CurrencyID#} p)
    {#set CThostFtdcOpenAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcOpenAccountField))
    {#set CThostFtdcOpenAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcOpenAccountField))
    withText (password (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BankAccount#} p)
    {#set CThostFtdcOpenAccountField->MoneyAccountStatus#} p (castCharToCChar $ moneyAccountStatus (s :: CThostFtdcOpenAccountField))
    withText (eMail (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->EMail#} p)
    withText (fax (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->Fax#} p)
    withText (mobilePhone (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->MobilePhone#} p)
    withText (telephone (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->Telephone#} p)
    withText (zipCode (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->ZipCode#} p)
    withText (address (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->Address#} p)
    {#set CThostFtdcOpenAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcOpenAccountField))
    withText (countryCode (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->CountryCode#} p)
    {#set CThostFtdcOpenAccountField->Gender#} p (castCharToCChar $ gender (s :: CThostFtdcOpenAccountField))
    withText (identifiedCardNo (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcOpenAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcOpenAccountField))
    withText (customerName (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->CustomerName#} p)
    {#set CThostFtdcOpenAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcOpenAccountField))
    {#set CThostFtdcOpenAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcOpenAccountField))
    {#set CThostFtdcOpenAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcOpenAccountField))
    withText (tradingDay (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcOpenAccountField)) ({#set CThostFtdcOpenAccountField->TradeCode#} p)

instance Storable CThostFtdcBrokerLimitPosiField where
  sizeOf _ = {#sizeof CThostFtdcBrokerLimitPosiField#}
  alignment _ = {#alignof CThostFtdcBrokerLimitPosiField#}
  peek p =
    CThostFtdcBrokerLimitPosiField <$>
    fmap realToFrac ({#get CThostFtdcBrokerLimitPosiField->LongVolumeFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerLimitPosiField->TotalVolumeFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerLimitPosiField->LongVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerLimitPosiField->TotalVolume#} p) <*>
    (({#get CThostFtdcBrokerLimitPosiField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerLimitPosiField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerLimitPosiField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerLimitPosiField->LongVolumeFrozen#} p (realToFrac $ longVolumeFrozen (s :: CThostFtdcBrokerLimitPosiField))
    {#set CThostFtdcBrokerLimitPosiField->TotalVolumeFrozen#} p (realToFrac $ totalVolumeFrozen (s :: CThostFtdcBrokerLimitPosiField))
    {#set CThostFtdcBrokerLimitPosiField->LongVolume#} p (realToFrac $ longVolume (s :: CThostFtdcBrokerLimitPosiField))
    {#set CThostFtdcBrokerLimitPosiField->TotalVolume#} p (realToFrac $ totalVolume (s :: CThostFtdcBrokerLimitPosiField))
    withText (exchangeID (s :: CThostFtdcBrokerLimitPosiField)) ({#set CThostFtdcBrokerLimitPosiField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcBrokerLimitPosiField)) ({#set CThostFtdcBrokerLimitPosiField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcBrokerLimitPosiField)) ({#set CThostFtdcBrokerLimitPosiField->BrokerID#} p)

instance Storable CThostFtdcQryInstrumentTradingRightField where
  sizeOf _ = {#sizeof CThostFtdcQryInstrumentTradingRightField#}
  alignment _ = {#alignof CThostFtdcQryInstrumentTradingRightField#}
  peek p =
    CThostFtdcQryInstrumentTradingRightField <$>
    (({#get CThostFtdcQryInstrumentTradingRightField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentTradingRightField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentTradingRightField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInstrumentTradingRightField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryInstrumentTradingRightField)) ({#set CThostFtdcQryInstrumentTradingRightField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryInstrumentTradingRightField)) ({#set CThostFtdcQryInstrumentTradingRightField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInstrumentTradingRightField)) ({#set CThostFtdcQryInstrumentTradingRightField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInstrumentTradingRightField)) ({#set CThostFtdcQryInstrumentTradingRightField->BrokerID#} p)

instance Storable CThostFtdcExchangeStockDisposalActionField where
  sizeOf _ = {#sizeof CThostFtdcExchangeStockDisposalActionField#}
  alignment _ = {#alignof CThostFtdcExchangeStockDisposalActionField#}
  peek p =
    CThostFtdcExchangeStockDisposalActionField <$>
    (({#get CThostFtdcExchangeStockDisposalActionField->BranchID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeStockDisposalActionField->ActionType#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeStockDisposalActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->StockDisposalLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalActionField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->ActionDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeStockDisposalActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (branchID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->BranchID#} p)
    {#set CThostFtdcExchangeStockDisposalActionField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcExchangeStockDisposalActionField))
    withText (userID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->UserID#} p)
    {#set CThostFtdcExchangeStockDisposalActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcExchangeStockDisposalActionField))
    withText (businessUnit (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->ActionLocalID#} p)
    withText (stockDisposalLocalID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->StockDisposalLocalID#} p)
    {#set CThostFtdcExchangeStockDisposalActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeStockDisposalActionField))
    withText (traderID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->ActionDate#} p)
    {#set CThostFtdcExchangeStockDisposalActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcExchangeStockDisposalActionField))
    withText (stockDisposalSysID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->StockDisposalSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeStockDisposalActionField)) ({#set CThostFtdcExchangeStockDisposalActionField->ExchangeID#} p)

instance Storable CThostFtdcQryUserSessionField where
  sizeOf _ = {#sizeof CThostFtdcQryUserSessionField#}
  alignment _ = {#alignof CThostFtdcQryUserSessionField#}
  peek p =
    CThostFtdcQryUserSessionField <$>
    (({#get CThostFtdcQryUserSessionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryUserSessionField->BrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQryUserSessionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQryUserSessionField->FrontID#} p)
  poke p s = do
    withText (userID (s :: CThostFtdcQryUserSessionField)) ({#set CThostFtdcQryUserSessionField->UserID#} p)
    withText (brokerID (s :: CThostFtdcQryUserSessionField)) ({#set CThostFtdcQryUserSessionField->BrokerID#} p)
    {#set CThostFtdcQryUserSessionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcQryUserSessionField))
    {#set CThostFtdcQryUserSessionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcQryUserSessionField))

instance Storable CThostFtdcQryExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryExecOrderField#}
  alignment _ = {#alignof CThostFtdcQryExecOrderField#}
  peek p =
    CThostFtdcQryExecOrderField <$>
    (({#get CThostFtdcQryExecOrderField->InsertTimeEnd#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderField->InsertTimeStart#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderField->ExecOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExecOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (insertTimeEnd (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->InsertTimeEnd#} p)
    withText (insertTimeStart (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->InsertTimeStart#} p)
    withText (execOrderSysID (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->ExecOrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryExecOrderField)) ({#set CThostFtdcQryExecOrderField->BrokerID#} p)

instance Storable CThostFtdcErrExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcErrExecOrderField#}
  alignment _ = {#alignof CThostFtdcErrExecOrderField#}
  peek p =
    CThostFtdcErrExecOrderField <$>
    (({#get CThostFtdcErrExecOrderField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderField->ErrorID#} p) <*>
    (({#get CThostFtdcErrExecOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderField->CloseFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderField->ReservePositionFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderField->PosiDirection#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderField->ActionType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrExecOrderField->OffsetFlag#} p) <*>
    (({#get CThostFtdcErrExecOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrExecOrderField->Volume#} p) <*>
    (({#get CThostFtdcErrExecOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->ExecOrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrExecOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->ErrorMsg#} p)
    {#set CThostFtdcErrExecOrderField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcErrExecOrderField))
    withText (macAddress (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->IPAddress#} p)
    withText (clientID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->ClientID#} p)
    withText (currencyID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->InvestUnitID#} p)
    withText (exchangeID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->ExchangeID#} p)
    {#set CThostFtdcErrExecOrderField->CloseFlag#} p (castCharToCChar $ closeFlag (s :: CThostFtdcErrExecOrderField))
    {#set CThostFtdcErrExecOrderField->ReservePositionFlag#} p (castCharToCChar $ reservePositionFlag (s :: CThostFtdcErrExecOrderField))
    {#set CThostFtdcErrExecOrderField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcErrExecOrderField))
    {#set CThostFtdcErrExecOrderField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcErrExecOrderField))
    {#set CThostFtdcErrExecOrderField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcErrExecOrderField))
    {#set CThostFtdcErrExecOrderField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcErrExecOrderField))
    withText (businessUnit (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->BusinessUnit#} p)
    {#set CThostFtdcErrExecOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcErrExecOrderField))
    {#set CThostFtdcErrExecOrderField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcErrExecOrderField))
    withText (userID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->UserID#} p)
    withText (execOrderRef (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->ExecOrderRef#} p)
    withText (instrumentID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcErrExecOrderField)) ({#set CThostFtdcErrExecOrderField->BrokerID#} p)

instance Storable CThostFtdcRspQueryTradeResultBySerialField where
  sizeOf _ = {#sizeof CThostFtdcRspQueryTradeResultBySerialField#}
  alignment _ = {#alignof CThostFtdcRspQueryTradeResultBySerialField#}
  peek p =
    CThostFtdcRspQueryTradeResultBySerialField <$>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->Digest#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcRspQueryTradeResultBySerialField->TradeAmount#} p) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BankAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->OriginDescrInfoForReturnCode#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->OriginReturnCode#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->RefrenceIssure#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryTradeResultBySerialField->RefrenceIssureType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryTradeResultBySerialField->Reference#} p) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryTradeResultBySerialField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryTradeResultBySerialField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryTradeResultBySerialField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryTradeResultBySerialField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryTradeResultBySerialField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (digest (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->Digest#} p)
    {#set CThostFtdcRspQueryTradeResultBySerialField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcRspQueryTradeResultBySerialField))
    withText (currencyID (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->CurrencyID#} p)
    withText (password (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->Password#} p)
    withText (accountID (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BankAccount#} p)
    withText (originDescrInfoForReturnCode (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->OriginDescrInfoForReturnCode#} p)
    withText (originReturnCode (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->OriginReturnCode#} p)
    withText (refrenceIssure (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->RefrenceIssure#} p)
    {#set CThostFtdcRspQueryTradeResultBySerialField->RefrenceIssureType#} p (castCharToCChar $ refrenceIssureType (s :: CThostFtdcRspQueryTradeResultBySerialField))
    {#set CThostFtdcRspQueryTradeResultBySerialField->Reference#} p (fromIntegral $ reference (s :: CThostFtdcRspQueryTradeResultBySerialField))
    withText (errorMsg (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->ErrorMsg#} p)
    {#set CThostFtdcRspQueryTradeResultBySerialField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspQueryTradeResultBySerialField))
    {#set CThostFtdcRspQueryTradeResultBySerialField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspQueryTradeResultBySerialField))
    {#set CThostFtdcRspQueryTradeResultBySerialField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspQueryTradeResultBySerialField))
    {#set CThostFtdcRspQueryTradeResultBySerialField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspQueryTradeResultBySerialField))
    withText (tradingDay (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspQueryTradeResultBySerialField)) ({#set CThostFtdcRspQueryTradeResultBySerialField->TradeCode#} p)

instance Storable CThostFtdcInvestorPositionField where
  sizeOf _ = {#sizeof CThostFtdcInvestorPositionField#}
  alignment _ = {#alignof CThostFtdcInvestorPositionField#}
  peek p =
    CThostFtdcInvestorPositionField <$>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->YdStrikeFrozen#} p) <*>
    (({#get CThostFtdcInvestorPositionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->AbandonFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->StrikeFrozenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->StrikeFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->MarginRateByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->MarginRateByMoney#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->TodayPosition#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->CloseProfitByTrade#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->CloseProfitByDate#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->CombShortFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->CombLongFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->CombPosition#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->ExchangeMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->OpenCost#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->SettlementID#} p) <*>
    (({#get CThostFtdcInvestorPositionField->TradingDay#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->SettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->PreSettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->PositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->CloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->Commission#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->CashIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->FrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->FrozenCash#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->FrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->UseMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->PreMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->PositionCost#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->CloseAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->OpenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->CloseVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->OpenVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->ShortFrozenAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcInvestorPositionField->LongFrozenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->ShortFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->LongFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->Position#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInvestorPositionField->YdPosition#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionField->PositionDate#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInvestorPositionField->PosiDirection#} p) <*>
    (({#get CThostFtdcInvestorPositionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorPositionField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorPositionField->YdStrikeFrozen#} p (fromIntegral $ ydStrikeFrozen (s :: CThostFtdcInvestorPositionField))
    withText (exchangeID (s :: CThostFtdcInvestorPositionField)) ({#set CThostFtdcInvestorPositionField->ExchangeID#} p)
    {#set CThostFtdcInvestorPositionField->AbandonFrozen#} p (fromIntegral $ abandonFrozen (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->StrikeFrozenAmount#} p (realToFrac $ strikeFrozenAmount (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->StrikeFrozen#} p (fromIntegral $ strikeFrozen (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->MarginRateByVolume#} p (realToFrac $ marginRateByVolume (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->MarginRateByMoney#} p (realToFrac $ marginRateByMoney (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->TodayPosition#} p (fromIntegral $ todayPosition (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CloseProfitByTrade#} p (realToFrac $ closeProfitByTrade (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CloseProfitByDate#} p (realToFrac $ closeProfitByDate (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CombShortFrozen#} p (fromIntegral $ combShortFrozen (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CombLongFrozen#} p (fromIntegral $ combLongFrozen (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CombPosition#} p (fromIntegral $ combPosition (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->ExchangeMargin#} p (realToFrac $ exchangeMargin (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->OpenCost#} p (realToFrac $ openCost (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcInvestorPositionField))
    withText (tradingDay (s :: CThostFtdcInvestorPositionField)) ({#set CThostFtdcInvestorPositionField->TradingDay#} p)
    {#set CThostFtdcInvestorPositionField->SettlementPrice#} p (realToFrac $ settlementPrice (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->PreSettlementPrice#} p (realToFrac $ preSettlementPrice (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->PositionProfit#} p (realToFrac $ positionProfit (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CloseProfit#} p (realToFrac $ closeProfit (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->Commission#} p (realToFrac $ commission (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CashIn#} p (realToFrac $ cashIn (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->FrozenCommission#} p (realToFrac $ frozenCommission (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->FrozenCash#} p (realToFrac $ frozenCash (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->FrozenMargin#} p (realToFrac $ frozenMargin (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->UseMargin#} p (realToFrac $ useMargin (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->PreMargin#} p (realToFrac $ preMargin (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->PositionCost#} p (realToFrac $ positionCost (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CloseAmount#} p (realToFrac $ closeAmount (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->OpenAmount#} p (realToFrac $ openAmount (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->CloseVolume#} p (fromIntegral $ closeVolume (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->OpenVolume#} p (fromIntegral $ openVolume (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->ShortFrozenAmount#} p (realToFrac $ shortFrozenAmount (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->LongFrozenAmount#} p (realToFrac $ longFrozenAmount (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->ShortFrozen#} p (fromIntegral $ shortFrozen (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->LongFrozen#} p (fromIntegral $ longFrozen (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->Position#} p (fromIntegral $ position (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->YdPosition#} p (fromIntegral $ ydPosition (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->PositionDate#} p (castCharToCChar $ positionDate (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInvestorPositionField))
    {#set CThostFtdcInvestorPositionField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcInvestorPositionField))
    withText (investorID (s :: CThostFtdcInvestorPositionField)) ({#set CThostFtdcInvestorPositionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInvestorPositionField)) ({#set CThostFtdcInvestorPositionField->BrokerID#} p)
    withText (instrumentID (s :: CThostFtdcInvestorPositionField)) ({#set CThostFtdcInvestorPositionField->InstrumentID#} p)

instance Storable CThostFtdcTradingAccountField where
  sizeOf _ = {#sizeof CThostFtdcTradingAccountField#}
  alignment _ = {#alignof CThostFtdcTradingAccountField#}
  peek p =
    CThostFtdcTradingAccountField <$>
    fmap castCCharToChar ({#get CThostFtdcTradingAccountField->BizType#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductExchangeMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductPositionProfitByAlg#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductCloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductPositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductFrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductFrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->SpecProductMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->MortgageableFund#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->FundMortgageAvailable#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->FundMortgageOut#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->FundMortgageIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreFundMortgageOut#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreFundMortgageIn#} p) <*>
    (({#get CThostFtdcTradingAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->ReserveBalance#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->ExchangeDeliveryMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->DeliveryMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->ExchangeMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Mortgage#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Credit#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTradingAccountField->SettlementID#} p) <*>
    (({#get CThostFtdcTradingAccountField->TradingDay#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Reserve#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->WithdrawQuota#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Available#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Balance#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->CloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Commission#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->CashIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->CurrMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->FrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->FrozenCash#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->FrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Withdraw#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Deposit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->Interest#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->InterestBase#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreBalance#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreDeposit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreCredit#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradingAccountField->PreMortgage#} p) <*>
    (({#get CThostFtdcTradingAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTradingAccountField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductExchangeMargin#} p (realToFrac $ specProductExchangeMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductPositionProfitByAlg#} p (realToFrac $ specProductPositionProfitByAlg (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductCloseProfit#} p (realToFrac $ specProductCloseProfit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductPositionProfit#} p (realToFrac $ specProductPositionProfit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductFrozenCommission#} p (realToFrac $ specProductFrozenCommission (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductCommission#} p (realToFrac $ specProductCommission (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductFrozenMargin#} p (realToFrac $ specProductFrozenMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SpecProductMargin#} p (realToFrac $ specProductMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->MortgageableFund#} p (realToFrac $ mortgageableFund (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->FundMortgageAvailable#} p (realToFrac $ fundMortgageAvailable (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->FundMortgageOut#} p (realToFrac $ fundMortgageOut (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->FundMortgageIn#} p (realToFrac $ fundMortgageIn (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreFundMortgageOut#} p (realToFrac $ preFundMortgageOut (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreFundMortgageIn#} p (realToFrac $ preFundMortgageIn (s :: CThostFtdcTradingAccountField))
    withText (currencyID (s :: CThostFtdcTradingAccountField)) ({#set CThostFtdcTradingAccountField->CurrencyID#} p)
    {#set CThostFtdcTradingAccountField->ReserveBalance#} p (realToFrac $ reserveBalance (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->ExchangeDeliveryMargin#} p (realToFrac $ exchangeDeliveryMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->DeliveryMargin#} p (realToFrac $ deliveryMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->ExchangeMargin#} p (realToFrac $ exchangeMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Mortgage#} p (realToFrac $ mortgage (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Credit#} p (realToFrac $ credit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcTradingAccountField))
    withText (tradingDay (s :: CThostFtdcTradingAccountField)) ({#set CThostFtdcTradingAccountField->TradingDay#} p)
    {#set CThostFtdcTradingAccountField->Reserve#} p (realToFrac $ reserve (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->WithdrawQuota#} p (realToFrac $ withdrawQuota (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Available#} p (realToFrac $ available (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Balance#} p (realToFrac $ balance (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PositionProfit#} p (realToFrac $ positionProfit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->CloseProfit#} p (realToFrac $ closeProfit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Commission#} p (realToFrac $ commission (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->CashIn#} p (realToFrac $ cashIn (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->CurrMargin#} p (realToFrac $ currMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->FrozenCommission#} p (realToFrac $ frozenCommission (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->FrozenCash#} p (realToFrac $ frozenCash (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->FrozenMargin#} p (realToFrac $ frozenMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Withdraw#} p (realToFrac $ withdraw (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Deposit#} p (realToFrac $ deposit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->Interest#} p (realToFrac $ interest (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->InterestBase#} p (realToFrac $ interestBase (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreMargin#} p (realToFrac $ preMargin (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreBalance#} p (realToFrac $ preBalance (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreDeposit#} p (realToFrac $ preDeposit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreCredit#} p (realToFrac $ preCredit (s :: CThostFtdcTradingAccountField))
    {#set CThostFtdcTradingAccountField->PreMortgage#} p (realToFrac $ preMortgage (s :: CThostFtdcTradingAccountField))
    withText (accountID (s :: CThostFtdcTradingAccountField)) ({#set CThostFtdcTradingAccountField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcTradingAccountField)) ({#set CThostFtdcTradingAccountField->BrokerID#} p)

instance Storable CThostFtdcInstructionRightField where
  sizeOf _ = {#sizeof CThostFtdcInstructionRightField#}
  alignment _ = {#alignof CThostFtdcInstructionRightField#}
  peek p =
    CThostFtdcInstructionRightField <$>
    fmap fromIntegral ({#get CThostFtdcInstructionRightField->IsForbidden#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstructionRightField->InstructionRight#} p) <*>
    (({#get CThostFtdcInstructionRightField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstructionRightField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstructionRightField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstructionRightField->IsForbidden#} p (fromIntegral $ isForbidden (s :: CThostFtdcInstructionRightField))
    {#set CThostFtdcInstructionRightField->InstructionRight#} p (castCharToCChar $ instructionRight (s :: CThostFtdcInstructionRightField))
    withText (investorID (s :: CThostFtdcInstructionRightField)) ({#set CThostFtdcInstructionRightField->InvestorID#} p)
    withText (exchangeID (s :: CThostFtdcInstructionRightField)) ({#set CThostFtdcInstructionRightField->ExchangeID#} p)
    withText (brokerID (s :: CThostFtdcInstructionRightField)) ({#set CThostFtdcInstructionRightField->BrokerID#} p)

instance Storable CThostFtdcQryCFMMCTradingAccountKeyField where
  sizeOf _ = {#sizeof CThostFtdcQryCFMMCTradingAccountKeyField#}
  alignment _ = {#alignof CThostFtdcQryCFMMCTradingAccountKeyField#}
  peek p =
    CThostFtdcQryCFMMCTradingAccountKeyField <$>
    (({#get CThostFtdcQryCFMMCTradingAccountKeyField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryCFMMCTradingAccountKeyField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryCFMMCTradingAccountKeyField)) ({#set CThostFtdcQryCFMMCTradingAccountKeyField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryCFMMCTradingAccountKeyField)) ({#set CThostFtdcQryCFMMCTradingAccountKeyField->BrokerID#} p)

instance Storable CThostFtdcExchangeSequenceField where
  sizeOf _ = {#sizeof CThostFtdcExchangeSequenceField#}
  alignment _ = {#alignof CThostFtdcExchangeSequenceField#}
  peek p =
    CThostFtdcExchangeSequenceField <$>
    fmap castCCharToChar ({#get CThostFtdcExchangeSequenceField->MarketStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeSequenceField->SequenceNo#} p) <*>
    (({#get CThostFtdcExchangeSequenceField->ExchangeID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcExchangeSequenceField->MarketStatus#} p (castCharToCChar $ marketStatus (s :: CThostFtdcExchangeSequenceField))
    {#set CThostFtdcExchangeSequenceField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeSequenceField))
    withText (exchangeID (s :: CThostFtdcExchangeSequenceField)) ({#set CThostFtdcExchangeSequenceField->ExchangeID#} p)

instance Storable CThostFtdcUserRightsAssignField where
  sizeOf _ = {#sizeof CThostFtdcUserRightsAssignField#}
  alignment _ = {#alignof CThostFtdcUserRightsAssignField#}
  peek p =
    CThostFtdcUserRightsAssignField <$>
    fmap fromIntegral ({#get CThostFtdcUserRightsAssignField->DRIdentityID#} p) <*>
    (({#get CThostFtdcUserRightsAssignField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcUserRightsAssignField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcUserRightsAssignField->DRIdentityID#} p (fromIntegral $ dRIdentityID (s :: CThostFtdcUserRightsAssignField))
    withText (userID (s :: CThostFtdcUserRightsAssignField)) ({#set CThostFtdcUserRightsAssignField->UserID#} p)
    withText (brokerID (s :: CThostFtdcUserRightsAssignField)) ({#set CThostFtdcUserRightsAssignField->BrokerID#} p)

instance Storable CThostFtdcTransferBankField where
  sizeOf _ = {#sizeof CThostFtdcTransferBankField#}
  alignment _ = {#alignof CThostFtdcTransferBankField#}
  peek p =
    CThostFtdcTransferBankField <$>
    fmap fromIntegral ({#get CThostFtdcTransferBankField->IsActive#} p) <*>
    (({#get CThostFtdcTransferBankField->BankName#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferBankField->BankBrchID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferBankField->BankID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTransferBankField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcTransferBankField))
    withText (bankName (s :: CThostFtdcTransferBankField)) ({#set CThostFtdcTransferBankField->BankName#} p)
    withText (bankBrchID (s :: CThostFtdcTransferBankField)) ({#set CThostFtdcTransferBankField->BankBrchID#} p)
    withText (bankID (s :: CThostFtdcTransferBankField)) ({#set CThostFtdcTransferBankField->BankID#} p)

instance Storable CThostFtdcMarketDataField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataField#}
  alignment _ = {#alignof CThostFtdcMarketDataField#}
  peek p =
    CThostFtdcMarketDataField <$>
    (({#get CThostFtdcMarketDataField->ActionDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataField->UpdateMillisec#} p) <*>
    (({#get CThostFtdcMarketDataField->UpdateTime#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->CurrDelta#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->PreDelta#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->LowerLimitPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->UpperLimitPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->SettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->ClosePrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->OpenInterest#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->Turnover#} p) <*>
    fmap fromIntegral ({#get CThostFtdcMarketDataField->Volume#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->LowestPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->HighestPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->OpenPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->PreOpenInterest#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->PreClosePrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->PreSettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataField->LastPrice#} p) <*>
    (({#get CThostFtdcMarketDataField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcMarketDataField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcMarketDataField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcMarketDataField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (actionDay (s :: CThostFtdcMarketDataField)) ({#set CThostFtdcMarketDataField->ActionDay#} p)
    {#set CThostFtdcMarketDataField->UpdateMillisec#} p (fromIntegral $ updateMillisec (s :: CThostFtdcMarketDataField))
    withText (updateTime (s :: CThostFtdcMarketDataField)) ({#set CThostFtdcMarketDataField->UpdateTime#} p)
    {#set CThostFtdcMarketDataField->CurrDelta#} p (realToFrac $ currDelta (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->PreDelta#} p (realToFrac $ preDelta (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->LowerLimitPrice#} p (realToFrac $ lowerLimitPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->UpperLimitPrice#} p (realToFrac $ upperLimitPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->SettlementPrice#} p (realToFrac $ settlementPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->ClosePrice#} p (realToFrac $ closePrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->OpenInterest#} p (realToFrac $ openInterest (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->Turnover#} p (realToFrac $ turnover (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->LowestPrice#} p (realToFrac $ lowestPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->HighestPrice#} p (realToFrac $ highestPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->OpenPrice#} p (realToFrac $ openPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->PreOpenInterest#} p (realToFrac $ preOpenInterest (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->PreClosePrice#} p (realToFrac $ preClosePrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->PreSettlementPrice#} p (realToFrac $ preSettlementPrice (s :: CThostFtdcMarketDataField))
    {#set CThostFtdcMarketDataField->LastPrice#} p (realToFrac $ lastPrice (s :: CThostFtdcMarketDataField))
    withText (exchangeInstID (s :: CThostFtdcMarketDataField)) ({#set CThostFtdcMarketDataField->ExchangeInstID#} p)
    withText (exchangeID (s :: CThostFtdcMarketDataField)) ({#set CThostFtdcMarketDataField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcMarketDataField)) ({#set CThostFtdcMarketDataField->InstrumentID#} p)
    withText (tradingDay (s :: CThostFtdcMarketDataField)) ({#set CThostFtdcMarketDataField->TradingDay#} p)

instance Storable CThostFtdcQryCommRateModelField where
  sizeOf _ = {#sizeof CThostFtdcQryCommRateModelField#}
  alignment _ = {#alignof CThostFtdcQryCommRateModelField#}
  peek p =
    CThostFtdcQryCommRateModelField <$>
    (({#get CThostFtdcQryCommRateModelField->CommModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryCommRateModelField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (commModelID (s :: CThostFtdcQryCommRateModelField)) ({#set CThostFtdcQryCommRateModelField->CommModelID#} p)
    withText (brokerID (s :: CThostFtdcQryCommRateModelField)) ({#set CThostFtdcQryCommRateModelField->BrokerID#} p)

instance Storable CThostFtdcNotifyFutureSignOutField where
  sizeOf _ = {#sizeof CThostFtdcNotifyFutureSignOutField#}
  alignment _ = {#alignof CThostFtdcNotifyFutureSignOutField#}
  peek p =
    CThostFtdcNotifyFutureSignOutField <$>
    (({#get CThostFtdcNotifyFutureSignOutField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignOutField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignOutField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignOutField->RequestID#} p) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignOutField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignOutField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyFutureSignOutField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignOutField->PlateSerial#} p) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignOutField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->ErrorMsg#} p)
    {#set CThostFtdcNotifyFutureSignOutField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcNotifyFutureSignOutField))
    {#set CThostFtdcNotifyFutureSignOutField->TID#} p (fromIntegral $ tID (s :: CThostFtdcNotifyFutureSignOutField))
    {#set CThostFtdcNotifyFutureSignOutField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcNotifyFutureSignOutField))
    withText (operNo (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->DeviceID#} p)
    withText (currencyID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->CurrencyID#} p)
    withText (digest (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->Digest#} p)
    withText (userID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->UserID#} p)
    {#set CThostFtdcNotifyFutureSignOutField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcNotifyFutureSignOutField))
    {#set CThostFtdcNotifyFutureSignOutField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcNotifyFutureSignOutField))
    {#set CThostFtdcNotifyFutureSignOutField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcNotifyFutureSignOutField))
    {#set CThostFtdcNotifyFutureSignOutField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcNotifyFutureSignOutField))
    withText (tradingDay (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcNotifyFutureSignOutField)) ({#set CThostFtdcNotifyFutureSignOutField->TradeCode#} p)

instance Storable CThostFtdcNotifyFutureSignInField where
  sizeOf _ = {#sizeof CThostFtdcNotifyFutureSignInField#}
  alignment _ = {#alignof CThostFtdcNotifyFutureSignInField#}
  peek p =
    CThostFtdcNotifyFutureSignInField <$>
    (({#get CThostFtdcNotifyFutureSignInField->MacKey#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->PinKey#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignInField->ErrorID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignInField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignInField->RequestID#} p) <*>
    (({#get CThostFtdcNotifyFutureSignInField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->BrokerIDByBank#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignInField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignInField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyFutureSignInField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyFutureSignInField->PlateSerial#} p) <*>
    (({#get CThostFtdcNotifyFutureSignInField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyFutureSignInField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (macKey (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->MacKey#} p)
    withText (pinKey (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->PinKey#} p)
    withText (errorMsg (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->ErrorMsg#} p)
    {#set CThostFtdcNotifyFutureSignInField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcNotifyFutureSignInField))
    {#set CThostFtdcNotifyFutureSignInField->TID#} p (fromIntegral $ tID (s :: CThostFtdcNotifyFutureSignInField))
    {#set CThostFtdcNotifyFutureSignInField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcNotifyFutureSignInField))
    withText (operNo (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->OperNo#} p)
    withText (brokerIDByBank (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->BrokerIDByBank#} p)
    withText (deviceID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->DeviceID#} p)
    withText (currencyID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->CurrencyID#} p)
    withText (digest (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->Digest#} p)
    withText (userID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->UserID#} p)
    {#set CThostFtdcNotifyFutureSignInField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcNotifyFutureSignInField))
    {#set CThostFtdcNotifyFutureSignInField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcNotifyFutureSignInField))
    {#set CThostFtdcNotifyFutureSignInField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcNotifyFutureSignInField))
    {#set CThostFtdcNotifyFutureSignInField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcNotifyFutureSignInField))
    withText (tradingDay (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcNotifyFutureSignInField)) ({#set CThostFtdcNotifyFutureSignInField->TradeCode#} p)

instance Storable CThostFtdcQryExchangeField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeField#}
  alignment _ = {#alignof CThostFtdcQryExchangeField#}
  peek p =
    CThostFtdcQryExchangeField <$>
    (({#get CThostFtdcQryExchangeField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryExchangeField)) ({#set CThostFtdcQryExchangeField->ExchangeID#} p)

instance Storable CThostFtdcQryInvestorPositionField where
  sizeOf _ = {#sizeof CThostFtdcQryInvestorPositionField#}
  alignment _ = {#alignof CThostFtdcQryInvestorPositionField#}
  peek p =
    CThostFtdcQryInvestorPositionField <$>
    (({#get CThostFtdcQryInvestorPositionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryInvestorPositionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryInvestorPositionField)) ({#set CThostFtdcQryInvestorPositionField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryInvestorPositionField)) ({#set CThostFtdcQryInvestorPositionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryInvestorPositionField)) ({#set CThostFtdcQryInvestorPositionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryInvestorPositionField)) ({#set CThostFtdcQryInvestorPositionField->BrokerID#} p)

instance Storable CThostFtdcCombinationLegField where
  sizeOf _ = {#sizeof CThostFtdcCombinationLegField#}
  alignment _ = {#alignof CThostFtdcCombinationLegField#}
  peek p =
    CThostFtdcCombinationLegField <$>
    fmap fromIntegral ({#get CThostFtdcCombinationLegField->ImplyLevel#} p) <*>
    fmap fromIntegral ({#get CThostFtdcCombinationLegField->LegMultiple#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcCombinationLegField->Direction#} p) <*>
    (({#get CThostFtdcCombinationLegField->LegInstrumentID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcCombinationLegField->LegID#} p) <*>
    (({#get CThostFtdcCombinationLegField->CombInstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcCombinationLegField->ImplyLevel#} p (fromIntegral $ implyLevel (s :: CThostFtdcCombinationLegField))
    {#set CThostFtdcCombinationLegField->LegMultiple#} p (fromIntegral $ legMultiple (s :: CThostFtdcCombinationLegField))
    {#set CThostFtdcCombinationLegField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcCombinationLegField))
    withText (legInstrumentID (s :: CThostFtdcCombinationLegField)) ({#set CThostFtdcCombinationLegField->LegInstrumentID#} p)
    {#set CThostFtdcCombinationLegField->LegID#} p (fromIntegral $ legID (s :: CThostFtdcCombinationLegField))
    withText (combInstrumentID (s :: CThostFtdcCombinationLegField)) ({#set CThostFtdcCombinationLegField->CombInstrumentID#} p)

instance Storable CThostFtdcFrontStatusField where
  sizeOf _ = {#sizeof CThostFtdcFrontStatusField#}
  alignment _ = {#alignof CThostFtdcFrontStatusField#}
  peek p =
    CThostFtdcFrontStatusField <$>
    fmap fromIntegral ({#get CThostFtdcFrontStatusField->IsActive#} p) <*>
    (({#get CThostFtdcFrontStatusField->LastReportTime#} p) >>= peekText) <*>
    (({#get CThostFtdcFrontStatusField->LastReportDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcFrontStatusField->FrontID#} p)
  poke p s = do
    {#set CThostFtdcFrontStatusField->IsActive#} p (fromIntegral $ isActive (s :: CThostFtdcFrontStatusField))
    withText (lastReportTime (s :: CThostFtdcFrontStatusField)) ({#set CThostFtdcFrontStatusField->LastReportTime#} p)
    withText (lastReportDate (s :: CThostFtdcFrontStatusField)) ({#set CThostFtdcFrontStatusField->LastReportDate#} p)
    {#set CThostFtdcFrontStatusField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcFrontStatusField))

instance Storable CThostFtdcQryQuoteActionField where
  sizeOf _ = {#sizeof CThostFtdcQryQuoteActionField#}
  alignment _ = {#alignof CThostFtdcQryQuoteActionField#}
  peek p =
    CThostFtdcQryQuoteActionField <$>
    (({#get CThostFtdcQryQuoteActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryQuoteActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryQuoteActionField)) ({#set CThostFtdcQryQuoteActionField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryQuoteActionField)) ({#set CThostFtdcQryQuoteActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryQuoteActionField)) ({#set CThostFtdcQryQuoteActionField->BrokerID#} p)

instance Storable CThostFtdcNotifyQueryAccountField where
  sizeOf _ = {#sizeof CThostFtdcNotifyQueryAccountField#}
  alignment _ = {#alignof CThostFtdcNotifyQueryAccountField#}
  peek p =
    CThostFtdcNotifyQueryAccountField <$>
    (({#get CThostFtdcNotifyQueryAccountField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->ErrorID#} p) <*>
    fmap realToFrac ({#get CThostFtdcNotifyQueryAccountField->BankFetchAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcNotifyQueryAccountField->BankUseAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->RequestID#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->FutureSerial#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->CustType#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcNotifyQueryAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcNotifyQueryAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcNotifyQueryAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcNotifyQueryAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->ErrorMsg#} p)
    {#set CThostFtdcNotifyQueryAccountField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->BankFetchAmount#} p (realToFrac $ bankFetchAmount (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->BankUseAmount#} p (realToFrac $ bankUseAmount (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcNotifyQueryAccountField))
    withText (operNo (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->OperNo#} p)
    {#set CThostFtdcNotifyQueryAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcNotifyQueryAccountField))
    withText (bankSecuAcc (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcNotifyQueryAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcNotifyQueryAccountField))
    withText (deviceID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->DeviceID#} p)
    {#set CThostFtdcNotifyQueryAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcNotifyQueryAccountField))
    withText (digest (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->Digest#} p)
    withText (currencyID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->CurrencyID#} p)
    {#set CThostFtdcNotifyQueryAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcNotifyQueryAccountField))
    withText (userID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->UserID#} p)
    {#set CThostFtdcNotifyQueryAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcNotifyQueryAccountField))
    withText (password (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BankAccount#} p)
    {#set CThostFtdcNotifyQueryAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcNotifyQueryAccountField))
    withText (identifiedCardNo (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcNotifyQueryAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcNotifyQueryAccountField))
    withText (customerName (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->CustomerName#} p)
    {#set CThostFtdcNotifyQueryAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcNotifyQueryAccountField))
    {#set CThostFtdcNotifyQueryAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcNotifyQueryAccountField))
    withText (tradingDay (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcNotifyQueryAccountField)) ({#set CThostFtdcNotifyQueryAccountField->TradeCode#} p)

instance Storable CThostFtdcCombInstrumentGuardField where
  sizeOf _ = {#sizeof CThostFtdcCombInstrumentGuardField#}
  alignment _ = {#alignof CThostFtdcCombInstrumentGuardField#}
  peek p =
    CThostFtdcCombInstrumentGuardField <$>
    fmap realToFrac ({#get CThostFtdcCombInstrumentGuardField->GuarantRatio#} p) <*>
    (({#get CThostFtdcCombInstrumentGuardField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcCombInstrumentGuardField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcCombInstrumentGuardField->GuarantRatio#} p (realToFrac $ guarantRatio (s :: CThostFtdcCombInstrumentGuardField))
    withText (instrumentID (s :: CThostFtdcCombInstrumentGuardField)) ({#set CThostFtdcCombInstrumentGuardField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcCombInstrumentGuardField)) ({#set CThostFtdcCombInstrumentGuardField->BrokerID#} p)

instance Storable CThostFtdcQuoteField where
  sizeOf _ = {#sizeof CThostFtdcQuoteField#}
  alignment _ = {#alignof CThostFtdcQuoteField#}
  peek p =
    CThostFtdcQuoteField <$>
    (({#get CThostFtdcQuoteField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->ForQuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->BidOrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->AskOrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->BrokerQuoteSeq#} p) <*>
    (({#get CThostFtdcQuoteField->ActiveUserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->FrontID#} p) <*>
    (({#get CThostFtdcQuoteField->BidOrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->AskOrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->SequenceNo#} p) <*>
    (({#get CThostFtdcQuoteField->ClearingPartID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteField->QuoteStatus#} p) <*>
    (({#get CThostFtdcQuoteField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->InsertDate#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->QuoteSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->SettlementID#} p) <*>
    (({#get CThostFtdcQuoteField->TradingDay#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->NotifySequence#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->InstallID#} p) <*>
    (({#get CThostFtdcQuoteField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->QuoteLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteField->BidHedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteField->AskHedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteField->BidOffsetFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteField->AskOffsetFlag#} p) <*>
    (({#get CThostFtdcQuoteField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->BidVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteField->AskVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcQuoteField->BidPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcQuoteField->AskPrice#} p) <*>
    (({#get CThostFtdcQuoteField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->QuoteRef#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->IPAddress#} p)
    withText (currencyID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->BranchID#} p)
    withText (forQuoteSysID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ForQuoteSysID#} p)
    withText (bidOrderRef (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->BidOrderRef#} p)
    withText (askOrderRef (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->AskOrderRef#} p)
    {#set CThostFtdcQuoteField->BrokerQuoteSeq#} p (fromIntegral $ brokerQuoteSeq (s :: CThostFtdcQuoteField))
    withText (activeUserID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ActiveUserID#} p)
    withText (statusMsg (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->UserProductInfo#} p)
    {#set CThostFtdcQuoteField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcQuoteField))
    withText (bidOrderSysID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->BidOrderSysID#} p)
    withText (askOrderSysID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->AskOrderSysID#} p)
    {#set CThostFtdcQuoteField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcQuoteField))
    withText (clearingPartID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ClearingPartID#} p)
    {#set CThostFtdcQuoteField->QuoteStatus#} p (castCharToCChar $ quoteStatus (s :: CThostFtdcQuoteField))
    withText (cancelTime (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->CancelTime#} p)
    withText (insertTime (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->InsertDate#} p)
    withText (quoteSysID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->QuoteSysID#} p)
    {#set CThostFtdcQuoteField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcQuoteField))
    withText (tradingDay (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->TradingDay#} p)
    {#set CThostFtdcQuoteField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcQuoteField))
    withText (traderID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->ExchangeID#} p)
    withText (quoteLocalID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->QuoteLocalID#} p)
    {#set CThostFtdcQuoteField->BidHedgeFlag#} p (castCharToCChar $ bidHedgeFlag (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->AskHedgeFlag#} p (castCharToCChar $ askHedgeFlag (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->BidOffsetFlag#} p (castCharToCChar $ bidOffsetFlag (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->AskOffsetFlag#} p (castCharToCChar $ askOffsetFlag (s :: CThostFtdcQuoteField))
    withText (businessUnit (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->BusinessUnit#} p)
    {#set CThostFtdcQuoteField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->BidVolume#} p (fromIntegral $ bidVolume (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->AskVolume#} p (fromIntegral $ askVolume (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->BidPrice#} p (realToFrac $ bidPrice (s :: CThostFtdcQuoteField))
    {#set CThostFtdcQuoteField->AskPrice#} p (realToFrac $ askPrice (s :: CThostFtdcQuoteField))
    withText (userID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->UserID#} p)
    withText (quoteRef (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->QuoteRef#} p)
    withText (instrumentID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQuoteField)) ({#set CThostFtdcQuoteField->BrokerID#} p)

instance Storable CThostFtdcRspTransferField where
  sizeOf _ = {#sizeof CThostFtdcRspTransferField#}
  alignment _ = {#alignof CThostFtdcRspTransferField#}
  peek p =
    CThostFtdcRspTransferField <$>
    (({#get CThostFtdcRspTransferField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->ErrorID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->TransferStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->RequestID#} p) <*>
    (({#get CThostFtdcRspTransferField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcRspTransferField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcRspTransferField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->BankAccType#} p) <*>
    (({#get CThostFtdcRspTransferField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->Message#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcRspTransferField->BrokerFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspTransferField->CustFee#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->FeePayFlag#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspTransferField->FutureFetchAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspTransferField->TradeAmount#} p) <*>
    (({#get CThostFtdcRspTransferField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcRspTransferField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->FutureSerial#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->InstallID#} p) <*>
    (({#get CThostFtdcRspTransferField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->CustType#} p) <*>
    (({#get CThostFtdcRspTransferField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->IdCardType#} p) <*>
    (({#get CThostFtdcRspTransferField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspTransferField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspTransferField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspTransferField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspTransferField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->ErrorMsg#} p)
    {#set CThostFtdcRspTransferField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->TransferStatus#} p (castCharToCChar $ transferStatus (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->TID#} p (fromIntegral $ tID (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcRspTransferField))
    withText (operNo (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->OperNo#} p)
    {#set CThostFtdcRspTransferField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcRspTransferField))
    withText (bankSecuAcc (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BrokerIDByBank#} p)
    {#set CThostFtdcRspTransferField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcRspTransferField))
    withText (deviceID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->DeviceID#} p)
    {#set CThostFtdcRspTransferField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcRspTransferField))
    withText (digest (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->Digest#} p)
    withText (message (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->Message#} p)
    {#set CThostFtdcRspTransferField->BrokerFee#} p (realToFrac $ brokerFee (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->FeePayFlag#} p (castCharToCChar $ feePayFlag (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->FutureFetchAmount#} p (realToFrac $ futureFetchAmount (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcRspTransferField))
    withText (currencyID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->CurrencyID#} p)
    {#set CThostFtdcRspTransferField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcRspTransferField))
    withText (userID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->UserID#} p)
    {#set CThostFtdcRspTransferField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcRspTransferField))
    withText (password (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->Password#} p)
    withText (accountID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BankAccount#} p)
    {#set CThostFtdcRspTransferField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcRspTransferField))
    withText (identifiedCardNo (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->IdentifiedCardNo#} p)
    {#set CThostFtdcRspTransferField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcRspTransferField))
    withText (customerName (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->CustomerName#} p)
    {#set CThostFtdcRspTransferField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspTransferField))
    {#set CThostFtdcRspTransferField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspTransferField))
    withText (tradingDay (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspTransferField)) ({#set CThostFtdcRspTransferField->TradeCode#} p)

instance Storable CThostFtdcQrySuperUserFunctionField where
  sizeOf _ = {#sizeof CThostFtdcQrySuperUserFunctionField#}
  alignment _ = {#alignof CThostFtdcQrySuperUserFunctionField#}
  peek p =
    CThostFtdcQrySuperUserFunctionField <$>
    (({#get CThostFtdcQrySuperUserFunctionField->UserID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcQrySuperUserFunctionField)) ({#set CThostFtdcQrySuperUserFunctionField->UserID#} p)

instance Storable CThostFtdcDRTransferField where
  sizeOf _ = {#sizeof CThostFtdcDRTransferField#}
  alignment _ = {#alignof CThostFtdcDRTransferField#}
  peek p =
    CThostFtdcDRTransferField <$>
    (({#get CThostFtdcDRTransferField->DestBrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcDRTransferField->OrigBrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcDRTransferField->DestDRIdentityID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcDRTransferField->OrigDRIdentityID#} p)
  poke p s = do
    withText (destBrokerID (s :: CThostFtdcDRTransferField)) ({#set CThostFtdcDRTransferField->DestBrokerID#} p)
    withText (origBrokerID (s :: CThostFtdcDRTransferField)) ({#set CThostFtdcDRTransferField->OrigBrokerID#} p)
    {#set CThostFtdcDRTransferField->DestDRIdentityID#} p (fromIntegral $ destDRIdentityID (s :: CThostFtdcDRTransferField))
    {#set CThostFtdcDRTransferField->OrigDRIdentityID#} p (fromIntegral $ origDRIdentityID (s :: CThostFtdcDRTransferField))

instance Storable CThostFtdcInputBatchOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcInputBatchOrderActionField#}
  alignment _ = {#alignof CThostFtdcInputBatchOrderActionField#}
  peek p =
    CThostFtdcInputBatchOrderActionField <$>
    (({#get CThostFtdcInputBatchOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputBatchOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputBatchOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputBatchOrderActionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputBatchOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputBatchOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputBatchOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputBatchOrderActionField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputBatchOrderActionField->OrderActionRef#} p) <*>
    (({#get CThostFtdcInputBatchOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputBatchOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->InvestUnitID#} p)
    withText (userID (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->UserID#} p)
    withText (exchangeID (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->ExchangeID#} p)
    {#set CThostFtdcInputBatchOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcInputBatchOrderActionField))
    {#set CThostFtdcInputBatchOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcInputBatchOrderActionField))
    {#set CThostFtdcInputBatchOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputBatchOrderActionField))
    {#set CThostFtdcInputBatchOrderActionField->OrderActionRef#} p (fromIntegral $ orderActionRef (s :: CThostFtdcInputBatchOrderActionField))
    withText (investorID (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputBatchOrderActionField)) ({#set CThostFtdcInputBatchOrderActionField->BrokerID#} p)

instance Storable CThostFtdcBrokerLimitPosiParamField where
  sizeOf _ = {#sizeof CThostFtdcBrokerLimitPosiParamField#}
  alignment _ = {#alignof CThostFtdcBrokerLimitPosiParamField#}
  peek p =
    CThostFtdcBrokerLimitPosiParamField <$>
    fmap realToFrac ({#get CThostFtdcBrokerLimitPosiParamField->LongVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcBrokerLimitPosiParamField->TotalVolume#} p) <*>
    (({#get CThostFtdcBrokerLimitPosiParamField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerLimitPosiParamField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerLimitPosiParamField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerLimitPosiParamField->LongVolume#} p (realToFrac $ longVolume (s :: CThostFtdcBrokerLimitPosiParamField))
    {#set CThostFtdcBrokerLimitPosiParamField->TotalVolume#} p (realToFrac $ totalVolume (s :: CThostFtdcBrokerLimitPosiParamField))
    withText (exchangeID (s :: CThostFtdcBrokerLimitPosiParamField)) ({#set CThostFtdcBrokerLimitPosiParamField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcBrokerLimitPosiParamField)) ({#set CThostFtdcBrokerLimitPosiParamField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcBrokerLimitPosiParamField)) ({#set CThostFtdcBrokerLimitPosiParamField->BrokerID#} p)

instance Storable CThostFtdcQryLockPositionField where
  sizeOf _ = {#sizeof CThostFtdcQryLockPositionField#}
  alignment _ = {#alignof CThostFtdcQryLockPositionField#}
  peek p =
    CThostFtdcQryLockPositionField <$>
    (({#get CThostFtdcQryLockPositionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockPositionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockPositionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryLockPositionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryLockPositionField)) ({#set CThostFtdcQryLockPositionField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryLockPositionField)) ({#set CThostFtdcQryLockPositionField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryLockPositionField)) ({#set CThostFtdcQryLockPositionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryLockPositionField)) ({#set CThostFtdcQryLockPositionField->BrokerID#} p)

instance Storable CThostFtdcQryBrokerUserFunctionField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerUserFunctionField#}
  alignment _ = {#alignof CThostFtdcQryBrokerUserFunctionField#}
  peek p =
    CThostFtdcQryBrokerUserFunctionField <$>
    (({#get CThostFtdcQryBrokerUserFunctionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryBrokerUserFunctionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcQryBrokerUserFunctionField)) ({#set CThostFtdcQryBrokerUserFunctionField->UserID#} p)
    withText (brokerID (s :: CThostFtdcQryBrokerUserFunctionField)) ({#set CThostFtdcQryBrokerUserFunctionField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeMarginRateAdjustField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeMarginRateAdjustField#}
  alignment _ = {#alignof CThostFtdcQryExchangeMarginRateAdjustField#}
  peek p =
    CThostFtdcQryExchangeMarginRateAdjustField <$>
    fmap castCCharToChar ({#get CThostFtdcQryExchangeMarginRateAdjustField->HedgeFlag#} p) <*>
    (({#get CThostFtdcQryExchangeMarginRateAdjustField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeMarginRateAdjustField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryExchangeMarginRateAdjustField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcQryExchangeMarginRateAdjustField))
    withText (instrumentID (s :: CThostFtdcQryExchangeMarginRateAdjustField)) ({#set CThostFtdcQryExchangeMarginRateAdjustField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcQryExchangeMarginRateAdjustField)) ({#set CThostFtdcQryExchangeMarginRateAdjustField->BrokerID#} p)

instance Storable CThostFtdcExchangeStockDisposalActionErrorField where
  sizeOf _ = {#sizeof CThostFtdcExchangeStockDisposalActionErrorField#}
  alignment _ = {#alignof CThostFtdcExchangeStockDisposalActionErrorField#}
  peek p =
    CThostFtdcExchangeStockDisposalActionErrorField <$>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalActionErrorField->ErrorID#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->StockDisposalLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeStockDisposalActionErrorField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->StockDisposalSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeStockDisposalActionErrorField->ExchangeID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->BrokerID#} p)
    withText (errorMsg (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->ErrorMsg#} p)
    {#set CThostFtdcExchangeStockDisposalActionErrorField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcExchangeStockDisposalActionErrorField))
    withText (actionLocalID (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->ActionLocalID#} p)
    withText (stockDisposalLocalID (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->StockDisposalLocalID#} p)
    {#set CThostFtdcExchangeStockDisposalActionErrorField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeStockDisposalActionErrorField))
    withText (traderID (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->TraderID#} p)
    withText (stockDisposalSysID (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->StockDisposalSysID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeStockDisposalActionErrorField)) ({#set CThostFtdcExchangeStockDisposalActionErrorField->ExchangeID#} p)

instance Storable CThostFtdcTransferHeaderField where
  sizeOf _ = {#sizeof CThostFtdcTransferHeaderField#}
  alignment _ = {#alignof CThostFtdcTransferHeaderField#}
  peek p =
    CThostFtdcTransferHeaderField <$>
    fmap fromIntegral ({#get CThostFtdcTransferHeaderField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTransferHeaderField->SessionID#} p) <*>
    (({#get CThostFtdcTransferHeaderField->RecordNum#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->DeviceID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->OperNo#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->BankBrchID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->FutureID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->TradeSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->TradeCode#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferHeaderField->Version#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTransferHeaderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcTransferHeaderField))
    {#set CThostFtdcTransferHeaderField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcTransferHeaderField))
    withText (recordNum (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->RecordNum#} p)
    withText (deviceID (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->DeviceID#} p)
    withText (operNo (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->OperNo#} p)
    withText (bankBrchID (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->BankBrchID#} p)
    withText (bankID (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->BankID#} p)
    withText (futureID (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->FutureID#} p)
    withText (tradeSerial (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->TradeSerial#} p)
    withText (tradeTime (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->TradeDate#} p)
    withText (tradeCode (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->TradeCode#} p)
    withText (version (s :: CThostFtdcTransferHeaderField)) ({#set CThostFtdcTransferHeaderField->Version#} p)

instance Storable CThostFtdcSyncingInstrumentTradingRightField where
  sizeOf _ = {#sizeof CThostFtdcSyncingInstrumentTradingRightField#}
  alignment _ = {#alignof CThostFtdcSyncingInstrumentTradingRightField#}
  peek p =
    CThostFtdcSyncingInstrumentTradingRightField <$>
    (({#get CThostFtdcSyncingInstrumentTradingRightField->ExchangeID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInstrumentTradingRightField->TradingRight#} p) <*>
    (({#get CThostFtdcSyncingInstrumentTradingRightField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInstrumentTradingRightField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInstrumentTradingRightField->InvestorRange#} p) <*>
    (({#get CThostFtdcSyncingInstrumentTradingRightField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcSyncingInstrumentTradingRightField)) ({#set CThostFtdcSyncingInstrumentTradingRightField->ExchangeID#} p)
    {#set CThostFtdcSyncingInstrumentTradingRightField->TradingRight#} p (castCharToCChar $ tradingRight (s :: CThostFtdcSyncingInstrumentTradingRightField))
    withText (investorID (s :: CThostFtdcSyncingInstrumentTradingRightField)) ({#set CThostFtdcSyncingInstrumentTradingRightField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSyncingInstrumentTradingRightField)) ({#set CThostFtdcSyncingInstrumentTradingRightField->BrokerID#} p)
    {#set CThostFtdcSyncingInstrumentTradingRightField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcSyncingInstrumentTradingRightField))
    withText (instrumentID (s :: CThostFtdcSyncingInstrumentTradingRightField)) ({#set CThostFtdcSyncingInstrumentTradingRightField->InstrumentID#} p)

instance Storable CThostFtdcOrderField where
  sizeOf _ = {#sizeof CThostFtdcOrderField#}
  alignment _ = {#alignof CThostFtdcOrderField#}
  peek p =
    CThostFtdcOrderField <$>
    (({#get CThostFtdcOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->IsSwapOrder#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->ZCETotalTradedVolume#} p) <*>
    (({#get CThostFtdcOrderField->RelativeOrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->BrokerOrderSeq#} p) <*>
    (({#get CThostFtdcOrderField->ActiveUserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->UserForceClose#} p) <*>
    (({#get CThostFtdcOrderField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->SequenceNo#} p) <*>
    (({#get CThostFtdcOrderField->ClearingPartID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->ActiveTraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->UpdateTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->SuspendTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->ActiveTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->InsertDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->VolumeTotal#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->VolumeTraded#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->OrderType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->OrderStatus#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->OrderSource#} p) <*>
    (({#get CThostFtdcOrderField->OrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->SettlementID#} p) <*>
    (({#get CThostFtdcOrderField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->InstallID#} p) <*>
    (({#get CThostFtdcOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->RequestID#} p) <*>
    (({#get CThostFtdcOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->IsAutoSuspend#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->ForceCloseReason#} p) <*>
    fmap realToFrac ({#get CThostFtdcOrderField->StopPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->ContingentCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->MinVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->VolumeCondition#} p) <*>
    (({#get CThostFtdcOrderField->GTDDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->TimeCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcOrderField->VolumeTotalOriginal#} p) <*>
    fmap realToFrac ({#get CThostFtdcOrderField->LimitPrice#} p) <*>
    (({#get CThostFtdcOrderField->CombHedgeFlag#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->CombOffsetFlag#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOrderField->OrderPriceType#} p) <*>
    (({#get CThostFtdcOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->OrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->IPAddress#} p)
    withText (currencyID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->BranchID#} p)
    {#set CThostFtdcOrderField->IsSwapOrder#} p (fromIntegral $ isSwapOrder (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->ZCETotalTradedVolume#} p (fromIntegral $ zCETotalTradedVolume (s :: CThostFtdcOrderField))
    withText (relativeOrderSysID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->RelativeOrderSysID#} p)
    {#set CThostFtdcOrderField->BrokerOrderSeq#} p (fromIntegral $ brokerOrderSeq (s :: CThostFtdcOrderField))
    withText (activeUserID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ActiveUserID#} p)
    {#set CThostFtdcOrderField->UserForceClose#} p (fromIntegral $ userForceClose (s :: CThostFtdcOrderField))
    withText (statusMsg (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->UserProductInfo#} p)
    {#set CThostFtdcOrderField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcOrderField))
    withText (clearingPartID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ClearingPartID#} p)
    withText (activeTraderID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ActiveTraderID#} p)
    withText (cancelTime (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->CancelTime#} p)
    withText (updateTime (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->UpdateTime#} p)
    withText (suspendTime (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->SuspendTime#} p)
    withText (activeTime (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ActiveTime#} p)
    withText (insertTime (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->InsertDate#} p)
    {#set CThostFtdcOrderField->VolumeTotal#} p (fromIntegral $ volumeTotal (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->VolumeTraded#} p (fromIntegral $ volumeTraded (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->OrderType#} p (castCharToCChar $ orderType (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->OrderStatus#} p (castCharToCChar $ orderStatus (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->OrderSource#} p (castCharToCChar $ orderSource (s :: CThostFtdcOrderField))
    withText (orderSysID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->OrderSysID#} p)
    {#set CThostFtdcOrderField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcOrderField))
    withText (tradingDay (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->TradingDay#} p)
    {#set CThostFtdcOrderField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcOrderField))
    withText (traderID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->ExchangeID#} p)
    withText (orderLocalID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->OrderLocalID#} p)
    {#set CThostFtdcOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcOrderField))
    withText (businessUnit (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->BusinessUnit#} p)
    {#set CThostFtdcOrderField->IsAutoSuspend#} p (fromIntegral $ isAutoSuspend (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->ForceCloseReason#} p (castCharToCChar $ forceCloseReason (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->StopPrice#} p (realToFrac $ stopPrice (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->ContingentCondition#} p (castCharToCChar $ contingentCondition (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->MinVolume#} p (fromIntegral $ minVolume (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->VolumeCondition#} p (castCharToCChar $ volumeCondition (s :: CThostFtdcOrderField))
    withText (gTDDate (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->GTDDate#} p)
    {#set CThostFtdcOrderField->TimeCondition#} p (castCharToCChar $ timeCondition (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->VolumeTotalOriginal#} p (fromIntegral $ volumeTotalOriginal (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcOrderField))
    withText (combHedgeFlag (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->CombHedgeFlag#} p)
    withText (combOffsetFlag (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->CombOffsetFlag#} p)
    {#set CThostFtdcOrderField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcOrderField))
    {#set CThostFtdcOrderField->OrderPriceType#} p (castCharToCChar $ orderPriceType (s :: CThostFtdcOrderField))
    withText (userID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->UserID#} p)
    withText (orderRef (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->OrderRef#} p)
    withText (instrumentID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOrderField)) ({#set CThostFtdcOrderField->BrokerID#} p)

instance Storable CThostFtdcTradeField where
  sizeOf _ = {#sizeof CThostFtdcTradeField#}
  alignment _ = {#alignof CThostFtdcTradeField#}
  peek p =
    CThostFtdcTradeField <$>
    fmap castCCharToChar ({#get CThostFtdcTradeField->TradeSource#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTradeField->BrokerOrderSeq#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTradeField->SettlementID#} p) <*>
    (({#get CThostFtdcTradeField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTradeField->SequenceNo#} p) <*>
    (({#get CThostFtdcTradeField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->ClearingPartID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->OrderLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->TraderID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTradeField->PriceSource#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcTradeField->TradeType#} p) <*>
    (({#get CThostFtdcTradeField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->TradeDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTradeField->Volume#} p) <*>
    fmap realToFrac ({#get CThostFtdcTradeField->Price#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcTradeField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcTradeField->OffsetFlag#} p) <*>
    (({#get CThostFtdcTradeField->ExchangeInstID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTradeField->TradingRole#} p) <*>
    (({#get CThostFtdcTradeField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->OrderSysID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTradeField->Direction#} p) <*>
    (({#get CThostFtdcTradeField->TradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->OrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradeField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcTradeField->TradeSource#} p (castCharToCChar $ tradeSource (s :: CThostFtdcTradeField))
    {#set CThostFtdcTradeField->BrokerOrderSeq#} p (fromIntegral $ brokerOrderSeq (s :: CThostFtdcTradeField))
    {#set CThostFtdcTradeField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcTradeField))
    withText (tradingDay (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->TradingDay#} p)
    {#set CThostFtdcTradeField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcTradeField))
    withText (businessUnit (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->BusinessUnit#} p)
    withText (clearingPartID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->ClearingPartID#} p)
    withText (orderLocalID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->OrderLocalID#} p)
    withText (traderID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->TraderID#} p)
    {#set CThostFtdcTradeField->PriceSource#} p (castCharToCChar $ priceSource (s :: CThostFtdcTradeField))
    {#set CThostFtdcTradeField->TradeType#} p (castCharToCChar $ tradeType (s :: CThostFtdcTradeField))
    withText (tradeTime (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->TradeDate#} p)
    {#set CThostFtdcTradeField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcTradeField))
    {#set CThostFtdcTradeField->Price#} p (realToFrac $ price (s :: CThostFtdcTradeField))
    {#set CThostFtdcTradeField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcTradeField))
    {#set CThostFtdcTradeField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcTradeField))
    withText (exchangeInstID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->ExchangeInstID#} p)
    {#set CThostFtdcTradeField->TradingRole#} p (castCharToCChar $ tradingRole (s :: CThostFtdcTradeField))
    withText (clientID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->ClientID#} p)
    withText (participantID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->ParticipantID#} p)
    withText (orderSysID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->OrderSysID#} p)
    {#set CThostFtdcTradeField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcTradeField))
    withText (tradeID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->TradeID#} p)
    withText (exchangeID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->ExchangeID#} p)
    withText (userID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->UserID#} p)
    withText (orderRef (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->OrderRef#} p)
    withText (instrumentID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcTradeField)) ({#set CThostFtdcTradeField->BrokerID#} p)

instance Storable CThostFtdcInputOrderField where
  sizeOf _ = {#sizeof CThostFtdcInputOrderField#}
  alignment _ = {#alignof CThostFtdcInputOrderField#}
  peek p =
    CThostFtdcInputOrderField <$>
    (({#get CThostFtdcInputOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderField->IsSwapOrder#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderField->UserForceClose#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderField->RequestID#} p) <*>
    (({#get CThostFtdcInputOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderField->IsAutoSuspend#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderField->ForceCloseReason#} p) <*>
    fmap realToFrac ({#get CThostFtdcInputOrderField->StopPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderField->ContingentCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderField->MinVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderField->VolumeCondition#} p) <*>
    (({#get CThostFtdcInputOrderField->GTDDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderField->TimeCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputOrderField->VolumeTotalOriginal#} p) <*>
    fmap realToFrac ({#get CThostFtdcInputOrderField->LimitPrice#} p) <*>
    (({#get CThostFtdcInputOrderField->CombHedgeFlag#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->CombOffsetFlag#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputOrderField->OrderPriceType#} p) <*>
    (({#get CThostFtdcInputOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->OrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->IPAddress#} p)
    withText (clientID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->ClientID#} p)
    withText (currencyID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->InvestUnitID#} p)
    withText (exchangeID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->ExchangeID#} p)
    {#set CThostFtdcInputOrderField->IsSwapOrder#} p (fromIntegral $ isSwapOrder (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->UserForceClose#} p (fromIntegral $ userForceClose (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputOrderField))
    withText (businessUnit (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->BusinessUnit#} p)
    {#set CThostFtdcInputOrderField->IsAutoSuspend#} p (fromIntegral $ isAutoSuspend (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->ForceCloseReason#} p (castCharToCChar $ forceCloseReason (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->StopPrice#} p (realToFrac $ stopPrice (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->ContingentCondition#} p (castCharToCChar $ contingentCondition (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->MinVolume#} p (fromIntegral $ minVolume (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->VolumeCondition#} p (castCharToCChar $ volumeCondition (s :: CThostFtdcInputOrderField))
    withText (gTDDate (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->GTDDate#} p)
    {#set CThostFtdcInputOrderField->TimeCondition#} p (castCharToCChar $ timeCondition (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->VolumeTotalOriginal#} p (fromIntegral $ volumeTotalOriginal (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcInputOrderField))
    withText (combHedgeFlag (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->CombHedgeFlag#} p)
    withText (combOffsetFlag (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->CombOffsetFlag#} p)
    {#set CThostFtdcInputOrderField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcInputOrderField))
    {#set CThostFtdcInputOrderField->OrderPriceType#} p (castCharToCChar $ orderPriceType (s :: CThostFtdcInputOrderField))
    withText (userID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->UserID#} p)
    withText (orderRef (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->OrderRef#} p)
    withText (instrumentID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputOrderField)) ({#set CThostFtdcInputOrderField->BrokerID#} p)

instance Storable CThostFtdcReqUserLoginField where
  sizeOf _ = {#sizeof CThostFtdcReqUserLoginField#}
  alignment _ = {#alignof CThostFtdcReqUserLoginField#}
  peek p =
    CThostFtdcReqUserLoginField <$>
    (({#get CThostFtdcReqUserLoginField->LoginRemark#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->ClientIPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->OneTimePassword#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->ProtocolInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->InterfaceProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->UserProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqUserLoginField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (loginRemark (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->LoginRemark#} p)
    withText (clientIPAddress (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->ClientIPAddress#} p)
    withText (oneTimePassword (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->OneTimePassword#} p)
    withText (macAddress (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->MacAddress#} p)
    withText (protocolInfo (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->ProtocolInfo#} p)
    withText (interfaceProductInfo (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->InterfaceProductInfo#} p)
    withText (userProductInfo (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->UserProductInfo#} p)
    withText (password (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->Password#} p)
    withText (userID (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->UserID#} p)
    withText (brokerID (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->BrokerID#} p)
    withText (tradingDay (s :: CThostFtdcReqUserLoginField)) ({#set CThostFtdcReqUserLoginField->TradingDay#} p)

instance Storable CThostFtdcBrokerUserPasswordField where
  sizeOf _ = {#sizeof CThostFtdcBrokerUserPasswordField#}
  alignment _ = {#alignof CThostFtdcBrokerUserPasswordField#}
  peek p =
    CThostFtdcBrokerUserPasswordField <$>
    (({#get CThostFtdcBrokerUserPasswordField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserPasswordField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserPasswordField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (password (s :: CThostFtdcBrokerUserPasswordField)) ({#set CThostFtdcBrokerUserPasswordField->Password#} p)
    withText (userID (s :: CThostFtdcBrokerUserPasswordField)) ({#set CThostFtdcBrokerUserPasswordField->UserID#} p)
    withText (brokerID (s :: CThostFtdcBrokerUserPasswordField)) ({#set CThostFtdcBrokerUserPasswordField->BrokerID#} p)

instance Storable CThostFtdcSpecificInstrumentField where
  sizeOf _ = {#sizeof CThostFtdcSpecificInstrumentField#}
  alignment _ = {#alignof CThostFtdcSpecificInstrumentField#}
  peek p =
    CThostFtdcSpecificInstrumentField <$>
    (({#get CThostFtdcSpecificInstrumentField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (instrumentID (s :: CThostFtdcSpecificInstrumentField)) ({#set CThostFtdcSpecificInstrumentField->InstrumentID#} p)

instance Storable CThostFtdcContractBankField where
  sizeOf _ = {#sizeof CThostFtdcContractBankField#}
  alignment _ = {#alignof CThostFtdcContractBankField#}
  peek p =
    CThostFtdcContractBankField <$>
    (({#get CThostFtdcContractBankField->BankName#} p) >>= peekText) <*>
    (({#get CThostFtdcContractBankField->BankBrchID#} p) >>= peekText) <*>
    (({#get CThostFtdcContractBankField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcContractBankField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (bankName (s :: CThostFtdcContractBankField)) ({#set CThostFtdcContractBankField->BankName#} p)
    withText (bankBrchID (s :: CThostFtdcContractBankField)) ({#set CThostFtdcContractBankField->BankBrchID#} p)
    withText (bankID (s :: CThostFtdcContractBankField)) ({#set CThostFtdcContractBankField->BankID#} p)
    withText (brokerID (s :: CThostFtdcContractBankField)) ({#set CThostFtdcContractBankField->BrokerID#} p)

instance Storable CThostFtdcSettlementInfoField where
  sizeOf _ = {#sizeof CThostFtdcSettlementInfoField#}
  alignment _ = {#alignof CThostFtdcSettlementInfoField#}
  peek p =
    CThostFtdcSettlementInfoField <$>
    (({#get CThostFtdcSettlementInfoField->Content#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcSettlementInfoField->SequenceNo#} p) <*>
    (({#get CThostFtdcSettlementInfoField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSettlementInfoField->BrokerID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcSettlementInfoField->SettlementID#} p) <*>
    (({#get CThostFtdcSettlementInfoField->TradingDay#} p) >>= peekText)
  poke p s = do
    withText (content (s :: CThostFtdcSettlementInfoField)) ({#set CThostFtdcSettlementInfoField->Content#} p)
    {#set CThostFtdcSettlementInfoField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcSettlementInfoField))
    withText (investorID (s :: CThostFtdcSettlementInfoField)) ({#set CThostFtdcSettlementInfoField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSettlementInfoField)) ({#set CThostFtdcSettlementInfoField->BrokerID#} p)
    {#set CThostFtdcSettlementInfoField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcSettlementInfoField))
    withText (tradingDay (s :: CThostFtdcSettlementInfoField)) ({#set CThostFtdcSettlementInfoField->TradingDay#} p)

instance Storable CThostFtdcOptionInstrCommRateField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrCommRateField#}
  alignment _ = {#alignof CThostFtdcOptionInstrCommRateField#}
  peek p =
    CThostFtdcOptionInstrCommRateField <$>
    (({#get CThostFtdcOptionInstrCommRateField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->StrikeRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->StrikeRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->CloseTodayRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->CloseTodayRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->CloseRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->CloseRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->OpenRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrCommRateField->OpenRatioByMoney#} p) <*>
    (({#get CThostFtdcOptionInstrCommRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrCommRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrCommRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcOptionInstrCommRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcOptionInstrCommRateField)) ({#set CThostFtdcOptionInstrCommRateField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrCommRateField->StrikeRatioByVolume#} p (realToFrac $ strikeRatioByVolume (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->StrikeRatioByMoney#} p (realToFrac $ strikeRatioByMoney (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->CloseTodayRatioByVolume#} p (realToFrac $ closeTodayRatioByVolume (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->CloseTodayRatioByMoney#} p (realToFrac $ closeTodayRatioByMoney (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->CloseRatioByVolume#} p (realToFrac $ closeRatioByVolume (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->CloseRatioByMoney#} p (realToFrac $ closeRatioByMoney (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->OpenRatioByVolume#} p (realToFrac $ openRatioByVolume (s :: CThostFtdcOptionInstrCommRateField))
    {#set CThostFtdcOptionInstrCommRateField->OpenRatioByMoney#} p (realToFrac $ openRatioByMoney (s :: CThostFtdcOptionInstrCommRateField))
    withText (investorID (s :: CThostFtdcOptionInstrCommRateField)) ({#set CThostFtdcOptionInstrCommRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrCommRateField)) ({#set CThostFtdcOptionInstrCommRateField->BrokerID#} p)
    {#set CThostFtdcOptionInstrCommRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcOptionInstrCommRateField))
    withText (instrumentID (s :: CThostFtdcOptionInstrCommRateField)) ({#set CThostFtdcOptionInstrCommRateField->InstrumentID#} p)

instance Storable CThostFtdcMarginModelField where
  sizeOf _ = {#sizeof CThostFtdcMarginModelField#}
  alignment _ = {#alignof CThostFtdcMarginModelField#}
  peek p =
    CThostFtdcMarginModelField <$>
    (({#get CThostFtdcMarginModelField->MarginModelName#} p) >>= peekText) <*>
    (({#get CThostFtdcMarginModelField->MarginModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcMarginModelField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (marginModelName (s :: CThostFtdcMarginModelField)) ({#set CThostFtdcMarginModelField->MarginModelName#} p)
    withText (marginModelID (s :: CThostFtdcMarginModelField)) ({#set CThostFtdcMarginModelField->MarginModelID#} p)
    withText (brokerID (s :: CThostFtdcMarginModelField)) ({#set CThostFtdcMarginModelField->BrokerID#} p)

instance Storable CThostFtdcInvestorAccountField where
  sizeOf _ = {#sizeof CThostFtdcInvestorAccountField#}
  alignment _ = {#alignof CThostFtdcInvestorAccountField#}
  peek p =
    CThostFtdcInvestorAccountField <$>
    fmap castCCharToChar ({#get CThostFtdcInvestorAccountField->BizType#} p) <*>
    (({#get CThostFtdcInvestorAccountField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorAccountField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInvestorAccountField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInvestorAccountField->BizType#} p (castCharToCChar $ bizType (s :: CThostFtdcInvestorAccountField))
    withText (currencyID (s :: CThostFtdcInvestorAccountField)) ({#set CThostFtdcInvestorAccountField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcInvestorAccountField)) ({#set CThostFtdcInvestorAccountField->AccountID#} p)
    withText (investorID (s :: CThostFtdcInvestorAccountField)) ({#set CThostFtdcInvestorAccountField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInvestorAccountField)) ({#set CThostFtdcInvestorAccountField->BrokerID#} p)

instance Storable CThostFtdcQryContractBankField where
  sizeOf _ = {#sizeof CThostFtdcQryContractBankField#}
  alignment _ = {#alignof CThostFtdcQryContractBankField#}
  peek p =
    CThostFtdcQryContractBankField <$>
    (({#get CThostFtdcQryContractBankField->BankBrchID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryContractBankField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryContractBankField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (bankBrchID (s :: CThostFtdcQryContractBankField)) ({#set CThostFtdcQryContractBankField->BankBrchID#} p)
    withText (bankID (s :: CThostFtdcQryContractBankField)) ({#set CThostFtdcQryContractBankField->BankID#} p)
    withText (brokerID (s :: CThostFtdcQryContractBankField)) ({#set CThostFtdcQryContractBankField->BrokerID#} p)

instance Storable CThostFtdcTransferQryBankReqField where
  sizeOf _ = {#sizeof CThostFtdcTransferQryBankReqField#}
  alignment _ = {#alignof CThostFtdcTransferQryBankReqField#}
  peek p =
    CThostFtdcTransferQryBankReqField <$>
    (({#get CThostFtdcTransferQryBankReqField->CurrencyCode#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryBankReqField->FutureAccPwd#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferQryBankReqField->FuturePwdFlag#} p) <*>
    (({#get CThostFtdcTransferQryBankReqField->FutureAccount#} p) >>= peekText)
  poke p s = do
    withText (currencyCode (s :: CThostFtdcTransferQryBankReqField)) ({#set CThostFtdcTransferQryBankReqField->CurrencyCode#} p)
    withText (futureAccPwd (s :: CThostFtdcTransferQryBankReqField)) ({#set CThostFtdcTransferQryBankReqField->FutureAccPwd#} p)
    {#set CThostFtdcTransferQryBankReqField->FuturePwdFlag#} p (castCharToCChar $ futurePwdFlag (s :: CThostFtdcTransferQryBankReqField))
    withText (futureAccount (s :: CThostFtdcTransferQryBankReqField)) ({#set CThostFtdcTransferQryBankReqField->FutureAccount#} p)

instance Storable CThostFtdcReqQueryTradeResultBySerialField where
  sizeOf _ = {#sizeof CThostFtdcReqQueryTradeResultBySerialField#}
  alignment _ = {#alignof CThostFtdcReqQueryTradeResultBySerialField#}
  peek p =
    CThostFtdcReqQueryTradeResultBySerialField <$>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->Digest#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcReqQueryTradeResultBySerialField->TradeAmount#} p) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryTradeResultBySerialField->CustType#} p) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryTradeResultBySerialField->IdCardType#} p) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->CustomerName#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->RefrenceIssure#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryTradeResultBySerialField->RefrenceIssureType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryTradeResultBySerialField->Reference#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryTradeResultBySerialField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqQueryTradeResultBySerialField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqQueryTradeResultBySerialField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqQueryTradeResultBySerialField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (digest (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->Digest#} p)
    {#set CThostFtdcReqQueryTradeResultBySerialField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcReqQueryTradeResultBySerialField))
    withText (currencyID (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->CurrencyID#} p)
    withText (password (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->Password#} p)
    withText (accountID (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BankAccount#} p)
    {#set CThostFtdcReqQueryTradeResultBySerialField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqQueryTradeResultBySerialField))
    withText (identifiedCardNo (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqQueryTradeResultBySerialField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqQueryTradeResultBySerialField))
    withText (customerName (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->CustomerName#} p)
    withText (refrenceIssure (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->RefrenceIssure#} p)
    {#set CThostFtdcReqQueryTradeResultBySerialField->RefrenceIssureType#} p (castCharToCChar $ refrenceIssureType (s :: CThostFtdcReqQueryTradeResultBySerialField))
    {#set CThostFtdcReqQueryTradeResultBySerialField->Reference#} p (fromIntegral $ reference (s :: CThostFtdcReqQueryTradeResultBySerialField))
    {#set CThostFtdcReqQueryTradeResultBySerialField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqQueryTradeResultBySerialField))
    {#set CThostFtdcReqQueryTradeResultBySerialField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqQueryTradeResultBySerialField))
    {#set CThostFtdcReqQueryTradeResultBySerialField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqQueryTradeResultBySerialField))
    withText (tradingDay (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqQueryTradeResultBySerialField)) ({#set CThostFtdcReqQueryTradeResultBySerialField->TradeCode#} p)

instance Storable CThostFtdcQryExchangeRateField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeRateField#}
  alignment _ = {#alignof CThostFtdcQryExchangeRateField#}
  peek p =
    CThostFtdcQryExchangeRateField <$>
    (({#get CThostFtdcQryExchangeRateField->ToCurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeRateField->FromCurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeRateField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (toCurrencyID (s :: CThostFtdcQryExchangeRateField)) ({#set CThostFtdcQryExchangeRateField->ToCurrencyID#} p)
    withText (fromCurrencyID (s :: CThostFtdcQryExchangeRateField)) ({#set CThostFtdcQryExchangeRateField->FromCurrencyID#} p)
    withText (brokerID (s :: CThostFtdcQryExchangeRateField)) ({#set CThostFtdcQryExchangeRateField->BrokerID#} p)

instance Storable CThostFtdcSyncingInvestorPositionField where
  sizeOf _ = {#sizeof CThostFtdcSyncingInvestorPositionField#}
  alignment _ = {#alignof CThostFtdcSyncingInvestorPositionField#}
  peek p =
    CThostFtdcSyncingInvestorPositionField <$>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->YdStrikeFrozen#} p) <*>
    (({#get CThostFtdcSyncingInvestorPositionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->AbandonFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->StrikeFrozenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->StrikeFrozen#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->MarginRateByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->MarginRateByMoney#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->TodayPosition#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->CloseProfitByTrade#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->CloseProfitByDate#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->CombShortFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->CombLongFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->CombPosition#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->ExchangeMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->OpenCost#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->SettlementID#} p) <*>
    (({#get CThostFtdcSyncingInvestorPositionField->TradingDay#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->SettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->PreSettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->PositionProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->CloseProfit#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->Commission#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->CashIn#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->FrozenCommission#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->FrozenCash#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->FrozenMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->UseMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->PreMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->PositionCost#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->CloseAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->OpenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->CloseVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->OpenVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->ShortFrozenAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcSyncingInvestorPositionField->LongFrozenAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->ShortFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->LongFrozen#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->Position#} p) <*>
    fmap fromIntegral ({#get CThostFtdcSyncingInvestorPositionField->YdPosition#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInvestorPositionField->PositionDate#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInvestorPositionField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcSyncingInvestorPositionField->PosiDirection#} p) <*>
    (({#get CThostFtdcSyncingInvestorPositionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorPositionField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcSyncingInvestorPositionField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcSyncingInvestorPositionField->YdStrikeFrozen#} p (fromIntegral $ ydStrikeFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    withText (exchangeID (s :: CThostFtdcSyncingInvestorPositionField)) ({#set CThostFtdcSyncingInvestorPositionField->ExchangeID#} p)
    {#set CThostFtdcSyncingInvestorPositionField->AbandonFrozen#} p (fromIntegral $ abandonFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->StrikeFrozenAmount#} p (realToFrac $ strikeFrozenAmount (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->StrikeFrozen#} p (fromIntegral $ strikeFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->MarginRateByVolume#} p (realToFrac $ marginRateByVolume (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->MarginRateByMoney#} p (realToFrac $ marginRateByMoney (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->TodayPosition#} p (fromIntegral $ todayPosition (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CloseProfitByTrade#} p (realToFrac $ closeProfitByTrade (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CloseProfitByDate#} p (realToFrac $ closeProfitByDate (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CombShortFrozen#} p (fromIntegral $ combShortFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CombLongFrozen#} p (fromIntegral $ combLongFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CombPosition#} p (fromIntegral $ combPosition (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->ExchangeMargin#} p (realToFrac $ exchangeMargin (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->OpenCost#} p (realToFrac $ openCost (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcSyncingInvestorPositionField))
    withText (tradingDay (s :: CThostFtdcSyncingInvestorPositionField)) ({#set CThostFtdcSyncingInvestorPositionField->TradingDay#} p)
    {#set CThostFtdcSyncingInvestorPositionField->SettlementPrice#} p (realToFrac $ settlementPrice (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->PreSettlementPrice#} p (realToFrac $ preSettlementPrice (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->PositionProfit#} p (realToFrac $ positionProfit (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CloseProfit#} p (realToFrac $ closeProfit (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->Commission#} p (realToFrac $ commission (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CashIn#} p (realToFrac $ cashIn (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->FrozenCommission#} p (realToFrac $ frozenCommission (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->FrozenCash#} p (realToFrac $ frozenCash (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->FrozenMargin#} p (realToFrac $ frozenMargin (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->UseMargin#} p (realToFrac $ useMargin (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->PreMargin#} p (realToFrac $ preMargin (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->PositionCost#} p (realToFrac $ positionCost (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CloseAmount#} p (realToFrac $ closeAmount (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->OpenAmount#} p (realToFrac $ openAmount (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->CloseVolume#} p (fromIntegral $ closeVolume (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->OpenVolume#} p (fromIntegral $ openVolume (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->ShortFrozenAmount#} p (realToFrac $ shortFrozenAmount (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->LongFrozenAmount#} p (realToFrac $ longFrozenAmount (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->ShortFrozen#} p (fromIntegral $ shortFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->LongFrozen#} p (fromIntegral $ longFrozen (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->Position#} p (fromIntegral $ position (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->YdPosition#} p (fromIntegral $ ydPosition (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->PositionDate#} p (castCharToCChar $ positionDate (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcSyncingInvestorPositionField))
    {#set CThostFtdcSyncingInvestorPositionField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcSyncingInvestorPositionField))
    withText (investorID (s :: CThostFtdcSyncingInvestorPositionField)) ({#set CThostFtdcSyncingInvestorPositionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcSyncingInvestorPositionField)) ({#set CThostFtdcSyncingInvestorPositionField->BrokerID#} p)
    withText (instrumentID (s :: CThostFtdcSyncingInvestorPositionField)) ({#set CThostFtdcSyncingInvestorPositionField->InstrumentID#} p)

instance Storable CThostFtdcTransferSerialField where
  sizeOf _ = {#sizeof CThostFtdcTransferSerialField#}
  alignment _ = {#alignof CThostFtdcTransferSerialField#}
  peek p =
    CThostFtdcTransferSerialField <$>
    (({#get CThostFtdcTransferSerialField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcTransferSerialField->ErrorID#} p) <*>
    (({#get CThostFtdcTransferSerialField->BankNewAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->OperatorCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferSerialField->AvailabilityFlag#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferSerialField->BrokerFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferSerialField->CustFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferSerialField->TradeAmount#} p) <*>
    (({#get CThostFtdcTransferSerialField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferSerialField->IdCardType#} p) <*>
    fmap fromIntegral ({#get CThostFtdcTransferSerialField->FutureSerial#} p) <*>
    (({#get CThostFtdcTransferSerialField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->AccountID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferSerialField->FutureAccType#} p) <*>
    (({#get CThostFtdcTransferSerialField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcTransferSerialField->BankAccType#} p) <*>
    (({#get CThostFtdcTransferSerialField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->BankID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTransferSerialField->SessionID#} p) <*>
    (({#get CThostFtdcTransferSerialField->TradeCode#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferSerialField->TradeDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcTransferSerialField->PlateSerial#} p)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->ErrorMsg#} p)
    {#set CThostFtdcTransferSerialField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcTransferSerialField))
    withText (bankNewAccount (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BankNewAccount#} p)
    withText (operatorCode (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->OperatorCode#} p)
    {#set CThostFtdcTransferSerialField->AvailabilityFlag#} p (castCharToCChar $ availabilityFlag (s :: CThostFtdcTransferSerialField))
    {#set CThostFtdcTransferSerialField->BrokerFee#} p (realToFrac $ brokerFee (s :: CThostFtdcTransferSerialField))
    {#set CThostFtdcTransferSerialField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcTransferSerialField))
    {#set CThostFtdcTransferSerialField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcTransferSerialField))
    withText (currencyID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->CurrencyID#} p)
    withText (identifiedCardNo (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->IdentifiedCardNo#} p)
    {#set CThostFtdcTransferSerialField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcTransferSerialField))
    {#set CThostFtdcTransferSerialField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcTransferSerialField))
    withText (investorID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->InvestorID#} p)
    withText (accountID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->AccountID#} p)
    {#set CThostFtdcTransferSerialField->FutureAccType#} p (castCharToCChar $ futureAccType (s :: CThostFtdcTransferSerialField))
    withText (brokerBranchID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BrokerID#} p)
    withText (bankSerial (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BankSerial#} p)
    withText (bankAccount (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BankAccount#} p)
    {#set CThostFtdcTransferSerialField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcTransferSerialField))
    withText (bankBranchID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->BankID#} p)
    {#set CThostFtdcTransferSerialField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcTransferSerialField))
    withText (tradeCode (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->TradeCode#} p)
    withText (tradeTime (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->TradeTime#} p)
    withText (tradingDay (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->TradingDay#} p)
    withText (tradeDate (s :: CThostFtdcTransferSerialField)) ({#set CThostFtdcTransferSerialField->TradeDate#} p)
    {#set CThostFtdcTransferSerialField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcTransferSerialField))

instance Storable CThostFtdcQryExchangeQuoteField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeQuoteField#}
  alignment _ = {#alignof CThostFtdcQryExchangeQuoteField#}
  peek p =
    CThostFtdcQryExchangeQuoteField <$>
    (({#get CThostFtdcQryExchangeQuoteField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeQuoteField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeQuoteField)) ({#set CThostFtdcQryExchangeQuoteField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeQuoteField)) ({#set CThostFtdcQryExchangeQuoteField->ExchangeID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryExchangeQuoteField)) ({#set CThostFtdcQryExchangeQuoteField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeQuoteField)) ({#set CThostFtdcQryExchangeQuoteField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeQuoteField)) ({#set CThostFtdcQryExchangeQuoteField->ParticipantID#} p)

instance Storable CThostFtdcTransferQryBankRspField where
  sizeOf _ = {#sizeof CThostFtdcTransferQryBankRspField#}
  alignment _ = {#alignof CThostFtdcTransferQryBankRspField#}
  peek p =
    CThostFtdcTransferQryBankRspField <$>
    (({#get CThostFtdcTransferQryBankRspField->CurrencyCode#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcTransferQryBankRspField->FetchAmt#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferQryBankRspField->UseAmt#} p) <*>
    fmap realToFrac ({#get CThostFtdcTransferQryBankRspField->TradeAmt#} p) <*>
    (({#get CThostFtdcTransferQryBankRspField->FutureAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryBankRspField->RetInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcTransferQryBankRspField->RetCode#} p) >>= peekText)
  poke p s = do
    withText (currencyCode (s :: CThostFtdcTransferQryBankRspField)) ({#set CThostFtdcTransferQryBankRspField->CurrencyCode#} p)
    {#set CThostFtdcTransferQryBankRspField->FetchAmt#} p (realToFrac $ fetchAmt (s :: CThostFtdcTransferQryBankRspField))
    {#set CThostFtdcTransferQryBankRspField->UseAmt#} p (realToFrac $ useAmt (s :: CThostFtdcTransferQryBankRspField))
    {#set CThostFtdcTransferQryBankRspField->TradeAmt#} p (realToFrac $ tradeAmt (s :: CThostFtdcTransferQryBankRspField))
    withText (futureAccount (s :: CThostFtdcTransferQryBankRspField)) ({#set CThostFtdcTransferQryBankRspField->FutureAccount#} p)
    withText (retInfo (s :: CThostFtdcTransferQryBankRspField)) ({#set CThostFtdcTransferQryBankRspField->RetInfo#} p)
    withText (retCode (s :: CThostFtdcTransferQryBankRspField)) ({#set CThostFtdcTransferQryBankRspField->RetCode#} p)

instance Storable CThostFtdcBrokerUserFunctionField where
  sizeOf _ = {#sizeof CThostFtdcBrokerUserFunctionField#}
  alignment _ = {#alignof CThostFtdcBrokerUserFunctionField#}
  peek p =
    CThostFtdcBrokerUserFunctionField <$>
    fmap castCCharToChar ({#get CThostFtdcBrokerUserFunctionField->BrokerFunctionCode#} p) <*>
    (({#get CThostFtdcBrokerUserFunctionField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcBrokerUserFunctionField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcBrokerUserFunctionField->BrokerFunctionCode#} p (castCharToCChar $ brokerFunctionCode (s :: CThostFtdcBrokerUserFunctionField))
    withText (userID (s :: CThostFtdcBrokerUserFunctionField)) ({#set CThostFtdcBrokerUserFunctionField->UserID#} p)
    withText (brokerID (s :: CThostFtdcBrokerUserFunctionField)) ({#set CThostFtdcBrokerUserFunctionField->BrokerID#} p)

instance Storable CThostFtdcMarketDataStaticField where
  sizeOf _ = {#sizeof CThostFtdcMarketDataStaticField#}
  alignment _ = {#alignof CThostFtdcMarketDataStaticField#}
  peek p =
    CThostFtdcMarketDataStaticField <$>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->CurrDelta#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->SettlementPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->LowerLimitPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->UpperLimitPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->ClosePrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->LowestPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->HighestPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcMarketDataStaticField->OpenPrice#} p)
  poke p s = do
    {#set CThostFtdcMarketDataStaticField->CurrDelta#} p (realToFrac $ currDelta (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->SettlementPrice#} p (realToFrac $ settlementPrice (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->LowerLimitPrice#} p (realToFrac $ lowerLimitPrice (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->UpperLimitPrice#} p (realToFrac $ upperLimitPrice (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->ClosePrice#} p (realToFrac $ closePrice (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->LowestPrice#} p (realToFrac $ lowestPrice (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->HighestPrice#} p (realToFrac $ highestPrice (s :: CThostFtdcMarketDataStaticField))
    {#set CThostFtdcMarketDataStaticField->OpenPrice#} p (realToFrac $ openPrice (s :: CThostFtdcMarketDataStaticField))

instance Storable CThostFtdcExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcExecOrderField#}
  alignment _ = {#alignof CThostFtdcExecOrderField#}
  peek p =
    CThostFtdcExecOrderField <$>
    (({#get CThostFtdcExecOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->BranchID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->BrokerExecOrderSeq#} p) <*>
    (({#get CThostFtdcExecOrderField->ActiveUserID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->UserProductInfo#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->SequenceNo#} p) <*>
    (({#get CThostFtdcExecOrderField->ClearingPartID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->ExecResult#} p) <*>
    (({#get CThostFtdcExecOrderField->CancelTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->InsertTime#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->InsertDate#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ExecOrderSysID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->SettlementID#} p) <*>
    (({#get CThostFtdcExecOrderField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->OrderSubmitStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->InstallID#} p) <*>
    (({#get CThostFtdcExecOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ExecOrderLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->CloseFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->ReservePositionFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->PosiDirection#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->ActionType#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExecOrderField->OffsetFlag#} p) <*>
    (({#get CThostFtdcExecOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExecOrderField->Volume#} p) <*>
    (({#get CThostFtdcExecOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->ExecOrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcExecOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->IPAddress#} p)
    withText (currencyID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->AccountID#} p)
    withText (investUnitID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->BranchID#} p)
    {#set CThostFtdcExecOrderField->BrokerExecOrderSeq#} p (fromIntegral $ brokerExecOrderSeq (s :: CThostFtdcExecOrderField))
    withText (activeUserID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ActiveUserID#} p)
    withText (statusMsg (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->StatusMsg#} p)
    withText (userProductInfo (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->UserProductInfo#} p)
    {#set CThostFtdcExecOrderField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExecOrderField))
    withText (clearingPartID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ClearingPartID#} p)
    {#set CThostFtdcExecOrderField->ExecResult#} p (castCharToCChar $ execResult (s :: CThostFtdcExecOrderField))
    withText (cancelTime (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->CancelTime#} p)
    withText (insertTime (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->InsertTime#} p)
    withText (insertDate (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->InsertDate#} p)
    withText (execOrderSysID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ExecOrderSysID#} p)
    {#set CThostFtdcExecOrderField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExecOrderField))
    withText (tradingDay (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->TradingDay#} p)
    {#set CThostFtdcExecOrderField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->OrderSubmitStatus#} p (castCharToCChar $ orderSubmitStatus (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExecOrderField))
    withText (traderID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ExchangeID#} p)
    withText (execOrderLocalID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ExecOrderLocalID#} p)
    {#set CThostFtdcExecOrderField->CloseFlag#} p (castCharToCChar $ closeFlag (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->ReservePositionFlag#} p (castCharToCChar $ reservePositionFlag (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->PosiDirection#} p (castCharToCChar $ posiDirection (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->ActionType#} p (castCharToCChar $ actionType (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->OffsetFlag#} p (castCharToCChar $ offsetFlag (s :: CThostFtdcExecOrderField))
    withText (businessUnit (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->BusinessUnit#} p)
    {#set CThostFtdcExecOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcExecOrderField))
    {#set CThostFtdcExecOrderField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExecOrderField))
    withText (userID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->UserID#} p)
    withText (execOrderRef (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->ExecOrderRef#} p)
    withText (instrumentID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcExecOrderField)) ({#set CThostFtdcExecOrderField->BrokerID#} p)

instance Storable CThostFtdcQryOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcQryOrderActionField#}
  alignment _ = {#alignof CThostFtdcQryOrderActionField#}
  peek p =
    CThostFtdcQryOrderActionField <$>
    (({#get CThostFtdcQryOrderActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryOrderActionField)) ({#set CThostFtdcQryOrderActionField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryOrderActionField)) ({#set CThostFtdcQryOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryOrderActionField)) ({#set CThostFtdcQryOrderActionField->BrokerID#} p)

instance Storable CThostFtdcErrOrderActionField where
  sizeOf _ = {#sizeof CThostFtdcErrOrderActionField#}
  alignment _ = {#alignof CThostFtdcErrOrderActionField#}
  peek p =
    CThostFtdcErrOrderActionField <$>
    (({#get CThostFtdcErrOrderActionField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->ErrorID#} p) <*>
    (({#get CThostFtdcErrOrderActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcErrOrderActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->OrderLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->InstallID#} p) <*>
    (({#get CThostFtdcErrOrderActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->ActionDate#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->VolumeChange#} p) <*>
    fmap realToFrac ({#get CThostFtdcErrOrderActionField->LimitPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcErrOrderActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcErrOrderActionField->OrderSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->RequestID#} p) <*>
    (({#get CThostFtdcErrOrderActionField->OrderRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcErrOrderActionField->OrderActionRef#} p) <*>
    (({#get CThostFtdcErrOrderActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcErrOrderActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ErrorMsg#} p)
    {#set CThostFtdcErrOrderActionField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcErrOrderActionField))
    withText (macAddress (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->BranchID#} p)
    withText (instrumentID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->InstrumentID#} p)
    withText (statusMsg (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->StatusMsg#} p)
    withText (userID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->UserID#} p)
    {#set CThostFtdcErrOrderActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcErrOrderActionField))
    withText (businessUnit (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ActionLocalID#} p)
    withText (orderLocalID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->OrderLocalID#} p)
    {#set CThostFtdcErrOrderActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcErrOrderActionField))
    withText (traderID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ActionDate#} p)
    {#set CThostFtdcErrOrderActionField->VolumeChange#} p (fromIntegral $ volumeChange (s :: CThostFtdcErrOrderActionField))
    {#set CThostFtdcErrOrderActionField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcErrOrderActionField))
    {#set CThostFtdcErrOrderActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcErrOrderActionField))
    withText (orderSysID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->OrderSysID#} p)
    withText (exchangeID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->ExchangeID#} p)
    {#set CThostFtdcErrOrderActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcErrOrderActionField))
    {#set CThostFtdcErrOrderActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcErrOrderActionField))
    {#set CThostFtdcErrOrderActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcErrOrderActionField))
    withText (orderRef (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->OrderRef#} p)
    {#set CThostFtdcErrOrderActionField->OrderActionRef#} p (fromIntegral $ orderActionRef (s :: CThostFtdcErrOrderActionField))
    withText (investorID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcErrOrderActionField)) ({#set CThostFtdcErrOrderActionField->BrokerID#} p)

instance Storable CThostFtdcExchangeCombActionField where
  sizeOf _ = {#sizeof CThostFtdcExchangeCombActionField#}
  alignment _ = {#alignof CThostFtdcExchangeCombActionField#}
  peek p =
    CThostFtdcExchangeCombActionField <$>
    (({#get CThostFtdcExchangeCombActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->ComTradeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->IPAddress#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeCombActionField->SequenceNo#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeCombActionField->SettlementID#} p) <*>
    (({#get CThostFtdcExchangeCombActionField->TradingDay#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeCombActionField->NotifySequence#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeCombActionField->ActionStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeCombActionField->InstallID#} p) <*>
    (({#get CThostFtdcExchangeCombActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcExchangeCombActionField->ActionLocalID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeCombActionField->HedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeCombActionField->CombDirection#} p) <*>
    fmap fromIntegral ({#get CThostFtdcExchangeCombActionField->Volume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcExchangeCombActionField->Direction#} p)
  poke p s = do
    withText (branchID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->BranchID#} p)
    withText (comTradeID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->ComTradeID#} p)
    withText (macAddress (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->IPAddress#} p)
    {#set CThostFtdcExchangeCombActionField->SequenceNo#} p (fromIntegral $ sequenceNo (s :: CThostFtdcExchangeCombActionField))
    {#set CThostFtdcExchangeCombActionField->SettlementID#} p (fromIntegral $ settlementID (s :: CThostFtdcExchangeCombActionField))
    withText (tradingDay (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->TradingDay#} p)
    {#set CThostFtdcExchangeCombActionField->NotifySequence#} p (fromIntegral $ notifySequence (s :: CThostFtdcExchangeCombActionField))
    {#set CThostFtdcExchangeCombActionField->ActionStatus#} p (castCharToCChar $ actionStatus (s :: CThostFtdcExchangeCombActionField))
    {#set CThostFtdcExchangeCombActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcExchangeCombActionField))
    withText (traderID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->TraderID#} p)
    withText (exchangeInstID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->ParticipantID#} p)
    withText (exchangeID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->ExchangeID#} p)
    withText (actionLocalID (s :: CThostFtdcExchangeCombActionField)) ({#set CThostFtdcExchangeCombActionField->ActionLocalID#} p)
    {#set CThostFtdcExchangeCombActionField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcExchangeCombActionField))
    {#set CThostFtdcExchangeCombActionField->CombDirection#} p (castCharToCChar $ combDirection (s :: CThostFtdcExchangeCombActionField))
    {#set CThostFtdcExchangeCombActionField->Volume#} p (fromIntegral $ volume (s :: CThostFtdcExchangeCombActionField))
    {#set CThostFtdcExchangeCombActionField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcExchangeCombActionField))

instance Storable CThostFtdcProductExchRateField where
  sizeOf _ = {#sizeof CThostFtdcProductExchRateField#}
  alignment _ = {#alignof CThostFtdcProductExchRateField#}
  peek p =
    CThostFtdcProductExchRateField <$>
    fmap realToFrac ({#get CThostFtdcProductExchRateField->ExchangeRate#} p) <*>
    (({#get CThostFtdcProductExchRateField->QuoteCurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcProductExchRateField->ProductID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcProductExchRateField->ExchangeRate#} p (realToFrac $ exchangeRate (s :: CThostFtdcProductExchRateField))
    withText (quoteCurrencyID (s :: CThostFtdcProductExchRateField)) ({#set CThostFtdcProductExchRateField->QuoteCurrencyID#} p)
    withText (productID (s :: CThostFtdcProductExchRateField)) ({#set CThostFtdcProductExchRateField->ProductID#} p)

instance Storable CThostFtdcQryErrExecOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryErrExecOrderField#}
  alignment _ = {#alignof CThostFtdcQryErrExecOrderField#}
  peek p =
    CThostFtdcQryErrExecOrderField <$>
    (({#get CThostFtdcQryErrExecOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryErrExecOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryErrExecOrderField)) ({#set CThostFtdcQryErrExecOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryErrExecOrderField)) ({#set CThostFtdcQryErrExecOrderField->BrokerID#} p)

instance Storable CThostFtdcQryParkedOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryParkedOrderField#}
  alignment _ = {#alignof CThostFtdcQryParkedOrderField#}
  peek p =
    CThostFtdcQryParkedOrderField <$>
    (({#get CThostFtdcQryParkedOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryParkedOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryParkedOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryParkedOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcQryParkedOrderField)) ({#set CThostFtdcQryParkedOrderField->ExchangeID#} p)
    withText (instrumentID (s :: CThostFtdcQryParkedOrderField)) ({#set CThostFtdcQryParkedOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcQryParkedOrderField)) ({#set CThostFtdcQryParkedOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryParkedOrderField)) ({#set CThostFtdcQryParkedOrderField->BrokerID#} p)

instance Storable CThostFtdcQryAccountregisterField where
  sizeOf _ = {#sizeof CThostFtdcQryAccountregisterField#}
  alignment _ = {#alignof CThostFtdcQryAccountregisterField#}
  peek p =
    CThostFtdcQryAccountregisterField <$>
    (({#get CThostFtdcQryAccountregisterField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryAccountregisterField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryAccountregisterField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryAccountregisterField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryAccountregisterField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcQryAccountregisterField)) ({#set CThostFtdcQryAccountregisterField->CurrencyID#} p)
    withText (bankBranchID (s :: CThostFtdcQryAccountregisterField)) ({#set CThostFtdcQryAccountregisterField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcQryAccountregisterField)) ({#set CThostFtdcQryAccountregisterField->BankID#} p)
    withText (accountID (s :: CThostFtdcQryAccountregisterField)) ({#set CThostFtdcQryAccountregisterField->AccountID#} p)
    withText (brokerID (s :: CThostFtdcQryAccountregisterField)) ({#set CThostFtdcQryAccountregisterField->BrokerID#} p)

instance Storable CThostFtdcInputQuoteField where
  sizeOf _ = {#sizeof CThostFtdcInputQuoteField#}
  alignment _ = {#alignof CThostFtdcInputQuoteField#}
  peek p =
    CThostFtdcInputQuoteField <$>
    (({#get CThostFtdcInputQuoteField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->ForQuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->BidOrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->AskOrderRef#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInputQuoteField->BidHedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputQuoteField->AskHedgeFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputQuoteField->BidOffsetFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInputQuoteField->AskOffsetFlag#} p) <*>
    (({#get CThostFtdcInputQuoteField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteField->RequestID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteField->BidVolume#} p) <*>
    fmap fromIntegral ({#get CThostFtdcInputQuoteField->AskVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInputQuoteField->BidPrice#} p) <*>
    fmap realToFrac ({#get CThostFtdcInputQuoteField->AskPrice#} p) <*>
    (({#get CThostFtdcInputQuoteField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->QuoteRef#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInputQuoteField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->IPAddress#} p)
    withText (clientID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->ClientID#} p)
    withText (investUnitID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->InvestUnitID#} p)
    withText (exchangeID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->ExchangeID#} p)
    withText (forQuoteSysID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->ForQuoteSysID#} p)
    withText (bidOrderRef (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->BidOrderRef#} p)
    withText (askOrderRef (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->AskOrderRef#} p)
    {#set CThostFtdcInputQuoteField->BidHedgeFlag#} p (castCharToCChar $ bidHedgeFlag (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->AskHedgeFlag#} p (castCharToCChar $ askHedgeFlag (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->BidOffsetFlag#} p (castCharToCChar $ bidOffsetFlag (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->AskOffsetFlag#} p (castCharToCChar $ askOffsetFlag (s :: CThostFtdcInputQuoteField))
    withText (businessUnit (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->BusinessUnit#} p)
    {#set CThostFtdcInputQuoteField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->BidVolume#} p (fromIntegral $ bidVolume (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->AskVolume#} p (fromIntegral $ askVolume (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->BidPrice#} p (realToFrac $ bidPrice (s :: CThostFtdcInputQuoteField))
    {#set CThostFtdcInputQuoteField->AskPrice#} p (realToFrac $ askPrice (s :: CThostFtdcInputQuoteField))
    withText (userID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->UserID#} p)
    withText (quoteRef (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->QuoteRef#} p)
    withText (instrumentID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInputQuoteField)) ({#set CThostFtdcInputQuoteField->BrokerID#} p)

instance Storable CThostFtdcTradingAccountPasswordUpdateV1Field where
  sizeOf _ = {#sizeof CThostFtdcTradingAccountPasswordUpdateV1Field#}
  alignment _ = {#alignof CThostFtdcTradingAccountPasswordUpdateV1Field#}
  peek p =
    CThostFtdcTradingAccountPasswordUpdateV1Field <$>
    (({#get CThostFtdcTradingAccountPasswordUpdateV1Field->NewPassword#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateV1Field->OldPassword#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateV1Field->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcTradingAccountPasswordUpdateV1Field->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (newPassword (s :: CThostFtdcTradingAccountPasswordUpdateV1Field)) ({#set CThostFtdcTradingAccountPasswordUpdateV1Field->NewPassword#} p)
    withText (oldPassword (s :: CThostFtdcTradingAccountPasswordUpdateV1Field)) ({#set CThostFtdcTradingAccountPasswordUpdateV1Field->OldPassword#} p)
    withText (investorID (s :: CThostFtdcTradingAccountPasswordUpdateV1Field)) ({#set CThostFtdcTradingAccountPasswordUpdateV1Field->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcTradingAccountPasswordUpdateV1Field)) ({#set CThostFtdcTradingAccountPasswordUpdateV1Field->BrokerID#} p)

instance Storable CThostFtdcReqTransferField where
  sizeOf _ = {#sizeof CThostFtdcReqTransferField#}
  alignment _ = {#alignof CThostFtdcReqTransferField#}
  peek p =
    CThostFtdcReqTransferField <$>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->TransferStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqTransferField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqTransferField->RequestID#} p) <*>
    (({#get CThostFtdcReqTransferField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcReqTransferField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcReqTransferField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->BankAccType#} p) <*>
    (({#get CThostFtdcReqTransferField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->Message#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcReqTransferField->BrokerFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcReqTransferField->CustFee#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->FeePayFlag#} p) <*>
    fmap realToFrac ({#get CThostFtdcReqTransferField->FutureFetchAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcReqTransferField->TradeAmount#} p) <*>
    (({#get CThostFtdcReqTransferField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcReqTransferField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqTransferField->FutureSerial#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqTransferField->InstallID#} p) <*>
    (({#get CThostFtdcReqTransferField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->CustType#} p) <*>
    (({#get CThostFtdcReqTransferField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->IdCardType#} p) <*>
    (({#get CThostFtdcReqTransferField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqTransferField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqTransferField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqTransferField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqTransferField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqTransferField->TradeCode#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcReqTransferField->TransferStatus#} p (castCharToCChar $ transferStatus (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcReqTransferField))
    withText (operNo (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->OperNo#} p)
    {#set CThostFtdcReqTransferField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcReqTransferField))
    withText (bankSecuAcc (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BrokerIDByBank#} p)
    {#set CThostFtdcReqTransferField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcReqTransferField))
    withText (deviceID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->DeviceID#} p)
    {#set CThostFtdcReqTransferField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcReqTransferField))
    withText (digest (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->Digest#} p)
    withText (message (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->Message#} p)
    {#set CThostFtdcReqTransferField->BrokerFee#} p (realToFrac $ brokerFee (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->FeePayFlag#} p (castCharToCChar $ feePayFlag (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->FutureFetchAmount#} p (realToFrac $ futureFetchAmount (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcReqTransferField))
    withText (currencyID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->CurrencyID#} p)
    {#set CThostFtdcReqTransferField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcReqTransferField))
    withText (userID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->UserID#} p)
    {#set CThostFtdcReqTransferField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqTransferField))
    withText (password (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->Password#} p)
    withText (accountID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BankAccount#} p)
    {#set CThostFtdcReqTransferField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqTransferField))
    withText (identifiedCardNo (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqTransferField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqTransferField))
    withText (customerName (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->CustomerName#} p)
    {#set CThostFtdcReqTransferField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqTransferField))
    {#set CThostFtdcReqTransferField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqTransferField))
    withText (tradingDay (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqTransferField)) ({#set CThostFtdcReqTransferField->TradeCode#} p)

instance Storable CThostFtdcQryNoticeField where
  sizeOf _ = {#sizeof CThostFtdcQryNoticeField#}
  alignment _ = {#alignof CThostFtdcQryNoticeField#}
  peek p =
    CThostFtdcQryNoticeField <$>
    (({#get CThostFtdcQryNoticeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcQryNoticeField)) ({#set CThostFtdcQryNoticeField->BrokerID#} p)

instance Storable CThostFtdcQryProductExchRateField where
  sizeOf _ = {#sizeof CThostFtdcQryProductExchRateField#}
  alignment _ = {#alignof CThostFtdcQryProductExchRateField#}
  peek p =
    CThostFtdcQryProductExchRateField <$>
    (({#get CThostFtdcQryProductExchRateField->ProductID#} p) >>= peekText)
  poke p s = do
    withText (productID (s :: CThostFtdcQryProductExchRateField)) ({#set CThostFtdcQryProductExchRateField->ProductID#} p)

instance Storable CThostFtdcIndexPriceField where
  sizeOf _ = {#sizeof CThostFtdcIndexPriceField#}
  alignment _ = {#alignof CThostFtdcIndexPriceField#}
  peek p =
    CThostFtdcIndexPriceField <$>
    (({#get CThostFtdcIndexPriceField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcIndexPriceField->ClosePrice#} p) <*>
    (({#get CThostFtdcIndexPriceField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcIndexPriceField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcIndexPriceField)) ({#set CThostFtdcIndexPriceField->ExchangeID#} p)
    {#set CThostFtdcIndexPriceField->ClosePrice#} p (realToFrac $ closePrice (s :: CThostFtdcIndexPriceField))
    withText (instrumentID (s :: CThostFtdcIndexPriceField)) ({#set CThostFtdcIndexPriceField->InstrumentID#} p)
    withText (brokerID (s :: CThostFtdcIndexPriceField)) ({#set CThostFtdcIndexPriceField->BrokerID#} p)

instance Storable CThostFtdcParkedOrderField where
  sizeOf _ = {#sizeof CThostFtdcParkedOrderField#}
  alignment _ = {#alignof CThostFtdcParkedOrderField#}
  peek p =
    CThostFtdcParkedOrderField <$>
    (({#get CThostFtdcParkedOrderField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->CurrencyID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->AccountID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->IsSwapOrder#} p) <*>
    (({#get CThostFtdcParkedOrderField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->ErrorID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->Status#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->UserType#} p) <*>
    (({#get CThostFtdcParkedOrderField->ParkedOrderID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->UserForceClose#} p) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->RequestID#} p) <*>
    (({#get CThostFtdcParkedOrderField->BusinessUnit#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->IsAutoSuspend#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->ForceCloseReason#} p) <*>
    fmap realToFrac ({#get CThostFtdcParkedOrderField->StopPrice#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->ContingentCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->MinVolume#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->VolumeCondition#} p) <*>
    (({#get CThostFtdcParkedOrderField->GTDDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->TimeCondition#} p) <*>
    fmap fromIntegral ({#get CThostFtdcParkedOrderField->VolumeTotalOriginal#} p) <*>
    fmap realToFrac ({#get CThostFtdcParkedOrderField->LimitPrice#} p) <*>
    (({#get CThostFtdcParkedOrderField->CombHedgeFlag#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->CombOffsetFlag#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->Direction#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcParkedOrderField->OrderPriceType#} p) <*>
    (({#get CThostFtdcParkedOrderField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->OrderRef#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcParkedOrderField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->InvestUnitID#} p)
    withText (clientID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->ClientID#} p)
    withText (currencyID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->CurrencyID#} p)
    withText (accountID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->AccountID#} p)
    {#set CThostFtdcParkedOrderField->IsSwapOrder#} p (fromIntegral $ isSwapOrder (s :: CThostFtdcParkedOrderField))
    withText (errorMsg (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->ErrorMsg#} p)
    {#set CThostFtdcParkedOrderField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->Status#} p (castCharToCChar $ status (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->UserType#} p (castCharToCChar $ userType (s :: CThostFtdcParkedOrderField))
    withText (parkedOrderID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->ParkedOrderID#} p)
    withText (exchangeID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->ExchangeID#} p)
    {#set CThostFtdcParkedOrderField->UserForceClose#} p (fromIntegral $ userForceClose (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcParkedOrderField))
    withText (businessUnit (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->BusinessUnit#} p)
    {#set CThostFtdcParkedOrderField->IsAutoSuspend#} p (fromIntegral $ isAutoSuspend (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->ForceCloseReason#} p (castCharToCChar $ forceCloseReason (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->StopPrice#} p (realToFrac $ stopPrice (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->ContingentCondition#} p (castCharToCChar $ contingentCondition (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->MinVolume#} p (fromIntegral $ minVolume (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->VolumeCondition#} p (castCharToCChar $ volumeCondition (s :: CThostFtdcParkedOrderField))
    withText (gTDDate (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->GTDDate#} p)
    {#set CThostFtdcParkedOrderField->TimeCondition#} p (castCharToCChar $ timeCondition (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->VolumeTotalOriginal#} p (fromIntegral $ volumeTotalOriginal (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->LimitPrice#} p (realToFrac $ limitPrice (s :: CThostFtdcParkedOrderField))
    withText (combHedgeFlag (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->CombHedgeFlag#} p)
    withText (combOffsetFlag (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->CombOffsetFlag#} p)
    {#set CThostFtdcParkedOrderField->Direction#} p (castCharToCChar $ direction (s :: CThostFtdcParkedOrderField))
    {#set CThostFtdcParkedOrderField->OrderPriceType#} p (castCharToCChar $ orderPriceType (s :: CThostFtdcParkedOrderField))
    withText (userID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->UserID#} p)
    withText (orderRef (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->OrderRef#} p)
    withText (instrumentID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcParkedOrderField)) ({#set CThostFtdcParkedOrderField->BrokerID#} p)

instance Storable CThostFtdcRspQueryAccountField where
  sizeOf _ = {#sizeof CThostFtdcRspQueryAccountField#}
  alignment _ = {#alignof CThostFtdcRspQueryAccountField#}
  peek p =
    CThostFtdcRspQueryAccountField <$>
    fmap realToFrac ({#get CThostFtdcRspQueryAccountField->BankFetchAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspQueryAccountField->BankUseAmount#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryAccountField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryAccountField->RequestID#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryAccountField->InstallID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryAccountField->FutureSerial#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->CustType#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspQueryAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspQueryAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspQueryAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspQueryAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcRspQueryAccountField->BankFetchAmount#} p (realToFrac $ bankFetchAmount (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->BankUseAmount#} p (realToFrac $ bankUseAmount (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcRspQueryAccountField))
    withText (operNo (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->OperNo#} p)
    {#set CThostFtdcRspQueryAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcRspQueryAccountField))
    withText (bankSecuAcc (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcRspQueryAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcRspQueryAccountField))
    withText (deviceID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->DeviceID#} p)
    {#set CThostFtdcRspQueryAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcRspQueryAccountField))
    withText (digest (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->Digest#} p)
    withText (currencyID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->CurrencyID#} p)
    {#set CThostFtdcRspQueryAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcRspQueryAccountField))
    withText (userID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->UserID#} p)
    {#set CThostFtdcRspQueryAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcRspQueryAccountField))
    withText (password (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BankAccount#} p)
    {#set CThostFtdcRspQueryAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcRspQueryAccountField))
    withText (identifiedCardNo (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcRspQueryAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcRspQueryAccountField))
    withText (customerName (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->CustomerName#} p)
    {#set CThostFtdcRspQueryAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspQueryAccountField))
    {#set CThostFtdcRspQueryAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspQueryAccountField))
    withText (tradingDay (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspQueryAccountField)) ({#set CThostFtdcRspQueryAccountField->TradeCode#} p)

instance Storable CThostFtdcAuthenticationInfoField where
  sizeOf _ = {#sizeof CThostFtdcAuthenticationInfoField#}
  alignment _ = {#alignof CThostFtdcAuthenticationInfoField#}
  peek p =
    CThostFtdcAuthenticationInfoField <$>
    fmap fromIntegral ({#get CThostFtdcAuthenticationInfoField->IsResult#} p) <*>
    (({#get CThostFtdcAuthenticationInfoField->AuthInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcAuthenticationInfoField->UserProductInfo#} p) >>= peekText) <*>
    (({#get CThostFtdcAuthenticationInfoField->UserID#} p) >>= peekText) <*>
    (({#get CThostFtdcAuthenticationInfoField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcAuthenticationInfoField->IsResult#} p (fromIntegral $ isResult (s :: CThostFtdcAuthenticationInfoField))
    withText (authInfo (s :: CThostFtdcAuthenticationInfoField)) ({#set CThostFtdcAuthenticationInfoField->AuthInfo#} p)
    withText (userProductInfo (s :: CThostFtdcAuthenticationInfoField)) ({#set CThostFtdcAuthenticationInfoField->UserProductInfo#} p)
    withText (userID (s :: CThostFtdcAuthenticationInfoField)) ({#set CThostFtdcAuthenticationInfoField->UserID#} p)
    withText (brokerID (s :: CThostFtdcAuthenticationInfoField)) ({#set CThostFtdcAuthenticationInfoField->BrokerID#} p)

instance Storable CThostFtdcVerifyFuturePasswordField where
  sizeOf _ = {#sizeof CThostFtdcVerifyFuturePasswordField#}
  alignment _ = {#alignof CThostFtdcVerifyFuturePasswordField#}
  peek p =
    CThostFtdcVerifyFuturePasswordField <$>
    (({#get CThostFtdcVerifyFuturePasswordField->CurrencyID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcVerifyFuturePasswordField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcVerifyFuturePasswordField->InstallID#} p) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BankAccount#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->AccountID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcVerifyFuturePasswordField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcVerifyFuturePasswordField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcVerifyFuturePasswordField->PlateSerial#} p) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcVerifyFuturePasswordField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (currencyID (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->CurrencyID#} p)
    {#set CThostFtdcVerifyFuturePasswordField->TID#} p (fromIntegral $ tID (s :: CThostFtdcVerifyFuturePasswordField))
    {#set CThostFtdcVerifyFuturePasswordField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcVerifyFuturePasswordField))
    withText (bankPassWord (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BankAccount#} p)
    withText (password (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->Password#} p)
    withText (accountID (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->AccountID#} p)
    {#set CThostFtdcVerifyFuturePasswordField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcVerifyFuturePasswordField))
    {#set CThostFtdcVerifyFuturePasswordField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcVerifyFuturePasswordField))
    {#set CThostFtdcVerifyFuturePasswordField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcVerifyFuturePasswordField))
    withText (tradingDay (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcVerifyFuturePasswordField)) ({#set CThostFtdcVerifyFuturePasswordField->TradeCode#} p)

instance Storable CThostFtdcQrySyncFundMortgageField where
  sizeOf _ = {#sizeof CThostFtdcQrySyncFundMortgageField#}
  alignment _ = {#alignof CThostFtdcQrySyncFundMortgageField#}
  peek p =
    CThostFtdcQrySyncFundMortgageField <$>
    (({#get CThostFtdcQrySyncFundMortgageField->MortgageSeqNo#} p) >>= peekText) <*>
    (({#get CThostFtdcQrySyncFundMortgageField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (mortgageSeqNo (s :: CThostFtdcQrySyncFundMortgageField)) ({#set CThostFtdcQrySyncFundMortgageField->MortgageSeqNo#} p)
    withText (brokerID (s :: CThostFtdcQrySyncFundMortgageField)) ({#set CThostFtdcQrySyncFundMortgageField->BrokerID#} p)

instance Storable CThostFtdcReqOpenAccountField where
  sizeOf _ = {#sizeof CThostFtdcReqOpenAccountField#}
  alignment _ = {#alignof CThostFtdcReqOpenAccountField#}
  peek p =
    CThostFtdcReqOpenAccountField <$>
    (({#get CThostFtdcReqOpenAccountField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqOpenAccountField->TID#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->BankAccType#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->Digest#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->CashExchangeCode#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->VerifyCertNoFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqOpenAccountField->InstallID#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->MoneyAccountStatus#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->EMail#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->Fax#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->MobilePhone#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->Telephone#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->ZipCode#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->Address#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->CustType#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->CountryCode#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->Gender#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->IdCardType#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcReqOpenAccountField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcReqOpenAccountField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcReqOpenAccountField->PlateSerial#} p) <*>
    (({#get CThostFtdcReqOpenAccountField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcReqOpenAccountField->TradeCode#} p) >>= peekText)
  poke p s = do
    withText (userID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->UserID#} p)
    {#set CThostFtdcReqOpenAccountField->TID#} p (fromIntegral $ tID (s :: CThostFtdcReqOpenAccountField))
    withText (operNo (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->OperNo#} p)
    {#set CThostFtdcReqOpenAccountField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcReqOpenAccountField))
    {#set CThostFtdcReqOpenAccountField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcReqOpenAccountField))
    withText (bankSecuAcc (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BrokerIDByBank#} p)
    {#set CThostFtdcReqOpenAccountField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcReqOpenAccountField))
    withText (deviceID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->DeviceID#} p)
    {#set CThostFtdcReqOpenAccountField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcReqOpenAccountField))
    withText (digest (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->Digest#} p)
    {#set CThostFtdcReqOpenAccountField->CashExchangeCode#} p (castCharToCChar $ cashExchangeCode (s :: CThostFtdcReqOpenAccountField))
    withText (currencyID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->CurrencyID#} p)
    {#set CThostFtdcReqOpenAccountField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcReqOpenAccountField))
    {#set CThostFtdcReqOpenAccountField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcReqOpenAccountField))
    withText (password (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->Password#} p)
    withText (accountID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BankAccount#} p)
    {#set CThostFtdcReqOpenAccountField->MoneyAccountStatus#} p (castCharToCChar $ moneyAccountStatus (s :: CThostFtdcReqOpenAccountField))
    withText (eMail (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->EMail#} p)
    withText (fax (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->Fax#} p)
    withText (mobilePhone (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->MobilePhone#} p)
    withText (telephone (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->Telephone#} p)
    withText (zipCode (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->ZipCode#} p)
    withText (address (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->Address#} p)
    {#set CThostFtdcReqOpenAccountField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcReqOpenAccountField))
    withText (countryCode (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->CountryCode#} p)
    {#set CThostFtdcReqOpenAccountField->Gender#} p (castCharToCChar $ gender (s :: CThostFtdcReqOpenAccountField))
    withText (identifiedCardNo (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->IdentifiedCardNo#} p)
    {#set CThostFtdcReqOpenAccountField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcReqOpenAccountField))
    withText (customerName (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->CustomerName#} p)
    {#set CThostFtdcReqOpenAccountField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcReqOpenAccountField))
    {#set CThostFtdcReqOpenAccountField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcReqOpenAccountField))
    {#set CThostFtdcReqOpenAccountField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcReqOpenAccountField))
    withText (tradingDay (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcReqOpenAccountField)) ({#set CThostFtdcReqOpenAccountField->TradeCode#} p)

instance Storable CThostFtdcQryTradingNoticeField where
  sizeOf _ = {#sizeof CThostFtdcQryTradingNoticeField#}
  alignment _ = {#alignof CThostFtdcQryTradingNoticeField#}
  peek p =
    CThostFtdcQryTradingNoticeField <$>
    (({#get CThostFtdcQryTradingNoticeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradingNoticeField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (investorID (s :: CThostFtdcQryTradingNoticeField)) ({#set CThostFtdcQryTradingNoticeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryTradingNoticeField)) ({#set CThostFtdcQryTradingNoticeField->BrokerID#} p)

instance Storable CThostFtdcLogoutAllField where
  sizeOf _ = {#sizeof CThostFtdcLogoutAllField#}
  alignment _ = {#alignof CThostFtdcLogoutAllField#}
  peek p =
    CThostFtdcLogoutAllField <$>
    (({#get CThostFtdcLogoutAllField->SystemName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcLogoutAllField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcLogoutAllField->FrontID#} p)
  poke p s = do
    withText (systemName (s :: CThostFtdcLogoutAllField)) ({#set CThostFtdcLogoutAllField->SystemName#} p)
    {#set CThostFtdcLogoutAllField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcLogoutAllField))
    {#set CThostFtdcLogoutAllField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcLogoutAllField))

instance Storable CThostFtdcOptionInstrTradeCostField where
  sizeOf _ = {#sizeof CThostFtdcOptionInstrTradeCostField#}
  alignment _ = {#alignof CThostFtdcOptionInstrTradeCostField#}
  peek p =
    CThostFtdcOptionInstrTradeCostField <$>
    (({#get CThostFtdcOptionInstrTradeCostField->ExchangeID#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrTradeCostField->ExchMiniMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrTradeCostField->ExchFixedMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrTradeCostField->Royalty#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrTradeCostField->MiniMargin#} p) <*>
    fmap realToFrac ({#get CThostFtdcOptionInstrTradeCostField->FixedMargin#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcOptionInstrTradeCostField->HedgeFlag#} p) <*>
    (({#get CThostFtdcOptionInstrTradeCostField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrTradeCostField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcOptionInstrTradeCostField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (exchangeID (s :: CThostFtdcOptionInstrTradeCostField)) ({#set CThostFtdcOptionInstrTradeCostField->ExchangeID#} p)
    {#set CThostFtdcOptionInstrTradeCostField->ExchMiniMargin#} p (realToFrac $ exchMiniMargin (s :: CThostFtdcOptionInstrTradeCostField))
    {#set CThostFtdcOptionInstrTradeCostField->ExchFixedMargin#} p (realToFrac $ exchFixedMargin (s :: CThostFtdcOptionInstrTradeCostField))
    {#set CThostFtdcOptionInstrTradeCostField->Royalty#} p (realToFrac $ royalty (s :: CThostFtdcOptionInstrTradeCostField))
    {#set CThostFtdcOptionInstrTradeCostField->MiniMargin#} p (realToFrac $ miniMargin (s :: CThostFtdcOptionInstrTradeCostField))
    {#set CThostFtdcOptionInstrTradeCostField->FixedMargin#} p (realToFrac $ fixedMargin (s :: CThostFtdcOptionInstrTradeCostField))
    {#set CThostFtdcOptionInstrTradeCostField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcOptionInstrTradeCostField))
    withText (instrumentID (s :: CThostFtdcOptionInstrTradeCostField)) ({#set CThostFtdcOptionInstrTradeCostField->InstrumentID#} p)
    withText (investorID (s :: CThostFtdcOptionInstrTradeCostField)) ({#set CThostFtdcOptionInstrTradeCostField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcOptionInstrTradeCostField)) ({#set CThostFtdcOptionInstrTradeCostField->BrokerID#} p)

instance Storable CThostFtdcRspRepealField where
  sizeOf _ = {#sizeof CThostFtdcRspRepealField#}
  alignment _ = {#alignof CThostFtdcRspRepealField#}
  peek p =
    CThostFtdcRspRepealField <$>
    (({#get CThostFtdcRspRepealField->ErrorMsg#} p) >>= peekGbkText) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->ErrorID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->TransferStatus#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->TID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->RequestID#} p) <*>
    (({#get CThostFtdcRspRepealField->OperNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->SecuPwdFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->BankPwdFlag#} p) <*>
    (({#get CThostFtdcRspRepealField->BankSecuAcc#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BrokerIDByBank#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->BankSecuAccType#} p) <*>
    (({#get CThostFtdcRspRepealField->DeviceID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->BankAccType#} p) <*>
    (({#get CThostFtdcRspRepealField->Digest#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->Message#} p) >>= peekText) <*>
    fmap realToFrac ({#get CThostFtdcRspRepealField->BrokerFee#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspRepealField->CustFee#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->FeePayFlag#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspRepealField->FutureFetchAmount#} p) <*>
    fmap realToFrac ({#get CThostFtdcRspRepealField->TradeAmount#} p) <*>
    (({#get CThostFtdcRspRepealField->CurrencyID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->VerifyCertNoFlag#} p) <*>
    (({#get CThostFtdcRspRepealField->UserID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->FutureSerial#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->InstallID#} p) <*>
    (({#get CThostFtdcRspRepealField->Password#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->AccountID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BankPassWord#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BankAccount#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->CustType#} p) <*>
    (({#get CThostFtdcRspRepealField->IdentifiedCardNo#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->IdCardType#} p) <*>
    (({#get CThostFtdcRspRepealField->CustomerName#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->SessionID#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->LastFragment#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->PlateSerial#} p) <*>
    (({#get CThostFtdcRspRepealField->TradingDay#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BankSerial#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->TradeTime#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->TradeDate#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BrokerBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BrokerID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BankBranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->BankID#} p) >>= peekText) <*>
    (({#get CThostFtdcRspRepealField->TradeCode#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->FutureRepealSerial#} p) <*>
    (({#get CThostFtdcRspRepealField->BankRepealSerial#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->PlateRepealSerial#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->BrokerRepealFlag#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcRspRepealField->BankRepealFlag#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->RepealedTimes#} p) <*>
    fmap fromIntegral ({#get CThostFtdcRspRepealField->RepealTimeInterval#} p)
  poke p s = do
    withText (errorMsg (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->ErrorMsg#} p)
    {#set CThostFtdcRspRepealField->ErrorID#} p (fromIntegral $ errorID (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->TransferStatus#} p (castCharToCChar $ transferStatus (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->TID#} p (fromIntegral $ tID (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcRspRepealField))
    withText (operNo (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->OperNo#} p)
    {#set CThostFtdcRspRepealField->SecuPwdFlag#} p (castCharToCChar $ secuPwdFlag (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->BankPwdFlag#} p (castCharToCChar $ bankPwdFlag (s :: CThostFtdcRspRepealField))
    withText (bankSecuAcc (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankSecuAcc#} p)
    withText (brokerIDByBank (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BrokerIDByBank#} p)
    {#set CThostFtdcRspRepealField->BankSecuAccType#} p (castCharToCChar $ bankSecuAccType (s :: CThostFtdcRspRepealField))
    withText (deviceID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->DeviceID#} p)
    {#set CThostFtdcRspRepealField->BankAccType#} p (castCharToCChar $ bankAccType (s :: CThostFtdcRspRepealField))
    withText (digest (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->Digest#} p)
    withText (message (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->Message#} p)
    {#set CThostFtdcRspRepealField->BrokerFee#} p (realToFrac $ brokerFee (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->CustFee#} p (realToFrac $ custFee (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->FeePayFlag#} p (castCharToCChar $ feePayFlag (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->FutureFetchAmount#} p (realToFrac $ futureFetchAmount (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->TradeAmount#} p (realToFrac $ tradeAmount (s :: CThostFtdcRspRepealField))
    withText (currencyID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->CurrencyID#} p)
    {#set CThostFtdcRspRepealField->VerifyCertNoFlag#} p (castCharToCChar $ verifyCertNoFlag (s :: CThostFtdcRspRepealField))
    withText (userID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->UserID#} p)
    {#set CThostFtdcRspRepealField->FutureSerial#} p (fromIntegral $ futureSerial (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcRspRepealField))
    withText (password (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->Password#} p)
    withText (accountID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->AccountID#} p)
    withText (bankPassWord (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankPassWord#} p)
    withText (bankAccount (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankAccount#} p)
    {#set CThostFtdcRspRepealField->CustType#} p (castCharToCChar $ custType (s :: CThostFtdcRspRepealField))
    withText (identifiedCardNo (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->IdentifiedCardNo#} p)
    {#set CThostFtdcRspRepealField->IdCardType#} p (castCharToCChar $ idCardType (s :: CThostFtdcRspRepealField))
    withText (customerName (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->CustomerName#} p)
    {#set CThostFtdcRspRepealField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->LastFragment#} p (castCharToCChar $ lastFragment (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->PlateSerial#} p (fromIntegral $ plateSerial (s :: CThostFtdcRspRepealField))
    withText (tradingDay (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->TradingDay#} p)
    withText (bankSerial (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankSerial#} p)
    withText (tradeTime (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->TradeTime#} p)
    withText (tradeDate (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->TradeDate#} p)
    withText (brokerBranchID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BrokerBranchID#} p)
    withText (brokerID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BrokerID#} p)
    withText (bankBranchID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankBranchID#} p)
    withText (bankID (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankID#} p)
    withText (tradeCode (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->TradeCode#} p)
    {#set CThostFtdcRspRepealField->FutureRepealSerial#} p (fromIntegral $ futureRepealSerial (s :: CThostFtdcRspRepealField))
    withText (bankRepealSerial (s :: CThostFtdcRspRepealField)) ({#set CThostFtdcRspRepealField->BankRepealSerial#} p)
    {#set CThostFtdcRspRepealField->PlateRepealSerial#} p (fromIntegral $ plateRepealSerial (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->BrokerRepealFlag#} p (castCharToCChar $ brokerRepealFlag (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->BankRepealFlag#} p (castCharToCChar $ bankRepealFlag (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->RepealedTimes#} p (fromIntegral $ repealedTimes (s :: CThostFtdcRspRepealField))
    {#set CThostFtdcRspRepealField->RepealTimeInterval#} p (fromIntegral $ repealTimeInterval (s :: CThostFtdcRspRepealField))

instance Storable CThostFtdcQryTradingCodeField where
  sizeOf _ = {#sizeof CThostFtdcQryTradingCodeField#}
  alignment _ = {#alignof CThostFtdcQryTradingCodeField#}
  peek p =
    CThostFtdcQryTradingCodeField <$>
    fmap castCCharToChar ({#get CThostFtdcQryTradingCodeField->ClientIDType#} p) <*>
    (({#get CThostFtdcQryTradingCodeField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradingCodeField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradingCodeField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTradingCodeField->BrokerID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcQryTradingCodeField->ClientIDType#} p (castCharToCChar $ clientIDType (s :: CThostFtdcQryTradingCodeField))
    withText (clientID (s :: CThostFtdcQryTradingCodeField)) ({#set CThostFtdcQryTradingCodeField->ClientID#} p)
    withText (exchangeID (s :: CThostFtdcQryTradingCodeField)) ({#set CThostFtdcQryTradingCodeField->ExchangeID#} p)
    withText (investorID (s :: CThostFtdcQryTradingCodeField)) ({#set CThostFtdcQryTradingCodeField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQryTradingCodeField)) ({#set CThostFtdcQryTradingCodeField->BrokerID#} p)

instance Storable CThostFtdcQryTransferBankField where
  sizeOf _ = {#sizeof CThostFtdcQryTransferBankField#}
  alignment _ = {#alignof CThostFtdcQryTransferBankField#}
  peek p =
    CThostFtdcQryTransferBankField <$>
    (({#get CThostFtdcQryTransferBankField->BankBrchID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryTransferBankField->BankID#} p) >>= peekText)
  poke p s = do
    withText (bankBrchID (s :: CThostFtdcQryTransferBankField)) ({#set CThostFtdcQryTransferBankField->BankBrchID#} p)
    withText (bankID (s :: CThostFtdcQryTransferBankField)) ({#set CThostFtdcQryTransferBankField->BankID#} p)

instance Storable CThostFtdcQryBrokerField where
  sizeOf _ = {#sizeof CThostFtdcQryBrokerField#}
  alignment _ = {#alignof CThostFtdcQryBrokerField#}
  peek p =
    CThostFtdcQryBrokerField <$>
    (({#get CThostFtdcQryBrokerField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcQryBrokerField)) ({#set CThostFtdcQryBrokerField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeOrderField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeOrderField#}
  alignment _ = {#alignof CThostFtdcQryExchangeOrderField#}
  peek p =
    CThostFtdcQryExchangeOrderField <$>
    (({#get CThostFtdcQryExchangeOrderField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeOrderField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeOrderField)) ({#set CThostFtdcQryExchangeOrderField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeOrderField)) ({#set CThostFtdcQryExchangeOrderField->ExchangeID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryExchangeOrderField)) ({#set CThostFtdcQryExchangeOrderField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeOrderField)) ({#set CThostFtdcQryExchangeOrderField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeOrderField)) ({#set CThostFtdcQryExchangeOrderField->ParticipantID#} p)

instance Storable CThostFtdcInstrumentMarginRateField where
  sizeOf _ = {#sizeof CThostFtdcInstrumentMarginRateField#}
  alignment _ = {#alignof CThostFtdcInstrumentMarginRateField#}
  peek p =
    CThostFtdcInstrumentMarginRateField <$>
    fmap fromIntegral ({#get CThostFtdcInstrumentMarginRateField->IsRelative#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateField->ShortMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateField->ShortMarginRatioByMoney#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateField->LongMarginRatioByVolume#} p) <*>
    fmap realToFrac ({#get CThostFtdcInstrumentMarginRateField->LongMarginRatioByMoney#} p) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentMarginRateField->HedgeFlag#} p) <*>
    (({#get CThostFtdcInstrumentMarginRateField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcInstrumentMarginRateField->BrokerID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcInstrumentMarginRateField->InvestorRange#} p) <*>
    (({#get CThostFtdcInstrumentMarginRateField->InstrumentID#} p) >>= peekText)
  poke p s = do
    {#set CThostFtdcInstrumentMarginRateField->IsRelative#} p (fromIntegral $ isRelative (s :: CThostFtdcInstrumentMarginRateField))
    {#set CThostFtdcInstrumentMarginRateField->ShortMarginRatioByVolume#} p (realToFrac $ shortMarginRatioByVolume (s :: CThostFtdcInstrumentMarginRateField))
    {#set CThostFtdcInstrumentMarginRateField->ShortMarginRatioByMoney#} p (realToFrac $ shortMarginRatioByMoney (s :: CThostFtdcInstrumentMarginRateField))
    {#set CThostFtdcInstrumentMarginRateField->LongMarginRatioByVolume#} p (realToFrac $ longMarginRatioByVolume (s :: CThostFtdcInstrumentMarginRateField))
    {#set CThostFtdcInstrumentMarginRateField->LongMarginRatioByMoney#} p (realToFrac $ longMarginRatioByMoney (s :: CThostFtdcInstrumentMarginRateField))
    {#set CThostFtdcInstrumentMarginRateField->HedgeFlag#} p (castCharToCChar $ hedgeFlag (s :: CThostFtdcInstrumentMarginRateField))
    withText (investorID (s :: CThostFtdcInstrumentMarginRateField)) ({#set CThostFtdcInstrumentMarginRateField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcInstrumentMarginRateField)) ({#set CThostFtdcInstrumentMarginRateField->BrokerID#} p)
    {#set CThostFtdcInstrumentMarginRateField->InvestorRange#} p (castCharToCChar $ investorRange (s :: CThostFtdcInstrumentMarginRateField))
    withText (instrumentID (s :: CThostFtdcInstrumentMarginRateField)) ({#set CThostFtdcInstrumentMarginRateField->InstrumentID#} p)

instance Storable CThostFtdcQuoteActionField where
  sizeOf _ = {#sizeof CThostFtdcQuoteActionField#}
  alignment _ = {#alignof CThostFtdcQuoteActionField#}
  peek p =
    CThostFtdcQuoteActionField <$>
    (({#get CThostFtdcQuoteActionField->MacAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->IPAddress#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->InvestUnitID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->BranchID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->InstrumentID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->StatusMsg#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->UserID#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteActionField->OrderActionStatus#} p) <*>
    (({#get CThostFtdcQuoteActionField->BusinessUnit#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->ParticipantID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->ActionLocalID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->QuoteLocalID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteActionField->InstallID#} p) <*>
    (({#get CThostFtdcQuoteActionField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->ActionTime#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->ActionDate#} p) >>= peekText) <*>
    fmap castCCharToChar ({#get CThostFtdcQuoteActionField->ActionFlag#} p) <*>
    (({#get CThostFtdcQuoteActionField->QuoteSysID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->ExchangeID#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteActionField->SessionID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteActionField->FrontID#} p) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteActionField->RequestID#} p) <*>
    (({#get CThostFtdcQuoteActionField->QuoteRef#} p) >>= peekText) <*>
    fmap fromIntegral ({#get CThostFtdcQuoteActionField->QuoteActionRef#} p) <*>
    (({#get CThostFtdcQuoteActionField->InvestorID#} p) >>= peekText) <*>
    (({#get CThostFtdcQuoteActionField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (macAddress (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->MacAddress#} p)
    withText (iPAddress (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->IPAddress#} p)
    withText (investUnitID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->InvestUnitID#} p)
    withText (branchID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->BranchID#} p)
    withText (instrumentID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->InstrumentID#} p)
    withText (statusMsg (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->StatusMsg#} p)
    withText (userID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->UserID#} p)
    {#set CThostFtdcQuoteActionField->OrderActionStatus#} p (castCharToCChar $ orderActionStatus (s :: CThostFtdcQuoteActionField))
    withText (businessUnit (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->BusinessUnit#} p)
    withText (clientID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->ParticipantID#} p)
    withText (actionLocalID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->ActionLocalID#} p)
    withText (quoteLocalID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->QuoteLocalID#} p)
    {#set CThostFtdcQuoteActionField->InstallID#} p (fromIntegral $ installID (s :: CThostFtdcQuoteActionField))
    withText (traderID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->TraderID#} p)
    withText (actionTime (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->ActionTime#} p)
    withText (actionDate (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->ActionDate#} p)
    {#set CThostFtdcQuoteActionField->ActionFlag#} p (castCharToCChar $ actionFlag (s :: CThostFtdcQuoteActionField))
    withText (quoteSysID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->QuoteSysID#} p)
    withText (exchangeID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->ExchangeID#} p)
    {#set CThostFtdcQuoteActionField->SessionID#} p (fromIntegral $ sessionID (s :: CThostFtdcQuoteActionField))
    {#set CThostFtdcQuoteActionField->FrontID#} p (fromIntegral $ frontID (s :: CThostFtdcQuoteActionField))
    {#set CThostFtdcQuoteActionField->RequestID#} p (fromIntegral $ requestID (s :: CThostFtdcQuoteActionField))
    withText (quoteRef (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->QuoteRef#} p)
    {#set CThostFtdcQuoteActionField->QuoteActionRef#} p (fromIntegral $ quoteActionRef (s :: CThostFtdcQuoteActionField))
    withText (investorID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->InvestorID#} p)
    withText (brokerID (s :: CThostFtdcQuoteActionField)) ({#set CThostFtdcQuoteActionField->BrokerID#} p)

instance Storable CThostFtdcQryMarginModelField where
  sizeOf _ = {#sizeof CThostFtdcQryMarginModelField#}
  alignment _ = {#alignof CThostFtdcQryMarginModelField#}
  peek p =
    CThostFtdcQryMarginModelField <$>
    (({#get CThostFtdcQryMarginModelField->MarginModelID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryMarginModelField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (marginModelID (s :: CThostFtdcQryMarginModelField)) ({#set CThostFtdcQryMarginModelField->MarginModelID#} p)
    withText (brokerID (s :: CThostFtdcQryMarginModelField)) ({#set CThostFtdcQryMarginModelField->BrokerID#} p)

instance Storable CThostFtdcLoadSettlementInfoField where
  sizeOf _ = {#sizeof CThostFtdcLoadSettlementInfoField#}
  alignment _ = {#alignof CThostFtdcLoadSettlementInfoField#}
  peek p =
    CThostFtdcLoadSettlementInfoField <$>
    (({#get CThostFtdcLoadSettlementInfoField->BrokerID#} p) >>= peekText)
  poke p s = do
    withText (brokerID (s :: CThostFtdcLoadSettlementInfoField)) ({#set CThostFtdcLoadSettlementInfoField->BrokerID#} p)

instance Storable CThostFtdcQryExchangeForQuoteField where
  sizeOf _ = {#sizeof CThostFtdcQryExchangeForQuoteField#}
  alignment _ = {#alignof CThostFtdcQryExchangeForQuoteField#}
  peek p =
    CThostFtdcQryExchangeForQuoteField <$>
    (({#get CThostFtdcQryExchangeForQuoteField->TraderID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeForQuoteField->ExchangeID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeForQuoteField->ExchangeInstID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeForQuoteField->ClientID#} p) >>= peekText) <*>
    (({#get CThostFtdcQryExchangeForQuoteField->ParticipantID#} p) >>= peekText)
  poke p s = do
    withText (traderID (s :: CThostFtdcQryExchangeForQuoteField)) ({#set CThostFtdcQryExchangeForQuoteField->TraderID#} p)
    withText (exchangeID (s :: CThostFtdcQryExchangeForQuoteField)) ({#set CThostFtdcQryExchangeForQuoteField->ExchangeID#} p)
    withText (exchangeInstID (s :: CThostFtdcQryExchangeForQuoteField)) ({#set CThostFtdcQryExchangeForQuoteField->ExchangeInstID#} p)
    withText (clientID (s :: CThostFtdcQryExchangeForQuoteField)) ({#set CThostFtdcQryExchangeForQuoteField->ClientID#} p)
    withText (participantID (s :: CThostFtdcQryExchangeForQuoteField)) ({#set CThostFtdcQryExchangeForQuoteField->ParticipantID#} p)

